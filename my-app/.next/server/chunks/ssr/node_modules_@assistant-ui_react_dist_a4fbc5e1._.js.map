{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/internal.ts"],"sourcesContent":["export type { ThreadRuntimeCore } from \"./runtimes/core/ThreadRuntimeCore\";\nexport type { ThreadListRuntimeCore } from \"./runtimes/core/ThreadListRuntimeCore\";\nexport { DefaultThreadComposerRuntimeCore } from \"./runtimes/composer/DefaultThreadComposerRuntimeCore\";\nexport { CompositeContextProvider } from \"./utils/CompositeContextProvider\";\nexport { MessageRepository } from \"./runtimes/utils/MessageRepository\";\nexport { BaseAssistantRuntimeCore } from \"./runtimes/core/BaseAssistantRuntimeCore\";\nexport { generateId } from \"./utils/idUtils\";\nexport { AssistantRuntimeImpl } from \"./api/AssistantRuntime\";\nexport {\n  ThreadRuntimeImpl,\n  type ThreadRuntimeCoreBinding,\n  type ThreadListItemRuntimeBinding,\n} from \"./api/ThreadRuntime\";\nexport { fromThreadMessageLike } from \"./runtimes/external-store/ThreadMessageLike\";\nexport { getAutoStatus } from \"./runtimes/external-store/auto-status\";\nexport { splitLocalRuntimeOptions } from \"./runtimes/local/LocalRuntimeOptions\";\n\nexport * from \"./utils/smooth\";\n"],"names":[],"mappings":"","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/runtimes/remote-thread-list/BaseSubscribable.tsx"],"sourcesContent":["import { Unsubscribe } from \"../../types\";\n\nexport class BaseSubscribable {\n  private _subscribers = new Set<() => void>();\n\n  public subscribe(callback: () => void): Unsubscribe {\n    this._subscribers.add(callback);\n    return () => this._subscribers.delete(callback);\n  }\n\n  public waitForUpdate() {\n    return new Promise<void>((resolve) => {\n      const unsubscribe = this.subscribe(() => {\n        unsubscribe();\n        resolve();\n      });\n    });\n  }\n\n  protected _notifySubscribers() {\n    const errors = [];\n    for (const callback of this._subscribers) {\n      try {\n        callback();\n      } catch (error) {\n        errors.push(error);\n      }\n    }\n\n    if (errors.length > 0) {\n      if (errors.length === 1) {\n        throw errors[0];\n      } else {\n        throw new AggregateError(errors);\n      }\n    }\n  }\n}\n"],"names":[],"mappings":";;;;AAEO,IAAM,mBAAN,MAAuB;IACpB,eAAe,aAAA,GAAA,IAAI,IAAgB,EAAA;IAEpC,UAAU,QAAA,EAAmC;QAClD,IAAA,CAAK,YAAA,CAAa,GAAA,CAAI,QAAQ;QAC9B,OAAO,IAAM,IAAA,CAAK,YAAA,CAAa,MAAA,CAAO,QAAQ;IAChD;IAEO,gBAAgB;QACrB,OAAO,IAAI,QAAc,CAAC,YAAY;YACpC,MAAM,cAAc,IAAA,CAAK,SAAA,CAAU,MAAM;gBACvC,YAAY;gBACZ,QAAQ;YACV,CAAC;QACH,CAAC;IACH;IAEU,qBAAqB;QAC7B,MAAM,SAAS,CAAC,CAAA;QAChB,KAAA,MAAW,YAAY,IAAA,CAAK,YAAA,CAAc;YACxC,IAAI;gBACF,SAAS;YACX,EAAA,OAAS,OAAO;gBACd,OAAO,IAAA,CAAK,KAAK;YACnB;QACF;QAEA,IAAI,OAAO,MAAA,GAAS,GAAG;YACrB,IAAI,OAAO,MAAA,KAAW,GAAG;gBACvB,MAAM,MAAA,CAAO,CAAC,CAAA;YAChB,OAAO;gBACL,MAAM,IAAI,eAAe,MAAM;YACjC;QACF;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/runtimes/composer/BaseComposerRuntimeCore.tsx"],"sourcesContent":["import {\n  Attachment,\n  CompleteAttachment,\n  PendingAttachment,\n} from \"../../types/AttachmentTypes\";\nimport { AppendMessage } from \"../../types\";\nimport { AttachmentAdapter } from \"../adapters/attachment\";\nimport {\n  ComposerRuntimeCore,\n  ComposerRuntimeEventType,\n} from \"../core/ComposerRuntimeCore\";\nimport { MessageRole, RunConfig } from \"../../types/AssistantTypes\";\nimport { BaseSubscribable } from \"../remote-thread-list/BaseSubscribable\";\n\nconst isAttachmentComplete = (a: Attachment): a is CompleteAttachment =>\n  a.status.type === \"complete\";\n\nexport abstract class BaseComposerRuntimeCore\n  extends BaseSubscribable\n  implements ComposerRuntimeCore\n{\n  public readonly isEditing = true;\n\n  protected abstract getAttachmentAdapter(): AttachmentAdapter | undefined;\n\n  public getAttachmentAccept(): string {\n    return this.getAttachmentAdapter()?.accept ?? \"*\";\n  }\n\n  private _attachments: readonly Attachment[] = [];\n  public get attachments() {\n    return this._attachments;\n  }\n\n  protected setAttachments(value: readonly Attachment[]) {\n    this._attachments = value;\n    this._notifySubscribers();\n  }\n\n  public abstract get canCancel(): boolean;\n\n  public get isEmpty() {\n    return !this.text.trim() && !this.attachments.length;\n  }\n\n  private _text = \"\";\n\n  get text() {\n    return this._text;\n  }\n\n  private _role: MessageRole = \"user\";\n\n  get role() {\n    return this._role;\n  }\n\n  private _runConfig: RunConfig = {};\n\n  get runConfig() {\n    return this._runConfig;\n  }\n\n  public setText(value: string) {\n    if (this._text === value) return;\n\n    this._text = value;\n    this._notifySubscribers();\n  }\n\n  public setRole(role: MessageRole) {\n    if (this._role === role) return;\n\n    this._role = role;\n    this._notifySubscribers();\n  }\n\n  public setRunConfig(runConfig: RunConfig) {\n    if (this._runConfig === runConfig) return;\n\n    this._runConfig = runConfig;\n    this._notifySubscribers();\n  }\n\n  private _emptyTextAndAttachments() {\n    this._attachments = [];\n    this._text = \"\";\n    this._notifySubscribers();\n  }\n\n  private async _onClearAttachments() {\n    const adapter = this.getAttachmentAdapter();\n    if (adapter) {\n      await Promise.all(this._attachments.map((a) => adapter.remove(a)));\n    }\n  }\n\n  public async reset() {\n    if (\n      this._attachments.length === 0 &&\n      this._text === \"\" &&\n      this._role === \"user\" &&\n      Object.keys(this._runConfig).length === 0\n    ) {\n      return;\n    }\n\n    this._role = \"user\";\n    this._runConfig = {};\n\n    const task = this._onClearAttachments();\n    this._emptyTextAndAttachments();\n    await task;\n  }\n\n  public async clearAttachments() {\n    const task = this._onClearAttachments();\n    this.setAttachments([]);\n\n    await task;\n  }\n\n  public async send() {\n    const adapter = this.getAttachmentAdapter();\n    const attachments =\n      adapter && this.attachments.length > 0\n        ? await Promise.all(\n            this.attachments.map(async (a) => {\n              if (isAttachmentComplete(a)) return a;\n              const result = await adapter.send(a);\n              return result as CompleteAttachment;\n            }),\n          )\n        : [];\n\n    const message: Omit<AppendMessage, \"parentId\" | \"sourceId\"> = {\n      createdAt: new Date(),\n      role: this.role,\n      content: this.text ? [{ type: \"text\", text: this.text }] : [],\n      attachments,\n      runConfig: this.runConfig,\n      metadata: { custom: {} },\n    };\n    this._emptyTextAndAttachments();\n\n    this.handleSend(message);\n    this._notifyEventSubscribers(\"send\");\n  }\n\n  public cancel() {\n    this.handleCancel();\n  }\n\n  protected abstract handleSend(\n    message: Omit<AppendMessage, \"parentId\" | \"sourceId\">,\n  ): void;\n  protected abstract handleCancel(): void;\n\n  async addAttachment(file: File) {\n    const adapter = this.getAttachmentAdapter();\n    if (!adapter) throw new Error(\"Attachments are not supported\");\n\n    const upsertAttachment = (a: PendingAttachment) => {\n      const idx = this._attachments.findIndex(\n        (attachment) => attachment.id === a.id,\n      );\n      if (idx !== -1)\n        this._attachments = [\n          ...this._attachments.slice(0, idx),\n          a,\n          ...this._attachments.slice(idx + 1),\n        ];\n      else {\n        this._attachments = [...this._attachments, a];\n        this._notifyEventSubscribers(\"attachment_add\");\n      }\n\n      this._notifySubscribers();\n    };\n\n    const promiseOrGenerator = adapter.add({ file });\n    if (Symbol.asyncIterator in promiseOrGenerator) {\n      for await (const r of promiseOrGenerator) {\n        upsertAttachment(r);\n      }\n    } else {\n      upsertAttachment(await promiseOrGenerator);\n    }\n\n    this._notifyEventSubscribers(\"attachment_add\");\n    this._notifySubscribers();\n  }\n\n  async removeAttachment(attachmentId: string) {\n    const adapter = this.getAttachmentAdapter();\n    if (!adapter) throw new Error(\"Attachments are not supported\");\n\n    const index = this._attachments.findIndex((a) => a.id === attachmentId);\n    if (index === -1) throw new Error(\"Attachment not found\");\n    const attachment = this._attachments[index]!;\n\n    await adapter.remove(attachment);\n\n    // this._attachments.toSpliced(index, 1); - not yet widely supported\n    this._attachments = [\n      ...this._attachments.slice(0, index),\n      ...this._attachments.slice(index + 1),\n    ];\n    this._notifySubscribers();\n  }\n\n  private _eventSubscribers = new Map<\n    ComposerRuntimeEventType,\n    Set<() => void>\n  >();\n\n  protected _notifyEventSubscribers(event: ComposerRuntimeEventType) {\n    const subscribers = this._eventSubscribers.get(event);\n    if (!subscribers) return;\n\n    for (const callback of subscribers) callback();\n  }\n\n  public unstable_on(event: ComposerRuntimeEventType, callback: () => void) {\n    const subscribers = this._eventSubscribers.get(event);\n    if (!subscribers) {\n      this._eventSubscribers.set(event, new Set([callback]));\n    } else {\n      subscribers.add(callback);\n    }\n\n    return () => {\n      const subscribers = this._eventSubscribers.get(event);\n      if (!subscribers) return;\n      subscribers.delete(callback);\n    };\n  }\n}\n"],"names":["subscribers"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/runtimes/composer/DefaultThreadComposerRuntimeCore.tsx"],"sourcesContent":["import { AppendMessage, PendingAttachment } from \"../../types\";\nimport { AttachmentAdapter } from \"../adapters/attachment\";\nimport { ThreadComposerRuntimeCore } from \"../core/ComposerRuntimeCore\";\nimport { ThreadRuntimeCore } from \"../core/ThreadRuntimeCore\";\nimport { BaseComposerRuntimeCore } from \"./BaseComposerRuntimeCore\";\n\nexport class DefaultThreadComposerRuntimeCore\n  extends BaseComposerRuntimeCore\n  implements ThreadComposerRuntimeCore\n{\n  private _canCancel = false;\n  public get canCancel() {\n    return this._canCancel;\n  }\n\n  public override get attachments(): readonly PendingAttachment[] {\n    return super.attachments as readonly PendingAttachment[];\n  }\n\n  protected getAttachmentAdapter() {\n    return this.runtime.adapters?.attachments;\n  }\n\n  constructor(\n    private runtime: Omit<ThreadRuntimeCore, \"composer\"> & {\n      adapters?: { attachments?: AttachmentAdapter | undefined } | undefined;\n    },\n  ) {\n    super();\n    this.connect();\n  }\n\n  public connect() {\n    return this.runtime.subscribe(() => {\n      if (this.canCancel !== this.runtime.capabilities.cancel) {\n        this._canCancel = this.runtime.capabilities.cancel;\n        this._notifySubscribers();\n      }\n    });\n  }\n\n  public async handleSend(\n    message: Omit<AppendMessage, \"parentId\" | \"sourceId\">,\n  ) {\n    this.runtime.append({\n      ...(message as AppendMessage),\n      parentId: this.runtime.messages.at(-1)?.id ?? null,\n      sourceId: null,\n    });\n  }\n\n  public async handleCancel() {\n    this.runtime.cancelRun();\n  }\n}\n"],"names":[],"mappings":";;;;AAIA,SAAS,+BAA+B;;AAEjC,IAAM,mCAAN,oNACG,0BAAA,CAEV;IAcE,YACU,OAAA,CAGR;QACA,KAAA,CAAM;QAJE,IAAA,CAAA,OAAA,GAAA;QAKR,IAAA,CAAK,OAAA,CAAQ;IACf;IApBQ,aAAa,MAAA;IACrB,IAAW,YAAY;QACrB,OAAO,IAAA,CAAK,UAAA;IACd;IAEA,IAAoB,cAA4C;QAC9D,OAAO,KAAA,CAAM;IACf;IAEU,uBAAuB;QAC/B,OAAO,IAAA,CAAK,OAAA,CAAQ,QAAA,EAAU;IAChC;IAWO,UAAU;QACf,OAAO,IAAA,CAAK,OAAA,CAAQ,SAAA,CAAU,MAAM;YAClC,IAAI,IAAA,CAAK,SAAA,KAAc,IAAA,CAAK,OAAA,CAAQ,YAAA,CAAa,MAAA,EAAQ;gBACvD,IAAA,CAAK,UAAA,GAAa,IAAA,CAAK,OAAA,CAAQ,YAAA,CAAa,MAAA;gBAC5C,IAAA,CAAK,kBAAA,CAAmB;YAC1B;QACF,CAAC;IACH;IAEA,MAAa,WACX,OAAA,EACA;QACA,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;YAClB,GAAI,OAAA;YACJ,UAAU,IAAA,CAAK,OAAA,CAAQ,QAAA,CAAS,EAAA,CAAG,CAAA,CAAE,GAAG,MAAM;YAC9C,UAAU;QACZ,CAAC;IACH;IAEA,MAAa,eAAe;QAC1B,IAAA,CAAK,OAAA,CAAQ,SAAA,CAAU;IACzB;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/model-context/ModelContextTypes.ts"],"sourcesContent":["import { Unsubscribe } from \"../types/Unsubscribe\";\nimport { Tool } from \"assistant-stream\";\n\nexport type LanguageModelV1CallSettings = {\n  maxTokens?: number;\n  temperature?: number;\n  topP?: number;\n  presencePenalty?: number;\n  frequencyPenalty?: number;\n  seed?: number;\n  headers?: Record<string, string | undefined>;\n};\n\nexport type LanguageModelConfig = {\n  apiKey?: string;\n  baseUrl?: string;\n  modelName?: string;\n};\n\nexport type ModelContext = {\n  priority?: number | undefined;\n  system?: string | undefined;\n  tools?: Record<string, Tool<any, any>> | undefined;\n  callSettings?: LanguageModelV1CallSettings | undefined;\n  config?: LanguageModelConfig | undefined;\n};\n\nexport type ModelContextProvider = {\n  getModelContext: () => ModelContext;\n  subscribe?: (callback: () => void) => Unsubscribe;\n};\n\nexport const mergeModelContexts = (\n  configSet: Set<ModelContextProvider>,\n): ModelContext => {\n  const configs = Array.from(configSet)\n    .map((c) => c.getModelContext())\n    .sort((a, b) => (b.priority ?? 0) - (a.priority ?? 0));\n\n  return configs.reduce((acc, config) => {\n    if (config.system) {\n      if (acc.system) {\n        // TODO should the separator be configurable?\n        acc.system += `\\n\\n${config.system}`;\n      } else {\n        acc.system = config.system;\n      }\n    }\n    if (config.tools) {\n      for (const [name, tool] of Object.entries(config.tools)) {\n        const existing = acc.tools?.[name];\n        if (existing && existing !== tool) {\n          throw new Error(\n            `You tried to define a tool with the name ${name}, but it already exists.`,\n          );\n        }\n\n        if (!acc.tools) acc.tools = {};\n        acc.tools[name] = tool;\n      }\n    }\n    if (config.config) {\n      acc.config = {\n        ...acc.config,\n        ...config.config,\n      };\n    }\n    if (config.callSettings) {\n      acc.callSettings = {\n        ...acc.callSettings,\n        ...config.callSettings,\n      };\n    }\n    return acc;\n  }, {} as ModelContext);\n};\n"],"names":[],"mappings":";;;;AAgCO,IAAM,qBAAqB,CAChC,cACiB;IACjB,MAAM,UAAU,MAAM,IAAA,CAAK,SAAS,EACjC,GAAA,CAAI,CAAC,IAAM,EAAE,eAAA,CAAgB,CAAC,EAC9B,IAAA,CAAK,CAAC,GAAG,IAAA,CAAO,EAAE,QAAA,IAAY,CAAA,IAAA,CAAM,EAAE,QAAA,IAAY,CAAA,CAAE;IAEvD,OAAO,QAAQ,MAAA,CAAO,CAAC,KAAK,WAAW;QACrC,IAAI,OAAO,MAAA,EAAQ;YACjB,IAAI,IAAI,MAAA,EAAQ;gBAEd,IAAI,MAAA,IAAU,CAAA;;AAAA,EAAO,OAAO,MAAM,EAAA;YACpC,OAAO;gBACL,IAAI,MAAA,GAAS,OAAO,MAAA;YACtB;QACF;QACA,IAAI,OAAO,KAAA,EAAO;YAChB,KAAA,MAAW,CAAC,MAAM,IAAI,CAAA,IAAK,OAAO,OAAA,CAAQ,OAAO,KAAK,EAAG;gBACvD,MAAM,WAAW,IAAI,KAAA,EAAA,CAAQ,IAAI,CAAA;gBACjC,IAAI,YAAY,aAAa,MAAM;oBACjC,MAAM,IAAI,MACR,CAAA,yCAAA,EAA4C,IAAI,CAAA,wBAAA,CAAA;gBAEpD;gBAEA,IAAI,CAAC,IAAI,KAAA,CAAO,CAAA,IAAI,KAAA,GAAQ,CAAC;gBAC7B,IAAI,KAAA,CAAM,IAAI,CAAA,GAAI;YACpB;QACF;QACA,IAAI,OAAO,MAAA,EAAQ;YACjB,IAAI,MAAA,GAAS;gBACX,GAAG,IAAI,MAAA;gBACP,GAAG,OAAO,MAAA;YACZ;QACF;QACA,IAAI,OAAO,YAAA,EAAc;YACvB,IAAI,YAAA,GAAe;gBACjB,GAAG,IAAI,YAAA;gBACP,GAAG,OAAO,YAAA;YACZ;QACF;QACA,OAAO;IACT,GAAG,CAAC,CAAiB;AACvB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 358, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/utils/CompositeContextProvider.ts"],"sourcesContent":["import {\n  type ModelContextProvider,\n  mergeModelContexts,\n} from \"../model-context/ModelContextTypes\";\n\nexport class CompositeContextProvider implements ModelContextProvider {\n  private _providers = new Set<ModelContextProvider>();\n\n  getModelContext() {\n    return mergeModelContexts(this._providers);\n  }\n\n  registerModelContextProvider(provider: ModelContextProvider) {\n    this._providers.add(provider);\n    const unsubscribe = provider.subscribe?.(() => {\n      this.notifySubscribers();\n    });\n    this.notifySubscribers();\n    return () => {\n      this._providers.delete(provider);\n      unsubscribe?.();\n      this.notifySubscribers();\n    };\n  }\n\n  private _subscribers = new Set<() => void>();\n\n  notifySubscribers() {\n    for (const callback of this._subscribers) callback();\n  }\n\n  subscribe(callback: () => void) {\n    this._subscribers.add(callback);\n    return () => this._subscribers.delete(callback);\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;;AAKO,IAAM,2BAAN,MAA+D;IAC5D,aAAa,aAAA,GAAA,IAAI,IAA0B,EAAA;IAEnD,kBAAkB;QAChB,uMAAO,qBAAA,EAAmB,IAAA,CAAK,UAAU;IAC3C;IAEA,6BAA6B,QAAA,EAAgC;QAC3D,IAAA,CAAK,UAAA,CAAW,GAAA,CAAI,QAAQ;QAC5B,MAAM,cAAc,SAAS,SAAA,GAAY,MAAM;YAC7C,IAAA,CAAK,iBAAA,CAAkB;QACzB,CAAC;QACD,IAAA,CAAK,iBAAA,CAAkB;QACvB,OAAO,MAAM;YACX,IAAA,CAAK,UAAA,CAAW,MAAA,CAAO,QAAQ;YAC/B,cAAc;YACd,IAAA,CAAK,iBAAA,CAAkB;QACzB;IACF;IAEQ,eAAe,aAAA,GAAA,IAAI,IAAgB,EAAA;IAE3C,oBAAoB;QAClB,KAAA,MAAW,YAAY,IAAA,CAAK,YAAA,CAAc,SAAS;IACrD;IAEA,UAAU,QAAA,EAAsB;QAC9B,IAAA,CAAK,YAAA,CAAa,GAAA,CAAI,QAAQ;QAC9B,OAAO,IAAM,IAAA,CAAK,YAAA,CAAa,MAAA,CAAO,QAAQ;IAChD;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 398, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/utils/idUtils.tsx"],"sourcesContent":["import { customAlphabet } from \"nanoid/non-secure\";\n\nexport const generateId = customAlphabet(\n  \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\",\n  7,\n);\n\nconst optimisticPrefix = \"__optimistic__\";\nexport const generateOptimisticId = () => `${optimisticPrefix}${generateId()}`;\nexport const isOptimisticId = (id: string) => id.startsWith(optimisticPrefix);\n"],"names":[],"mappings":";;;;;;AAAA,SAAS,sBAAsB;;AAExB,IAAM,gNAAa,iBAAA,EACxB,kEACA;AAGF,IAAM,mBAAmB;AAClB,IAAM,uBAAuB,IAAM,GAAG,gBAAgB,GAAG,WAAW,CAAC,EAAA;AACrE,IAAM,iBAAiB,CAAC,KAAe,GAAG,UAAA,CAAW,gBAAgB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/runtimes/external-store/auto-status.tsx"],"sourcesContent":["import { MessageStatus } from \"../../types\";\n\nconst AUTO_STATUS_RUNNING = Object.freeze({ type: \"running\" });\nconst AUTO_STATUS_COMPLETE = Object.freeze({\n  type: \"complete\",\n  reason: \"unknown\",\n});\n\nexport const isAutoStatus = (status: MessageStatus) =>\n  status === AUTO_STATUS_RUNNING || status === AUTO_STATUS_COMPLETE;\n\nexport const getAutoStatus = (isLast: boolean, isRunning: boolean) =>\n  isLast && isRunning ? AUTO_STATUS_RUNNING : AUTO_STATUS_COMPLETE;\n"],"names":[],"mappings":";;;;;AAEA,IAAM,sBAAsB,OAAO,MAAA,CAAO;IAAE,MAAM;AAAU,CAAC;AAC7D,IAAM,uBAAuB,OAAO,MAAA,CAAO;IACzC,MAAM;IACN,QAAQ;AACV,CAAC;AAEM,IAAM,eAAe,CAAC,SAC3B,WAAW,uBAAuB,WAAW;AAExC,IAAM,gBAAgB,CAAC,QAAiB,YAC7C,UAAU,YAAY,sBAAsB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 440, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/runtimes/external-store/ThreadMessageLike.tsx"],"sourcesContent":["import { parsePartialJsonObject } from \"assistant-stream/utils\";\nimport { generateId } from \"../../internal\";\nimport {\n  MessageStatus,\n  TextContentPart,\n  ImageContentPart,\n  ThreadMessage,\n  ThreadAssistantContentPart,\n  ThreadAssistantMessage,\n  ThreadUserContentPart,\n  ThreadUserMessage,\n  ThreadSystemMessage,\n  CompleteAttachment,\n  FileContentPart,\n  Unstable_AudioContentPart,\n} from \"../../types\";\nimport {\n  ReasoningContentPart,\n  SourceContentPart,\n  ThreadStep,\n} from \"../../types/AssistantTypes\";\nimport { ReadonlyJSONObject, ReadonlyJSONValue } from \"assistant-stream/utils\";\n\nexport type ThreadMessageLike = {\n  readonly role: \"assistant\" | \"user\" | \"system\";\n  readonly content:\n    | string\n    | readonly (\n        | TextContentPart\n        | ReasoningContentPart\n        | SourceContentPart\n        | ImageContentPart\n        | FileContentPart\n        | Unstable_AudioContentPart\n        | {\n            readonly type: \"tool-call\";\n            readonly toolCallId?: string;\n            readonly toolName: string;\n            readonly args?: ReadonlyJSONObject;\n            readonly argsText?: string;\n            readonly artifact?: any;\n            readonly result?: any | undefined;\n            readonly isError?: boolean | undefined;\n          }\n      )[];\n  readonly id?: string | undefined;\n  readonly createdAt?: Date | undefined;\n  readonly status?: MessageStatus | undefined;\n  readonly attachments?: readonly CompleteAttachment[] | undefined;\n  readonly metadata?:\n    | {\n        readonly unstable_state?: ReadonlyJSONValue;\n        readonly unstable_annotations?:\n          | readonly ReadonlyJSONValue[]\n          | undefined;\n        readonly unstable_data?: readonly ReadonlyJSONValue[] | undefined;\n        readonly steps?: readonly ThreadStep[] | undefined;\n        readonly custom?: Record<string, unknown> | undefined;\n      }\n    | undefined;\n};\n\nexport const fromThreadMessageLike = (\n  like: ThreadMessageLike,\n  fallbackId: string,\n  fallbackStatus: MessageStatus,\n): ThreadMessage => {\n  const { role, id, createdAt, attachments, status, metadata } = like;\n  const common = {\n    id: id ?? fallbackId,\n    createdAt: createdAt ?? new Date(),\n  };\n\n  const content =\n    typeof like.content === \"string\"\n      ? [{ type: \"text\" as const, text: like.content }]\n      : like.content;\n\n  if (role !== \"user\" && attachments?.length)\n    throw new Error(\"attachments are only supported for user messages\");\n\n  if (role !== \"assistant\" && status)\n    throw new Error(\"status is only supported for assistant messages\");\n\n  if (role !== \"assistant\" && metadata?.steps)\n    throw new Error(\"metadata.steps is only supported for assistant messages\");\n\n  switch (role) {\n    case \"assistant\":\n      return {\n        ...common,\n        role,\n        content: content\n          .map((part): ThreadAssistantContentPart | null => {\n            const type = part.type;\n            switch (type) {\n              case \"text\":\n              case \"reasoning\":\n                if (part.text.trim().length === 0) return null;\n                return part;\n\n              case \"file\":\n              case \"source\":\n                return part;\n\n              case \"tool-call\": {\n                if (part.args) {\n                  return {\n                    ...part,\n                    toolCallId: part.toolCallId ?? \"tool-\" + generateId(),\n                    args: part.args,\n                    argsText: JSON.stringify(part.args),\n                  };\n                }\n                return {\n                  ...part,\n                  toolCallId: part.toolCallId ?? \"tool-\" + generateId(),\n                  args:\n                    part.args ??\n                    parsePartialJsonObject(part.argsText ?? \"\") ??\n                    {},\n                  argsText: part.argsText ?? \"\",\n                };\n              }\n\n              default: {\n                const unhandledType: \"image\" | \"audio\" = type;\n                throw new Error(\n                  `Unsupported assistant content part type: ${unhandledType}`,\n                );\n              }\n            }\n          })\n          .filter((c) => !!c),\n        status: status ?? fallbackStatus,\n        metadata: {\n          unstable_state: metadata?.unstable_state ?? null,\n          unstable_annotations: metadata?.unstable_annotations ?? [],\n          unstable_data: metadata?.unstable_data ?? [],\n          custom: metadata?.custom ?? {},\n          steps: metadata?.steps ?? [],\n        },\n      } satisfies ThreadAssistantMessage;\n\n    case \"user\":\n      return {\n        ...common,\n        role,\n        content: content.map((part): ThreadUserContentPart => {\n          const type = part.type;\n          switch (type) {\n            case \"text\":\n            case \"image\":\n            case \"audio\":\n            case \"file\":\n              return part;\n\n            default: {\n              const unhandledType: \"tool-call\" | \"reasoning\" | \"source\" = type;\n              throw new Error(\n                `Unsupported user content part type: ${unhandledType}`,\n              );\n            }\n          }\n        }),\n        attachments: attachments ?? [],\n        metadata: {\n          custom: metadata?.custom ?? {},\n        },\n      } satisfies ThreadUserMessage;\n\n    case \"system\":\n      if (content.length !== 1 || content[0]!.type !== \"text\")\n        throw new Error(\n          \"System messages must have exactly one text content part.\",\n        );\n\n      return {\n        ...common,\n        role,\n        content: content as [TextContentPart],\n        metadata: {\n          custom: metadata?.custom ?? {},\n        },\n      } satisfies ThreadSystemMessage;\n\n    default: {\n      const unsupportedRole: never = role;\n      throw new Error(`Unknown message role: ${unsupportedRole}`);\n    }\n  }\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 560, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/runtimes/utils/MessageRepository.tsx"],"sourcesContent":["import type { ThreadMessage } from \"../../types\";\nimport { generateId, generateOptimisticId } from \"../../utils/idUtils\";\nimport { ThreadMessageLike } from \"../external-store\";\nimport { getAutoStatus } from \"../external-store/auto-status\";\nimport { fromThreadMessageLike } from \"../external-store/ThreadMessageLike\";\n\n/**\n * Represents a parent node in the repository tree structure.\n */\ntype RepositoryParent = {\n  /** IDs of child messages */\n  children: string[];\n  /** Reference to the next message in the active branch */\n  next: RepositoryMessage | null;\n};\n\n/**\n * Represents a message node in the repository tree structure.\n */\ntype RepositoryMessage = RepositoryParent & {\n  /** Reference to the parent message */\n  prev: RepositoryMessage | null;\n  /** The actual message data */\n  current: ThreadMessage;\n  /** The depth level in the tree (0 for root messages) */\n  level: number;\n};\n\n/**\n * Represents a message item that can be exported from the repository.\n */\nexport type ExportedMessageRepositoryItem = {\n  /** The message data */\n  message: ThreadMessage;\n  /** ID of the parent message, or null for root messages */\n  parentId: string | null;\n};\n\n/**\n * Represents the entire repository state for export/import.\n */\nexport type ExportedMessageRepository = {\n  /** ID of the head message, or null/undefined if no head */\n  headId?: string | null;\n  /** Array of all messages with their parent references */\n  messages: Array<{\n    message: ThreadMessage;\n    parentId: string | null;\n  }>;\n};\n\n/**\n * Utility functions for working with exported message repositories.\n */\nexport const ExportedMessageRepository = {\n  /**\n   * Converts an array of messages to an ExportedMessageRepository format.\n   * Creates parent-child relationships based on the order of messages in the array.\n   *\n   * @param messages - Array of message-like objects to convert\n   * @returns ExportedMessageRepository with parent-child relationships established\n   */\n  fromArray: (\n    messages: readonly ThreadMessageLike[],\n  ): ExportedMessageRepository => {\n    const conv = messages.map((m) =>\n      fromThreadMessageLike(m, generateId(), getAutoStatus(false, false)),\n    );\n\n    return {\n      messages: conv.map((m, idx) => ({\n        parentId: idx > 0 ? conv[idx - 1]!.id : null,\n        message: m,\n      })),\n    };\n  },\n};\n\n/**\n * Recursively finds the head (leaf) message in a branch.\n *\n * @param message - The starting message or parent node\n * @returns The leaf message of the branch, or null if not found\n */\nconst findHead = (\n  message: RepositoryMessage | RepositoryParent,\n): RepositoryMessage | null => {\n  if (message.next) return findHead(message.next);\n  if (\"current\" in message) return message;\n  return null;\n};\n\n/**\n * A utility class for caching computed values and invalidating the cache when needed.\n */\nclass CachedValue<T> {\n  private _value: T | null = null;\n\n  /**\n   * @param func - The function that computes the cached value\n   */\n  constructor(private func: () => T) {}\n\n  /**\n   * Gets the cached value, computing it if necessary.\n   */\n  get value() {\n    if (this._value === null) {\n      this._value = this.func();\n    }\n    return this._value;\n  }\n\n  /**\n   * Invalidates the cache, forcing recomputation on next access.\n   */\n  dirty() {\n    this._value = null;\n  }\n}\n\n/**\n * A repository that manages a tree of messages with branching capabilities.\n * Supports operations like adding, updating, and deleting messages, as well as\n * managing multiple conversation branches.\n */\nexport class MessageRepository {\n  /** Map of message IDs to repository message objects */\n  private messages = new Map<string, RepositoryMessage>();\n  /** Reference to the current head (most recent) message in the active branch */\n  private head: RepositoryMessage | null = null;\n  /** Root node of the tree structure */\n  private root: RepositoryParent = {\n    children: [],\n    next: null,\n  };\n\n  /**\n   * Performs link/unlink operations between messages in the tree.\n   *\n   * @param newParent - The new parent message, or null\n   * @param child - The child message to operate on\n   * @param operation - The type of operation to perform:\n   *   - \"cut\": Remove the child from its current parent\n   *   - \"link\": Add the child to a new parent\n   *   - \"relink\": Both cut and link operations\n   */\n  private performOp(\n    newParent: RepositoryMessage | null,\n    child: RepositoryMessage,\n    operation: \"cut\" | \"link\" | \"relink\",\n  ) {\n    const parentOrRoot = child.prev ?? this.root;\n    const newParentOrRoot = newParent ?? this.root;\n\n    if (operation === \"relink\" && parentOrRoot === newParentOrRoot) return;\n\n    // cut\n    if (operation !== \"link\") {\n      // remove from parentOrRoot.children\n      parentOrRoot.children = parentOrRoot.children.filter(\n        (m) => m !== child.current.id,\n      );\n\n      // update parentOrRoot.next\n      if (parentOrRoot.next === child) {\n        const fallbackId = parentOrRoot.children.at(-1);\n        const fallback = fallbackId ? this.messages.get(fallbackId) : null;\n        if (fallback === undefined) {\n          throw new Error(\n            \"MessageRepository(performOp/cut): Fallback sibling message not found. This is likely an internal bug in assistant-ui.\",\n          );\n        }\n        parentOrRoot.next = fallback;\n      }\n    }\n\n    // link\n    if (operation !== \"cut\") {\n      // ensure the child is not part of parent tree\n      for (\n        let current: RepositoryMessage | null = newParent;\n        current;\n        current = current.prev\n      ) {\n        if (current.current.id === child.current.id) {\n          throw new Error(\n            \"MessageRepository(performOp/link): A message with the same id already exists in the parent tree. This error occurs if the same message id is found multiple times. This is likely an internal bug in assistant-ui.\",\n          );\n        }\n      }\n\n      // add to parentOrRoot.children\n      newParentOrRoot.children = [\n        ...newParentOrRoot.children,\n        child.current.id,\n      ];\n\n      // update parentOrRoot.next\n      if (findHead(child) === this.head || newParentOrRoot.next === null) {\n        newParentOrRoot.next = child;\n      }\n\n      child.prev = newParent;\n    }\n  }\n\n  /** Cached array of messages in the current active branch, from root to head */\n  private _messages = new CachedValue<readonly ThreadMessage[]>(() => {\n    const messages = new Array<ThreadMessage>(this.head?.level ?? 0);\n    for (let current = this.head; current; current = current.prev) {\n      messages[current.level] = current.current;\n    }\n    return messages;\n  });\n\n  /**\n   * Gets the ID of the current head message.\n   * @returns The ID of the head message, or null if no messages exist\n   */\n  get headId() {\n    return this.head?.current.id ?? null;\n  }\n\n  /**\n   * Gets all messages in the current active branch, from root to head.\n   * @returns Array of messages in the current branch\n   */\n  getMessages() {\n    return this._messages.value;\n  }\n\n  /**\n   * Adds a new message or updates an existing one in the repository.\n   * If the message ID already exists, the message is updated and potentially relinked to a new parent.\n   * If the message is new, it's added as a child of the specified parent.\n   *\n   * @param parentId - ID of the parent message, or null for root messages\n   * @param message - The message to add or update\n   * @throws Error if the parent message is not found\n   */\n  addOrUpdateMessage(parentId: string | null, message: ThreadMessage) {\n    const existingItem = this.messages.get(message.id);\n    const prev = parentId ? this.messages.get(parentId) : null;\n    if (prev === undefined)\n      throw new Error(\n        \"MessageRepository(addOrUpdateMessage): Parent message not found. This is likely an internal bug in assistant-ui.\",\n      );\n\n    // update existing message\n    if (existingItem) {\n      existingItem.current = message;\n      this.performOp(prev, existingItem, \"relink\");\n      this._messages.dirty();\n      return;\n    }\n\n    // create a new message\n    const newItem: RepositoryMessage = {\n      prev,\n      current: message,\n      next: null,\n      children: [],\n      level: prev ? prev.level + 1 : 0,\n    };\n\n    this.messages.set(message.id, newItem);\n    this.performOp(prev, newItem, \"link\");\n\n    if (this.head === prev) {\n      this.head = newItem;\n    }\n\n    this._messages.dirty();\n  }\n\n  /**\n   * Gets a message and its parent ID by message ID.\n   *\n   * @param messageId - ID of the message to retrieve\n   * @returns Object containing the message and its parent ID\n   * @throws Error if the message is not found\n   */\n  getMessage(messageId: string) {\n    const message = this.messages.get(messageId);\n    if (!message)\n      throw new Error(\n        \"MessageRepository(updateMessage): Message not found. This is likely an internal bug in assistant-ui.\",\n      );\n\n    return {\n      parentId: message.prev?.current.id ?? null,\n      message: message.current,\n    };\n  }\n\n  /**\n   * Adds an optimistic message to the repository.\n   * An optimistic message is a temporary placeholder that will be replaced by a real message later.\n   *\n   * @param parentId - ID of the parent message, or null for root messages\n   * @param message - The core message to convert to an optimistic message\n   * @returns The generated optimistic ID\n   */\n  appendOptimisticMessage(parentId: string | null, message: ThreadMessageLike) {\n    let optimisticId: string;\n    do {\n      optimisticId = generateOptimisticId();\n    } while (this.messages.has(optimisticId));\n\n    this.addOrUpdateMessage(\n      parentId,\n      fromThreadMessageLike(message, optimisticId, { type: \"running\" }),\n    );\n\n    return optimisticId;\n  }\n\n  /**\n   * Deletes a message from the repository and relinks its children.\n   *\n   * @param messageId - ID of the message to delete\n   * @param replacementId - Optional ID of the message to become the new parent of the children,\n   *                       undefined means use the deleted message's parent,\n   *                       null means use the root\n   * @throws Error if the message or replacement is not found\n   */\n  deleteMessage(messageId: string, replacementId?: string | null | undefined) {\n    const message = this.messages.get(messageId);\n\n    if (!message)\n      throw new Error(\n        \"MessageRepository(deleteMessage): Optimistic message not found. This is likely an internal bug in assistant-ui.\",\n      );\n\n    const replacement =\n      replacementId === undefined\n        ? message.prev // if no replacementId is provided, use the parent\n        : replacementId === null\n          ? null\n          : this.messages.get(replacementId);\n    if (replacement === undefined)\n      throw new Error(\n        \"MessageRepository(deleteMessage): Replacement not found. This is likely an internal bug in assistant-ui.\",\n      );\n\n    for (const child of message.children) {\n      const childMessage = this.messages.get(child);\n      if (!childMessage)\n        throw new Error(\n          \"MessageRepository(deleteMessage): Child message not found. This is likely an internal bug in assistant-ui.\",\n        );\n      this.performOp(replacement, childMessage, \"relink\");\n    }\n\n    this.performOp(null, message, \"cut\");\n    this.messages.delete(messageId);\n\n    if (this.head === message) {\n      this.head = findHead(replacement ?? this.root);\n    }\n\n    this._messages.dirty();\n  }\n\n  /**\n   * Gets all branch IDs (sibling messages) at the level of a specified message.\n   *\n   * @param messageId - ID of the message to find branches for\n   * @returns Array of message IDs representing branches\n   * @throws Error if the message is not found\n   */\n  getBranches(messageId: string) {\n    const message = this.messages.get(messageId);\n    if (!message)\n      throw new Error(\n        \"MessageRepository(getBranches): Message not found. This is likely an internal bug in assistant-ui.\",\n      );\n\n    const { children } = message.prev ?? this.root;\n    return children;\n  }\n\n  /**\n   * Switches the active branch to the one containing the specified message.\n   *\n   * @param messageId - ID of the message in the branch to switch to\n   * @throws Error if the branch is not found\n   */\n  switchToBranch(messageId: string) {\n    const message = this.messages.get(messageId);\n    if (!message)\n      throw new Error(\n        \"MessageRepository(switchToBranch): Branch not found. This is likely an internal bug in assistant-ui.\",\n      );\n\n    const prevOrRoot = message.prev ?? this.root;\n    prevOrRoot.next = message;\n\n    this.head = findHead(message);\n\n    this._messages.dirty();\n  }\n\n  /**\n   * Resets the head to a specific message or null.\n   *\n   * @param messageId - ID of the message to set as head, or null to clear the head\n   * @throws Error if the message is not found\n   */\n  resetHead(messageId: string | null) {\n    if (messageId === null) {\n      this.head = null;\n      this._messages.dirty();\n      return;\n    }\n\n    const message = this.messages.get(messageId);\n    if (!message)\n      throw new Error(\n        \"MessageRepository(resetHead): Branch not found. This is likely an internal bug in assistant-ui.\",\n      );\n\n    this.head = message;\n    for (\n      let current: RepositoryMessage | null = message;\n      current;\n      current = current.prev\n    ) {\n      if (current.prev) {\n        current.prev.next = current;\n      }\n    }\n\n    this._messages.dirty();\n  }\n\n  /**\n   * Clears all messages from the repository.\n   */\n  clear(): void {\n    this.messages.clear();\n    this.head = null;\n    this.root = {\n      children: [],\n      next: null,\n    };\n    this._messages.dirty();\n  }\n\n  /**\n   * Exports the repository state for persistence.\n   *\n   * @returns Exportable repository state\n   */\n  export(): ExportedMessageRepository {\n    const exportItems: ExportedMessageRepository[\"messages\"] = [];\n\n    // hint: we are relying on the insertion order of the messages\n    // this is important for the import function to properly link the messages\n    for (const [, message] of this.messages) {\n      exportItems.push({\n        message: message.current,\n        parentId: message.prev?.current.id ?? null,\n      });\n    }\n\n    return {\n      headId: this.head?.current.id ?? null,\n      messages: exportItems,\n    };\n  }\n\n  /**\n   * Imports repository state from an exported repository.\n   *\n   * @param repository - The exported repository state to import\n   */\n  import({ headId, messages }: ExportedMessageRepository) {\n    for (const { message, parentId } of messages) {\n      this.addOrUpdateMessage(parentId, message);\n    }\n\n    // switch to the saved head id if it is not the most recent message\n    this.resetHead(headId ?? messages.at(-1)?.message.id ?? null);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 861, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/runtimes/core/BaseAssistantRuntimeCore.tsx"],"sourcesContent":["import { type ModelContextProvider } from \"../../model-context/ModelContextTypes\";\nimport type { Unsubscribe } from \"../../types/Unsubscribe\";\nimport type { AssistantRuntimeCore } from \"./AssistantRuntimeCore\";\nimport { CompositeContextProvider } from \"../../utils/CompositeContextProvider\";\nimport { ThreadListRuntimeCore } from \"./ThreadListRuntimeCore\";\n\nexport abstract class BaseAssistantRuntimeCore implements AssistantRuntimeCore {\n  protected readonly _contextProvider = new CompositeContextProvider();\n  public abstract get threads(): ThreadListRuntimeCore;\n\n  public registerModelContextProvider(\n    provider: ModelContextProvider,\n  ): Unsubscribe {\n    return this._contextProvider.registerModelContextProvider(provider);\n  }\n}\n"],"names":[],"mappings":";;;;AAGA,SAAS,gCAAgC;;AAGlC,IAAe,2BAAf,MAAwE;IAC1D,mBAAmB,4LAAI,2BAAA,CAAyB,EAAA;IAG5D,6BACL,QAAA,EACa;QACb,OAAO,IAAA,CAAK,gBAAA,CAAiB,4BAAA,CAA6B,QAAQ;IACpE;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 881, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/api/subscribable/BaseSubject.ts"],"sourcesContent":["import { Unsubscribe } from \"../../types/Unsubscribe\";\n\nexport abstract class BaseSubject {\n  private _subscriptions = new Set<() => void>();\n  private _connection: Unsubscribe | undefined;\n\n  protected get isConnected() {\n    return !!this._connection;\n  }\n\n  protected abstract _connect(): Unsubscribe;\n\n  protected notifySubscribers() {\n    for (const callback of this._subscriptions) callback();\n  }\n\n  private _updateConnection() {\n    if (this._subscriptions.size > 0) {\n      if (this._connection) return;\n      this._connection = this._connect();\n    } else {\n      this._connection?.();\n      this._connection = undefined;\n    }\n  }\n\n  public subscribe(callback: () => void) {\n    this._subscriptions.add(callback);\n    this._updateConnection();\n\n    return () => {\n      this._subscriptions.delete(callback);\n      this._updateConnection();\n    };\n  }\n}\n"],"names":[],"mappings":";;;;AAEO,IAAe,cAAf,MAA2B;IACxB,iBAAiB,aAAA,GAAA,IAAI,IAAgB,EAAA;IACrC,YAAA;IAER,IAAc,cAAc;QAC1B,OAAO,CAAC,CAAC,IAAA,CAAK,WAAA;IAChB;IAIU,oBAAoB;QAC5B,KAAA,MAAW,YAAY,IAAA,CAAK,cAAA,CAAgB,SAAS;IACvD;IAEQ,oBAAoB;QAC1B,IAAI,IAAA,CAAK,cAAA,CAAe,IAAA,GAAO,GAAG;YAChC,IAAI,IAAA,CAAK,WAAA,CAAa,CAAA;YACtB,IAAA,CAAK,WAAA,GAAc,IAAA,CAAK,QAAA,CAAS;QACnC,OAAO;YACL,IAAA,CAAK,WAAA,GAAc;YACnB,IAAA,CAAK,WAAA,GAAc,KAAA;QACrB;IACF;IAEO,UAAU,QAAA,EAAsB;QACrC,IAAA,CAAK,cAAA,CAAe,GAAA,CAAI,QAAQ;QAChC,IAAA,CAAK,iBAAA,CAAkB;QAEvB,OAAO,MAAM;YACX,IAAA,CAAK,cAAA,CAAe,MAAA,CAAO,QAAQ;YACnC,IAAA,CAAK,iBAAA,CAAkB;QACzB;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 920, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/api/subscribable/SKIP_UPDATE.ts"],"sourcesContent":["export const SKIP_UPDATE = Symbol(\"skip-update\");\nexport type SKIP_UPDATE = typeof SKIP_UPDATE;\n"],"names":[],"mappings":";;;;AAAO,IAAM,cAAc,OAAO,aAAa","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 933, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/api/subscribable/LazyMemoizeSubject.ts"],"sourcesContent":["import { BaseSubject } from \"./BaseSubject\";\nimport { SKIP_UPDATE } from \"./SKIP_UPDATE\";\nimport { SubscribableWithState } from \"./Subscribable\";\n\nexport class LazyMemoizeSubject<TState extends object, TPath>\n  extends BaseSubject\n  implements SubscribableWithState<TState, TPath>\n{\n  public get path() {\n    return this.binding.path;\n  }\n\n  constructor(\n    private binding: SubscribableWithState<TState | SKIP_UPDATE, TPath>,\n  ) {\n    super();\n  }\n\n  private _previousStateDirty = true;\n  private _previousState: TState | undefined;\n  public getState = () => {\n    if (!this.isConnected || this._previousStateDirty) {\n      const newState = this.binding.getState();\n      if (newState !== SKIP_UPDATE) {\n        this._previousState = newState;\n      }\n      this._previousStateDirty = false;\n    }\n    if (this._previousState === undefined)\n      throw new Error(\"Entry not available in the store\");\n    return this._previousState;\n  };\n\n  protected _connect() {\n    const callback = () => {\n      this._previousStateDirty = true;\n      this.notifySubscribers();\n    };\n\n    return this.binding.subscribe(callback);\n  }\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,mBAAmB;AAC5B,SAAS,mBAAmB;;;AAGrB,IAAM,qBAAN,uMACG,cAAA,CAEV;IAKE,YACU,OAAA,CACR;QACA,KAAA,CAAM;QAFE,IAAA,CAAA,OAAA,GAAA;IAGV;IARA,IAAW,OAAO;QAChB,OAAO,IAAA,CAAK,OAAA,CAAQ,IAAA;IACtB;IAQQ,sBAAsB,KAAA;IACtB,eAAA;IACD,WAAW,MAAM;QACtB,IAAI,CAAC,IAAA,CAAK,WAAA,IAAe,IAAA,CAAK,mBAAA,EAAqB;YACjD,MAAM,WAAW,IAAA,CAAK,OAAA,CAAQ,QAAA,CAAS;YACvC,IAAI,sMAAa,cAAA,EAAa;gBAC5B,IAAA,CAAK,cAAA,GAAiB;YACxB;YACA,IAAA,CAAK,mBAAA,GAAsB;QAC7B;QACA,IAAI,IAAA,CAAK,cAAA,KAAmB,KAAA,GAC1B,MAAM,IAAI,MAAM,kCAAkC;QACpD,OAAO,IAAA,CAAK,cAAA;IACd,EAAA;IAEU,WAAW;QACnB,MAAM,WAAW,MAAM;YACrB,IAAA,CAAK,mBAAA,GAAsB;YAC3B,IAAA,CAAK,iBAAA,CAAkB;QACzB;QAEA,OAAO,IAAA,CAAK,OAAA,CAAQ,SAAA,CAAU,QAAQ;IACxC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 978, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/api/ThreadListItemRuntime.ts"],"sourcesContent":["import { Unsubscribe } from \"../types\";\nimport { ThreadListItemRuntimePath } from \"./RuntimePathTypes\";\nimport { SubscribableWithState } from \"./subscribable/Subscribable\";\nimport { ThreadListRuntimeCoreBinding } from \"./ThreadListRuntime\";\n\nexport type ThreadListItemEventType = \"switched-to\" | \"switched-away\";\n\nexport type ThreadListItemState = {\n  readonly isMain: boolean;\n\n  readonly id: string;\n  readonly remoteId: string | undefined;\n  readonly externalId: string | undefined;\n\n  /**\n   * @deprecated This field was renamed to `id`. This field will be removed in 0.8.0.\n   */\n  readonly threadId: string;\n\n  readonly status: \"archived\" | \"regular\" | \"new\" | \"deleted\";\n  readonly title?: string | undefined;\n};\n\nexport type ThreadListItemRuntime = {\n  readonly path: ThreadListItemRuntimePath;\n  getState(): ThreadListItemState;\n\n  initialize(): Promise<{ remoteId: string; externalId: string | undefined }>;\n  generateTitle(): Promise<void>;\n\n  switchTo(): Promise<void>;\n  rename(newTitle: string): Promise<void>;\n  archive(): Promise<void>;\n  unarchive(): Promise<void>;\n  delete(): Promise<void>;\n\n  /**\n   * Detaches the ThreadListItem instance, unmounting the ThreadRuntime hook.\n   */\n  detach(): void;\n\n  subscribe(callback: () => void): Unsubscribe;\n\n  unstable_on(\n    event: ThreadListItemEventType,\n    callback: () => void,\n  ): Unsubscribe;\n};\n\nexport type ThreadListItemStateBinding = SubscribableWithState<\n  ThreadListItemState,\n  ThreadListItemRuntimePath\n>;\n\nexport class ThreadListItemRuntimeImpl implements ThreadListItemRuntime {\n  public get path() {\n    return this._core.path;\n  }\n\n  constructor(\n    private _core: ThreadListItemStateBinding,\n    private _threadListBinding: ThreadListRuntimeCoreBinding,\n  ) {}\n\n  protected __internal_bindMethods() {\n    this.switchTo = this.switchTo.bind(this);\n    this.rename = this.rename.bind(this);\n    this.archive = this.archive.bind(this);\n    this.unarchive = this.unarchive.bind(this);\n    this.delete = this.delete.bind(this);\n    this.initialize = this.initialize.bind(this);\n    this.generateTitle = this.generateTitle.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.unstable_on = this.unstable_on.bind(this);\n    this.getState = this.getState.bind(this);\n    this.detach = this.detach.bind(this);\n  }\n\n  public getState(): ThreadListItemState {\n    return this._core.getState();\n  }\n\n  public switchTo(): Promise<void> {\n    const state = this._core.getState();\n    return this._threadListBinding.switchToThread(state.id);\n  }\n\n  public rename(newTitle: string): Promise<void> {\n    const state = this._core.getState();\n\n    return this._threadListBinding.rename(state.id, newTitle);\n  }\n\n  public archive(): Promise<void> {\n    const state = this._core.getState();\n\n    return this._threadListBinding.archive(state.id);\n  }\n\n  public unarchive(): Promise<void> {\n    const state = this._core.getState();\n\n    return this._threadListBinding.unarchive(state.id);\n  }\n\n  public delete(): Promise<void> {\n    const state = this._core.getState();\n\n    return this._threadListBinding.delete(state.id);\n  }\n\n  public initialize(): Promise<{\n    remoteId: string;\n    externalId: string | undefined;\n  }> {\n    const state = this._core.getState();\n    return this._threadListBinding.initialize(state.id);\n  }\n\n  public generateTitle(): Promise<void> {\n    const state = this._core.getState();\n    return this._threadListBinding.generateTitle(state.id);\n  }\n\n  public unstable_on(event: ThreadListItemEventType, callback: () => void) {\n    let prevIsMain = this._core.getState().isMain;\n    return this.subscribe(() => {\n      const newIsMain = this._core.getState().isMain;\n      if (prevIsMain === newIsMain) return;\n      prevIsMain = newIsMain;\n\n      if (event === \"switched-to\" && !newIsMain) return;\n      if (event === \"switched-away\" && newIsMain) return;\n      callback();\n    });\n  }\n\n  public subscribe(callback: () => void): Unsubscribe {\n    return this._core.subscribe(callback);\n  }\n\n  public detach(): void {\n    const state = this._core.getState();\n\n    this._threadListBinding.detach(state.id);\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1061, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/api/subscribable/shallowEqual.ts"],"sourcesContent":["export function shallowEqual<T extends object>(\n  objA: T | undefined,\n  objB: T | undefined,\n) {\n  if (objA === undefined && objB === undefined) return true;\n  if (objA === undefined) return false;\n  if (objB === undefined) return false;\n\n  for (const key of Object.keys(objA)) {\n    const valueA = objA[key as keyof T];\n    const valueB = objB[key as keyof T];\n    if (!Object.is(valueA, valueB)) return false;\n  }\n\n  return true;\n}\n"],"names":[],"mappings":";;;;AAAO,SAAS,aACd,IAAA,EACA,IAAA,EACA;IACA,IAAI,SAAS,KAAA,KAAa,SAAS,KAAA,EAAW,CAAA,OAAO;IACrD,IAAI,SAAS,KAAA,EAAW,CAAA,OAAO;IAC/B,IAAI,SAAS,KAAA,EAAW,CAAA,OAAO;IAE/B,KAAA,MAAW,OAAO,OAAO,IAAA,CAAK,IAAI,EAAG;QACnC,MAAM,SAAS,IAAA,CAAK,GAAc,CAAA;QAClC,MAAM,SAAS,IAAA,CAAK,GAAc,CAAA;QAClC,IAAI,CAAC,OAAO,EAAA,CAAG,QAAQ,MAAM,EAAG,CAAA,OAAO;IACzC;IAEA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1084, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/api/subscribable/ShallowMemoizeSubject.ts"],"sourcesContent":["import { shallowEqual } from \"./shallowEqual\";\nimport { BaseSubject } from \"./BaseSubject\";\nimport { SubscribableWithState } from \"./Subscribable\";\nimport { SKIP_UPDATE } from \"./SKIP_UPDATE\";\n\nexport class ShallowMemoizeSubject<TState extends object, TPath>\n  extends BaseSubject\n  implements SubscribableWithState<TState, TPath>\n{\n  public get path() {\n    return this.binding.path;\n  }\n\n  constructor(\n    private binding: SubscribableWithState<TState | SKIP_UPDATE, TPath>,\n  ) {\n    super();\n    const state = binding.getState();\n    if (state === SKIP_UPDATE)\n      throw new Error(\"Entry not available in the store\");\n    this._previousState = state;\n  }\n\n  private _previousState: TState;\n  public getState = () => {\n    if (!this.isConnected) this._syncState();\n    return this._previousState;\n  };\n\n  private _syncState() {\n    const state = this.binding.getState();\n    if (state === SKIP_UPDATE) return false;\n    if (shallowEqual(state, this._previousState)) return false;\n    this._previousState = state;\n    return true;\n  }\n\n  protected _connect() {\n    const callback = () => {\n      if (this._syncState()) {\n        this.notifySubscribers();\n      }\n    };\n\n    return this.binding.subscribe(callback);\n  }\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,oBAAoB;AAC7B,SAAS,mBAAmB;AAE5B,SAAS,mBAAmB;;;;AAErB,IAAM,wBAAN,uMACG,cAAA,CAEV;IAKE,YACU,OAAA,CACR;QACA,KAAA,CAAM;QAFE,IAAA,CAAA,OAAA,GAAA;QAGR,MAAM,QAAQ,QAAQ,QAAA,CAAS;QAC/B,IAAI,mMAAU,cAAA,EACZ,MAAM,IAAI,MAAM,kCAAkC;QACpD,IAAA,CAAK,cAAA,GAAiB;IACxB;IAZA,IAAW,OAAO;QAChB,OAAO,IAAA,CAAK,OAAA,CAAQ,IAAA;IACtB;IAYQ,eAAA;IACD,WAAW,MAAM;QACtB,IAAI,CAAC,IAAA,CAAK,WAAA,CAAa,CAAA,IAAA,CAAK,UAAA,CAAW;QACvC,OAAO,IAAA,CAAK,cAAA;IACd,EAAA;IAEQ,aAAa;QACnB,MAAM,QAAQ,IAAA,CAAK,OAAA,CAAQ,QAAA,CAAS;QACpC,IAAI,mMAAU,cAAA,CAAa,CAAA,OAAO;QAClC,KAAI,4MAAA,EAAa,OAAO,IAAA,CAAK,cAAc,EAAG,CAAA,OAAO;QACrD,IAAA,CAAK,cAAA,GAAiB;QACtB,OAAO;IACT;IAEU,WAAW;QACnB,MAAM,WAAW,MAAM;YACrB,IAAI,IAAA,CAAK,UAAA,CAAW,GAAG;gBACrB,IAAA,CAAK,iBAAA,CAAkB;YACzB;QACF;QAEA,OAAO,IAAA,CAAK,OAAA,CAAQ,SAAA,CAAU,QAAQ;IACxC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1134, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/runtimes/external-store/getExternalStoreMessage.tsx"],"sourcesContent":["import { ThreadState } from \"../../api\";\nimport { ThreadMessage } from \"../../types\";\n\nexport const symbolInnerMessage = Symbol(\"innerMessage\");\nconst symbolInnerMessages = Symbol(\"innerMessages\");\n\ntype WithInnerMessages<T> = {\n  [symbolInnerMessage]?: T | T[];\n  [symbolInnerMessages]?: T[];\n};\n\n/**\n * @deprecated Use `getExternalStoreMessages` (plural) instead. This function will be removed in 0.8.0.\n */\nexport const getExternalStoreMessage = <T,>(input: ThreadMessage) => {\n  const withInnerMessages = input as WithInnerMessages<T>;\n  return withInnerMessages[symbolInnerMessage];\n};\n\nconst EMPTY_ARRAY: never[] = [];\n\nexport const getExternalStoreMessages = <T,>(\n  input: ThreadState | ThreadMessage | ThreadMessage[\"content\"][number],\n) => {\n  // TODO temp until 0.8.0 (migrate useExternalStoreRuntime to always set an array)\n\n  const container = (\n    \"messages\" in input ? input.messages : input\n  ) as WithInnerMessages<T>;\n  const value = container[symbolInnerMessages] || container[symbolInnerMessage];\n  if (!value) return EMPTY_ARRAY;\n  if (Array.isArray(value)) {\n    return value;\n  }\n  container[symbolInnerMessages] = [value];\n  return container[symbolInnerMessages];\n};\n"],"names":[],"mappings":";;;;;;AAGO,IAAM,qBAAqB,OAAO,cAAc;AACvD,IAAM,sBAAsB,OAAO,eAAe;AAU3C,IAAM,0BAA0B,CAAK,UAAyB;IACnE,MAAM,oBAAoB;IAC1B,OAAO,iBAAA,CAAkB,kBAAkB,CAAA;AAC7C;AAEA,IAAM,cAAuB,CAAC,CAAA;AAEvB,IAAM,2BAA2B,CACtC,UACG;IAGH,MAAM,YACJ,cAAc,QAAQ,MAAM,QAAA,GAAW;IAEzC,MAAM,QAAQ,SAAA,CAAU,mBAAmB,CAAA,IAAK,SAAA,CAAU,kBAAkB,CAAA;IAC5E,IAAI,CAAC,MAAO,CAAA,OAAO;IACnB,IAAI,MAAM,OAAA,CAAQ,KAAK,GAAG;QACxB,OAAO;IACT;IACA,SAAA,CAAU,mBAAmB,CAAA,GAAI;QAAC,KAAK;KAAA;IACvC,OAAO,SAAA,CAAU,mBAAmB,CAAA;AACtC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1167, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/utils/getThreadMessageText.tsx"],"sourcesContent":["import type {\n  AppendMessage,\n  TextContentPart,\n  ThreadMessage,\n} from \"../types/AssistantTypes\";\n\nexport const getThreadMessageText = (\n  message: ThreadMessage | AppendMessage,\n) => {\n  const textParts = message.content.filter(\n    (part) => part.type === \"text\",\n  ) as TextContentPart[];\n\n  return textParts.map((part) => part.text).join(\"\\n\\n\");\n};\n"],"names":[],"mappings":";;;;AAMO,IAAM,uBAAuB,CAClC,YACG;IACH,MAAM,YAAY,QAAQ,OAAA,CAAQ,MAAA,CAChC,CAAC,OAAS,KAAK,IAAA,KAAS;IAG1B,OAAO,UAAU,GAAA,CAAI,CAAC,OAAS,KAAK,IAAI,EAAE,IAAA,CAAK,MAAM;AACvD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1183, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/api/AttachmentRuntime.ts"],"sourcesContent":["import { SubscribableWithState } from \"./subscribable/Subscribable\";\n\nimport { ComposerRuntimeCoreBinding } from \"./ComposerRuntime\";\nimport {\n  Attachment,\n  CompleteAttachment,\n  PendingAttachment,\n  Unsubscribe,\n} from \"../types\";\nimport { AttachmentRuntimePath } from \"./RuntimePathTypes\";\n\ntype MessageAttachmentState = CompleteAttachment & {\n  readonly source: \"message\";\n};\n\ntype ThreadComposerAttachmentState = PendingAttachment & {\n  readonly source: \"thread-composer\";\n};\n\ntype EditComposerAttachmentState = Attachment & {\n  readonly source: \"edit-composer\";\n};\n\nexport type AttachmentState =\n  | ThreadComposerAttachmentState\n  | EditComposerAttachmentState\n  | MessageAttachmentState;\n\ntype AttachmentSnapshotBinding<Source extends AttachmentRuntimeSource> =\n  SubscribableWithState<\n    AttachmentState & { source: Source },\n    AttachmentRuntimePath & { attachmentSource: Source }\n  >;\n\ntype AttachmentRuntimeSource = AttachmentState[\"source\"];\n\nexport type AttachmentRuntime<\n  TSource extends AttachmentRuntimeSource = AttachmentRuntimeSource,\n> = {\n  readonly path: AttachmentRuntimePath & { attachmentSource: TSource };\n  readonly source: TSource;\n  getState(): AttachmentState & { source: TSource };\n  remove(): Promise<void>;\n  subscribe(callback: () => void): Unsubscribe;\n};\n\nexport abstract class AttachmentRuntimeImpl<\n  Source extends AttachmentRuntimeSource = AttachmentRuntimeSource,\n> implements AttachmentRuntime\n{\n  public get path() {\n    return this._core.path;\n  }\n\n  public abstract get source(): Source;\n\n  constructor(private _core: AttachmentSnapshotBinding<Source>) {}\n\n  protected __internal_bindMethods() {\n    this.getState = this.getState.bind(this);\n    this.remove = this.remove.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n  }\n\n  public getState(): AttachmentState & { source: Source } {\n    return this._core.getState();\n  }\n\n  public abstract remove(): Promise<void>;\n\n  public subscribe(callback: () => void) {\n    return this._core.subscribe(callback);\n  }\n}\n\nabstract class ComposerAttachmentRuntime<\n  Source extends \"thread-composer\" | \"edit-composer\",\n> extends AttachmentRuntimeImpl<Source> {\n  constructor(\n    core: AttachmentSnapshotBinding<Source>,\n    private _composerApi: ComposerRuntimeCoreBinding,\n  ) {\n    super(core);\n  }\n\n  public remove() {\n    const core = this._composerApi.getState();\n    if (!core) throw new Error(\"Composer is not available\");\n    return core.removeAttachment(this.getState().id);\n  }\n}\n\nexport class ThreadComposerAttachmentRuntimeImpl extends ComposerAttachmentRuntime<\"thread-composer\"> {\n  public get source(): \"thread-composer\" {\n    return \"thread-composer\";\n  }\n}\n\nexport class EditComposerAttachmentRuntimeImpl extends ComposerAttachmentRuntime<\"edit-composer\"> {\n  public get source(): \"edit-composer\" {\n    return \"edit-composer\";\n  }\n}\n\nexport class MessageAttachmentRuntimeImpl extends AttachmentRuntimeImpl<\"message\"> {\n  public get source(): \"message\" {\n    return \"message\";\n  }\n\n  constructor(core: AttachmentSnapshotBinding<\"message\">) {\n    super(core);\n  }\n\n  public remove(): never {\n    throw new Error(\"Message attachments cannot be removed\");\n  }\n}\n"],"names":[],"mappings":";;;;;;;AA8CO,IAAe,wBAAf,MAGP;IAOE,YAAoB,KAAA,CAA0C;QAA1C,IAAA,CAAA,KAAA,GAAA;IAA2C;IAN/D,IAAW,OAAO;QAChB,OAAO,IAAA,CAAK,KAAA,CAAM,IAAA;IACpB;IAMU,yBAAyB;QACjC,IAAA,CAAK,QAAA,GAAW,IAAA,CAAK,QAAA,CAAS,IAAA,CAAK,IAAI;QACvC,IAAA,CAAK,MAAA,GAAS,IAAA,CAAK,MAAA,CAAO,IAAA,CAAK,IAAI;QACnC,IAAA,CAAK,SAAA,GAAY,IAAA,CAAK,SAAA,CAAU,IAAA,CAAK,IAAI;IAC3C;IAEO,WAAiD;QACtD,OAAO,IAAA,CAAK,KAAA,CAAM,QAAA,CAAS;IAC7B;IAIO,UAAU,QAAA,EAAsB;QACrC,OAAO,IAAA,CAAK,KAAA,CAAM,SAAA,CAAU,QAAQ;IACtC;AACF;AAEA,IAAe,4BAAf,cAEU,sBAA8B;IACtC,YACE,IAAA,EACQ,YAAA,CACR;QACA,KAAA,CAAM,IAAI;QAFF,IAAA,CAAA,YAAA,GAAA;IAGV;IAEO,SAAS;QACd,MAAM,OAAO,IAAA,CAAK,YAAA,CAAa,QAAA,CAAS;QACxC,IAAI,CAAC,KAAM,CAAA,MAAM,IAAI,MAAM,2BAA2B;QACtD,OAAO,KAAK,gBAAA,CAAiB,IAAA,CAAK,QAAA,CAAS,EAAE,EAAE;IACjD;AACF;AAEO,IAAM,sCAAN,cAAkD,0BAA6C;IACpG,IAAW,SAA4B;QACrC,OAAO;IACT;AACF;AAEO,IAAM,oCAAN,cAAgD,0BAA2C;IAChG,IAAW,SAA0B;QACnC,OAAO;IACT;AACF;AAEO,IAAM,+BAAN,cAA2C,sBAAiC;IACjF,IAAW,SAAoB;QAC7B,OAAO;IACT;IAEA,YAAY,IAAA,CAA4C;QACtD,KAAA,CAAM,IAAI;IACZ;IAEO,SAAgB;QACrB,MAAM,IAAI,MAAM,uCAAuC;IACzD;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1249, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/api/subscribable/EventSubscriptionSubject.ts"],"sourcesContent":["import { Unsubscribe } from \"../../types\";\nimport { BaseSubject } from \"./BaseSubject\";\nimport { EventSubscribable } from \"./Subscribable\";\n\nexport class EventSubscriptionSubject<\n  TEvent extends string,\n> extends BaseSubject {\n  constructor(private config: EventSubscribable<TEvent>) {\n    super();\n  }\n\n  public getState() {\n    return this.config.binding.getState();\n  }\n\n  public outerSubscribe(callback: () => void) {\n    return this.config.binding.subscribe(callback);\n  }\n\n  protected _connect(): Unsubscribe {\n    const callback = () => {\n      this.notifySubscribers();\n    };\n\n    let lastState = this.config.binding.getState();\n    let innerUnsubscribe = lastState?.unstable_on(this.config.event, callback);\n    const onRuntimeUpdate = () => {\n      const newState = this.config.binding.getState();\n      if (newState === lastState) return;\n      lastState = newState;\n\n      innerUnsubscribe?.();\n      innerUnsubscribe = this.config.binding\n        .getState()\n        ?.unstable_on(this.config.event, callback);\n    };\n\n    const outerUnsubscribe = this.outerSubscribe(onRuntimeUpdate);\n    return () => {\n      outerUnsubscribe?.();\n      innerUnsubscribe?.();\n    };\n  }\n}\n"],"names":[],"mappings":";;;;AACA,SAAS,mBAAmB;;AAGrB,IAAM,2BAAN,uMAEG,cAAA,CAAY;IACpB,YAAoB,MAAA,CAAmC;QACrD,KAAA,CAAM;QADY,IAAA,CAAA,MAAA,GAAA;IAEpB;IAEO,WAAW;QAChB,OAAO,IAAA,CAAK,MAAA,CAAO,OAAA,CAAQ,QAAA,CAAS;IACtC;IAEO,eAAe,QAAA,EAAsB;QAC1C,OAAO,IAAA,CAAK,MAAA,CAAO,OAAA,CAAQ,SAAA,CAAU,QAAQ;IAC/C;IAEU,WAAwB;QAChC,MAAM,WAAW,MAAM;YACrB,IAAA,CAAK,iBAAA,CAAkB;QACzB;QAEA,IAAI,YAAY,IAAA,CAAK,MAAA,CAAO,OAAA,CAAQ,QAAA,CAAS;QAC7C,IAAI,mBAAmB,WAAW,YAAY,IAAA,CAAK,MAAA,CAAO,KAAA,EAAO,QAAQ;QACzE,MAAM,kBAAkB,MAAM;YAC5B,MAAM,WAAW,IAAA,CAAK,MAAA,CAAO,OAAA,CAAQ,QAAA,CAAS;YAC9C,IAAI,aAAa,UAAW,CAAA;YAC5B,YAAY;YAEZ,mBAAmB;YACnB,mBAAmB,IAAA,CAAK,MAAA,CAAO,OAAA,CAC5B,QAAA,CAAS,GACR,YAAY,IAAA,CAAK,MAAA,CAAO,KAAA,EAAO,QAAQ;QAC7C;QAEA,MAAM,mBAAmB,IAAA,CAAK,cAAA,CAAe,eAAe;QAC5D,OAAO,MAAM;YACX,mBAAmB;YACnB,mBAAmB;QACrB;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1294, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/api/ComposerRuntime.ts"],"sourcesContent":["import { Attachment, PendingAttachment } from \"../types/AttachmentTypes\";\nimport {\n  ComposerRuntimeCore,\n  ComposerRuntimeEventType,\n  ThreadComposerRuntimeCore,\n} from \"../runtimes/core/ComposerRuntimeCore\";\nimport { Unsubscribe } from \"../types\";\nimport { SubscribableWithState } from \"./subscribable/Subscribable\";\nimport { LazyMemoizeSubject } from \"./subscribable/LazyMemoizeSubject\";\nimport {\n  AttachmentRuntime,\n  AttachmentState,\n  EditComposerAttachmentRuntimeImpl,\n  ThreadComposerAttachmentRuntimeImpl,\n} from \"./AttachmentRuntime\";\nimport { ShallowMemoizeSubject } from \"./subscribable/ShallowMemoizeSubject\";\nimport { SKIP_UPDATE } from \"./subscribable/SKIP_UPDATE\";\nimport { ComposerRuntimePath } from \"./RuntimePathTypes\";\nimport { MessageRole, RunConfig } from \"../types/AssistantTypes\";\nimport { EventSubscriptionSubject } from \"./subscribable/EventSubscriptionSubject\";\n\nexport type ThreadComposerRuntimeCoreBinding = SubscribableWithState<\n  ThreadComposerRuntimeCore | undefined,\n  ComposerRuntimePath & { composerSource: \"thread\" }\n>;\n\nexport type EditComposerRuntimeCoreBinding = SubscribableWithState<\n  ComposerRuntimeCore | undefined,\n  ComposerRuntimePath & { composerSource: \"edit\" }\n>;\n\nexport type ComposerRuntimeCoreBinding = SubscribableWithState<\n  ComposerRuntimeCore | undefined,\n  ComposerRuntimePath\n>;\n\ntype BaseComposerState = {\n  readonly canCancel: boolean;\n  readonly isEditing: boolean;\n  readonly isEmpty: boolean;\n\n  readonly text: string;\n  readonly role: MessageRole;\n  readonly attachments: readonly Attachment[];\n  readonly runConfig: RunConfig;\n};\n\nexport type ThreadComposerState = BaseComposerState & {\n  readonly type: \"thread\";\n\n  readonly attachments: readonly PendingAttachment[];\n};\n\nexport type EditComposerState = BaseComposerState & {\n  readonly type: \"edit\";\n};\n\nexport type ComposerState = ThreadComposerState | EditComposerState;\n\nconst EMPTY_ARRAY = Object.freeze([]);\nconst EMPTY_OBJECT = Object.freeze({});\nconst getThreadComposerState = (\n  runtime: ThreadComposerRuntimeCore | undefined,\n): ThreadComposerState => {\n  return Object.freeze({\n    type: \"thread\",\n\n    isEditing: runtime?.isEditing ?? false,\n    canCancel: runtime?.canCancel ?? false,\n    isEmpty: runtime?.isEmpty ?? true,\n\n    attachments: runtime?.attachments ?? EMPTY_ARRAY,\n    text: runtime?.text ?? \"\",\n    role: runtime?.role ?? \"user\",\n    runConfig: runtime?.runConfig ?? EMPTY_OBJECT,\n\n    value: runtime?.text ?? \"\",\n  });\n};\n\nconst getEditComposerState = (\n  runtime: ComposerRuntimeCore | undefined,\n): EditComposerState => {\n  return Object.freeze({\n    type: \"edit\",\n\n    isEditing: runtime?.isEditing ?? false,\n    canCancel: runtime?.canCancel ?? false,\n    isEmpty: runtime?.isEmpty ?? true,\n\n    text: runtime?.text ?? \"\",\n    role: runtime?.role ?? \"user\",\n    attachments: runtime?.attachments ?? EMPTY_ARRAY,\n    runConfig: runtime?.runConfig ?? EMPTY_OBJECT,\n\n    value: runtime?.text ?? \"\",\n  });\n};\n\nexport type ComposerRuntime = {\n  readonly path: ComposerRuntimePath;\n  readonly type: \"edit\" | \"thread\";\n\n  /**\n   * Get the current state of the composer. Includes any data that has been added to the composer.\n   */\n  getState(): ComposerState;\n\n  getAttachmentAccept(): string;\n\n  /**\n   * Given a standard js File object, add it to the composer. A composer can have multiple attachments.\n   * @param file The file to add to the composer.\n   */\n  addAttachment(file: File): Promise<void>;\n\n  /**\n   * Set the text of the composer.\n   * @param text The text to set in the composer.\n   */\n  setText(text: string): void;\n\n  /**\n   * Set the role of the composer. For instance, if you'd like a specific message to have the 'assistant' role, you can do so here.\n   * @param role The role to set in the composer.\n   */\n  setRole(role: MessageRole): void;\n\n  /**\n   * Set the run config of the composer. This is used to send custom configuration data to the model.\n   * Within your backend, you can access this data using the `runConfig` object.\n   * Example:\n   * ```ts\n   * composerRuntime.setRunConfig({\n   *   custom: { customField: \"customValue\" }\n   * });\n   * ```\n   * @param runConfig The run config to set in the composer.\n   */\n  setRunConfig(runConfig: RunConfig): void;\n\n  /**\n   * Reset the composer. This will clear the entire state of the composer, including all text and attachments.\n   */\n  reset(): Promise<void>;\n\n  /**\n   * Clear all attachments from the composer.\n   */\n  clearAttachments(): Promise<void>;\n\n  /**\n   * Send a message. This will send whatever text or attachments are in the composer.\n   */\n  send(): void;\n\n  /**\n   * Cancel the current run. In edit mode, this will exit edit mode.\n   */\n  cancel(): void;\n\n  /**\n   * Listens for changes to the composer state.\n   * @param callback The callback to call when the composer state changes.\n   */\n  subscribe(callback: () => void): Unsubscribe;\n\n  /**\n   * Get an attachment by index.\n   * @param idx The index of the attachment to get.\n   */\n  getAttachmentByIndex(idx: number): AttachmentRuntime;\n};\n\nexport abstract class ComposerRuntimeImpl implements ComposerRuntime {\n  public get path() {\n    return this._core.path;\n  }\n\n  public abstract get type(): \"edit\" | \"thread\";\n\n  constructor(protected _core: ComposerRuntimeCoreBinding) {}\n\n  protected __internal_bindMethods() {\n    this.setText = this.setText.bind(this);\n    this.setRunConfig = this.setRunConfig.bind(this);\n    this.getState = this.getState.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.addAttachment = this.addAttachment.bind(this);\n    this.reset = this.reset.bind(this);\n    this.clearAttachments = this.clearAttachments.bind(this);\n    this.send = this.send.bind(this);\n    this.cancel = this.cancel.bind(this);\n    this.setRole = this.setRole.bind(this);\n    this.getAttachmentAccept = this.getAttachmentAccept.bind(this);\n    this.getAttachmentByIndex = this.getAttachmentByIndex.bind(this);\n    this.unstable_on = this.unstable_on.bind(this);\n  }\n\n  public abstract getState(): ComposerState;\n\n  public setText(text: string) {\n    const core = this._core.getState();\n    if (!core) throw new Error(\"Composer is not available\");\n    core.setText(text);\n  }\n\n  public setRunConfig(runConfig: RunConfig) {\n    const core = this._core.getState();\n    if (!core) throw new Error(\"Composer is not available\");\n    core.setRunConfig(runConfig);\n  }\n\n  public addAttachment(file: File) {\n    const core = this._core.getState();\n    if (!core) throw new Error(\"Composer is not available\");\n    return core.addAttachment(file);\n  }\n\n  public reset() {\n    const core = this._core.getState();\n    if (!core) throw new Error(\"Composer is not available\");\n    return core.reset();\n  }\n\n  public clearAttachments() {\n    const core = this._core.getState();\n    if (!core) throw new Error(\"Composer is not available\");\n    return core.clearAttachments();\n  }\n\n  public send() {\n    const core = this._core.getState();\n    if (!core) throw new Error(\"Composer is not available\");\n    core.send();\n  }\n\n  public cancel() {\n    const core = this._core.getState();\n    if (!core) throw new Error(\"Composer is not available\");\n    core.cancel();\n  }\n\n  public setRole(role: MessageRole) {\n    const core = this._core.getState();\n    if (!core) throw new Error(\"Composer is not available\");\n    core.setRole(role);\n  }\n\n  public subscribe(callback: () => void) {\n    return this._core.subscribe(callback);\n  }\n\n  private _eventSubscriptionSubjects = new Map<\n    string,\n    EventSubscriptionSubject<ComposerRuntimeEventType>\n  >();\n\n  public unstable_on(\n    event: ComposerRuntimeEventType,\n    callback: () => void,\n  ): Unsubscribe {\n    let subject = this._eventSubscriptionSubjects.get(event);\n    if (!subject) {\n      subject = new EventSubscriptionSubject({\n        event: event,\n        binding: this._core,\n      });\n      this._eventSubscriptionSubjects.set(event, subject);\n    }\n    return subject.subscribe(callback);\n  }\n\n  public getAttachmentAccept(): string {\n    const core = this._core.getState();\n    if (!core) throw new Error(\"Composer is not available\");\n    return core.getAttachmentAccept();\n  }\n\n  public abstract getAttachmentByIndex(idx: number): AttachmentRuntime;\n}\n\nexport type ThreadComposerRuntime = Omit<\n  ComposerRuntime,\n  \"getState\" | \"getAttachmentByIndex\"\n> & {\n  readonly path: ComposerRuntimePath & { composerSource: \"thread\" };\n  readonly type: \"thread\";\n  getState(): ThreadComposerState;\n\n  getAttachmentByIndex(\n    idx: number,\n  ): AttachmentRuntime & { source: \"thread-composer\" };\n};\n\nexport class ThreadComposerRuntimeImpl\n  extends ComposerRuntimeImpl\n  implements ThreadComposerRuntime\n{\n  public override get path() {\n    return this._core.path as ComposerRuntimePath & {\n      composerSource: \"thread\";\n    };\n  }\n\n  public get type() {\n    return \"thread\" as const;\n  }\n\n  private _getState;\n\n  constructor(core: ThreadComposerRuntimeCoreBinding) {\n    const stateBinding = new LazyMemoizeSubject({\n      path: core.path,\n      getState: () => getThreadComposerState(core.getState()),\n      subscribe: (callback) => core.subscribe(callback),\n    });\n    super({\n      path: core.path,\n      getState: () => core.getState(),\n      subscribe: (callback) => stateBinding.subscribe(callback),\n    });\n    this._getState = stateBinding.getState.bind(stateBinding);\n  }\n\n  public override getState(): ThreadComposerState {\n    return this._getState();\n  }\n\n  public getAttachmentByIndex(idx: number) {\n    return new ThreadComposerAttachmentRuntimeImpl(\n      new ShallowMemoizeSubject({\n        path: {\n          ...this.path,\n          attachmentSource: \"thread-composer\",\n          attachmentSelector: { type: \"index\", index: idx },\n          ref: this.path.ref + `${this.path.ref}.attachments[${idx}]`,\n        },\n        getState: () => {\n          const attachments = this.getState().attachments;\n          const attachment = attachments[idx];\n          if (!attachment) return SKIP_UPDATE;\n\n          return {\n            ...attachment,\n            source: \"thread-composer\",\n          } satisfies AttachmentState & { source: \"thread-composer\" };\n        },\n        subscribe: (callback) => this._core.subscribe(callback),\n      }),\n      this._core,\n    );\n  }\n}\n\nexport type EditComposerRuntime = Omit<\n  ComposerRuntime,\n  \"getState\" | \"getAttachmentByIndex\"\n> & {\n  readonly path: ComposerRuntimePath & { composerSource: \"edit\" };\n  readonly type: \"edit\";\n\n  getState(): EditComposerState;\n  beginEdit(): void;\n\n  getAttachmentByIndex(\n    idx: number,\n  ): AttachmentRuntime & { source: \"edit-composer\" };\n};\n\nexport class EditComposerRuntimeImpl\n  extends ComposerRuntimeImpl\n  implements EditComposerRuntime\n{\n  public override get path() {\n    return this._core.path as ComposerRuntimePath & { composerSource: \"edit\" };\n  }\n\n  public get type() {\n    return \"edit\" as const;\n  }\n\n  private _getState;\n  constructor(\n    core: EditComposerRuntimeCoreBinding,\n    private _beginEdit: () => void,\n  ) {\n    const stateBinding = new LazyMemoizeSubject({\n      path: core.path,\n      getState: () => getEditComposerState(core.getState()),\n      subscribe: (callback) => core.subscribe(callback),\n    });\n\n    super({\n      path: core.path,\n      getState: () => core.getState(),\n      subscribe: (callback) => stateBinding.subscribe(callback),\n    });\n\n    this._getState = stateBinding.getState.bind(stateBinding);\n  }\n\n  public override __internal_bindMethods() {\n    super.__internal_bindMethods();\n    this.beginEdit = this.beginEdit.bind(this);\n  }\n\n  public override getState(): EditComposerState {\n    return this._getState();\n  }\n\n  public beginEdit() {\n    this._beginEdit();\n  }\n\n  public getAttachmentByIndex(idx: number) {\n    return new EditComposerAttachmentRuntimeImpl(\n      new ShallowMemoizeSubject({\n        path: {\n          ...this.path,\n          attachmentSource: \"edit-composer\",\n          attachmentSelector: { type: \"index\", index: idx },\n          ref: this.path.ref + `${this.path.ref}.attachments[${idx}]`,\n        },\n        getState: () => {\n          const attachments = this.getState().attachments;\n          const attachment = attachments[idx];\n          if (!attachment) return SKIP_UPDATE;\n\n          return {\n            ...attachment,\n            source: \"edit-composer\",\n          } satisfies AttachmentState & { source: \"edit-composer\" };\n        },\n        subscribe: (callback) => this._core.subscribe(callback),\n      }),\n      this._core,\n    );\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1533, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/api/ContentPartRuntime.ts"],"sourcesContent":["import {\n  ThreadAssistantContentPart,\n  ThreadUserContentPart,\n  ContentPartStatus,\n  ToolCallContentPartStatus,\n} from \"../types/AssistantTypes\";\nimport { ThreadRuntimeCoreBinding } from \"./ThreadRuntime\";\nimport { MessageStateBinding } from \"./MessageRuntime\";\nimport { SubscribableWithState } from \"./subscribable/Subscribable\";\nimport { Unsubscribe } from \"../types\";\nimport { ContentPartRuntimePath } from \"./RuntimePathTypes\";\nimport { ToolResponse } from \"assistant-stream\";\n\nexport type ContentPartState = (\n  | ThreadUserContentPart\n  | ThreadAssistantContentPart\n) & {\n  readonly status: ContentPartStatus | ToolCallContentPartStatus;\n};\n\ntype ContentPartSnapshotBinding = SubscribableWithState<\n  ContentPartState,\n  ContentPartRuntimePath\n>;\n\nexport type ContentPartRuntime = {\n  /**\n   * Add tool result to a tool call content part that has no tool result yet.\n   * This is useful when you are collecting a tool result via user input (\"human tool calls\").\n   */\n  addToolResult(result: any | ToolResponse<any>): void;\n\n  readonly path: ContentPartRuntimePath;\n  getState(): ContentPartState;\n  subscribe(callback: () => void): Unsubscribe;\n};\n\nexport class ContentPartRuntimeImpl implements ContentPartRuntime {\n  public get path() {\n    return this.contentBinding.path;\n  }\n\n  constructor(\n    private contentBinding: ContentPartSnapshotBinding,\n    private messageApi?: MessageStateBinding,\n    private threadApi?: ThreadRuntimeCoreBinding,\n  ) {}\n\n  protected __internal_bindMethods() {\n    this.addToolResult = this.addToolResult.bind(this);\n    this.getState = this.getState.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n  }\n\n  public getState() {\n    return this.contentBinding.getState();\n  }\n\n  public addToolResult(result: any | ToolResponse<any>) {\n    const state = this.contentBinding.getState();\n    if (!state) throw new Error(\"Content part is not available\");\n\n    if (state.type !== \"tool-call\")\n      throw new Error(\"Tried to add tool result to non-tool content part\");\n\n    if (!this.messageApi)\n      throw new Error(\n        \"Message API is not available. This is likely a bug in assistant-ui.\",\n      );\n    if (!this.threadApi) throw new Error(\"Thread API is not available\");\n\n    const message = this.messageApi.getState();\n    if (!message) throw new Error(\"Message is not available\");\n\n    const toolName = state.toolName;\n    const toolCallId = state.toolCallId;\n\n    const response = ToolResponse.toResponse(result);\n    this.threadApi.getState().addToolResult({\n      messageId: message.id,\n      toolName,\n      toolCallId,\n      result: response.result,\n      artifact: response.artifact,\n      isError: response.isError,\n    });\n  }\n\n  public subscribe(callback: () => void) {\n    return this.contentBinding.subscribe(callback);\n  }\n}\n"],"names":[],"mappings":";;;;AAWA,SAAS,oBAAoB;;AA0BtB,IAAM,yBAAN,MAA2D;IAKhE,YACU,cAAA,EACA,UAAA,EACA,SAAA,CACR;QAHQ,IAAA,CAAA,cAAA,GAAA;QACA,IAAA,CAAA,UAAA,GAAA;QACA,IAAA,CAAA,SAAA,GAAA;IACP;IARH,IAAW,OAAO;QAChB,OAAO,IAAA,CAAK,cAAA,CAAe,IAAA;IAC7B;IAQU,yBAAyB;QACjC,IAAA,CAAK,aAAA,GAAgB,IAAA,CAAK,aAAA,CAAc,IAAA,CAAK,IAAI;QACjD,IAAA,CAAK,QAAA,GAAW,IAAA,CAAK,QAAA,CAAS,IAAA,CAAK,IAAI;QACvC,IAAA,CAAK,SAAA,GAAY,IAAA,CAAK,SAAA,CAAU,IAAA,CAAK,IAAI;IAC3C;IAEO,WAAW;QAChB,OAAO,IAAA,CAAK,cAAA,CAAe,QAAA,CAAS;IACtC;IAEO,cAAc,MAAA,EAAiC;QACpD,MAAM,QAAQ,IAAA,CAAK,cAAA,CAAe,QAAA,CAAS;QAC3C,IAAI,CAAC,MAAO,CAAA,MAAM,IAAI,MAAM,+BAA+B;QAE3D,IAAI,MAAM,IAAA,KAAS,aACjB,MAAM,IAAI,MAAM,mDAAmD;QAErE,IAAI,CAAC,IAAA,CAAK,UAAA,EACR,MAAM,IAAI,MACR;QAEJ,IAAI,CAAC,IAAA,CAAK,SAAA,CAAW,CAAA,MAAM,IAAI,MAAM,6BAA6B;QAElE,MAAM,UAAU,IAAA,CAAK,UAAA,CAAW,QAAA,CAAS;QACzC,IAAI,CAAC,QAAS,CAAA,MAAM,IAAI,MAAM,0BAA0B;QAExD,MAAM,WAAW,MAAM,QAAA;QACvB,MAAM,aAAa,MAAM,UAAA;QAEzB,MAAM,uLAAW,eAAA,CAAa,UAAA,CAAW,MAAM;QAC/C,IAAA,CAAK,SAAA,CAAU,QAAA,CAAS,EAAE,aAAA,CAAc;YACtC,WAAW,QAAQ,EAAA;YACnB;YACA;YACA,QAAQ,SAAS,MAAA;YACjB,UAAU,SAAS,QAAA;YACnB,SAAS,SAAS,OAAA;QACpB,CAAC;IACH;IAEO,UAAU,QAAA,EAAsB;QACrC,OAAO,IAAA,CAAK,cAAA,CAAe,SAAA,CAAU,QAAQ;IAC/C;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1588, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/api/subscribable/NestedSubscriptionSubject.ts"],"sourcesContent":["import { Unsubscribe } from \"../../types\";\nimport { BaseSubject } from \"./BaseSubject\";\nimport {\n  NestedSubscribable,\n  Subscribable,\n  SubscribableWithState,\n} from \"./Subscribable\";\n\nexport class NestedSubscriptionSubject<\n    TState extends Subscribable | undefined,\n    TPath,\n  >\n  extends BaseSubject\n  implements\n    SubscribableWithState<TState, TPath>,\n    NestedSubscribable<TState, TPath>\n{\n  public get path() {\n    return this.binding.path;\n  }\n\n  constructor(private binding: NestedSubscribable<TState, TPath>) {\n    super();\n  }\n\n  public getState() {\n    return this.binding.getState();\n  }\n\n  public outerSubscribe(callback: () => void) {\n    return this.binding.subscribe(callback);\n  }\n\n  protected _connect(): Unsubscribe {\n    const callback = () => {\n      this.notifySubscribers();\n    };\n\n    let lastState = this.binding.getState();\n    let innerUnsubscribe = lastState?.subscribe(callback);\n    const onRuntimeUpdate = () => {\n      const newState = this.binding.getState();\n      if (newState === lastState) return;\n      lastState = newState;\n\n      innerUnsubscribe?.();\n      innerUnsubscribe = this.binding.getState()?.subscribe(callback);\n\n      callback();\n    };\n\n    const outerUnsubscribe = this.outerSubscribe(onRuntimeUpdate);\n    return () => {\n      outerUnsubscribe?.();\n      innerUnsubscribe?.();\n    };\n  }\n}\n"],"names":[],"mappings":";;;;AACA,SAAS,mBAAmB;;AAOrB,IAAM,4BAAN,uMAIG,cAAA,CAIV;IAKE,YAAoB,OAAA,CAA4C;QAC9D,KAAA,CAAM;QADY,IAAA,CAAA,OAAA,GAAA;IAEpB;IANA,IAAW,OAAO;QAChB,OAAO,IAAA,CAAK,OAAA,CAAQ,IAAA;IACtB;IAMO,WAAW;QAChB,OAAO,IAAA,CAAK,OAAA,CAAQ,QAAA,CAAS;IAC/B;IAEO,eAAe,QAAA,EAAsB;QAC1C,OAAO,IAAA,CAAK,OAAA,CAAQ,SAAA,CAAU,QAAQ;IACxC;IAEU,WAAwB;QAChC,MAAM,WAAW,MAAM;YACrB,IAAA,CAAK,iBAAA,CAAkB;QACzB;QAEA,IAAI,YAAY,IAAA,CAAK,OAAA,CAAQ,QAAA,CAAS;QACtC,IAAI,mBAAmB,WAAW,UAAU,QAAQ;QACpD,MAAM,kBAAkB,MAAM;YAC5B,MAAM,WAAW,IAAA,CAAK,OAAA,CAAQ,QAAA,CAAS;YACvC,IAAI,aAAa,UAAW,CAAA;YAC5B,YAAY;YAEZ,mBAAmB;YACnB,mBAAmB,IAAA,CAAK,OAAA,CAAQ,QAAA,CAAS,GAAG,UAAU,QAAQ;YAE9D,SAAS;QACX;QAEA,MAAM,mBAAmB,IAAA,CAAK,cAAA,CAAe,eAAe;QAC5D,OAAO,MAAM;YACX,mBAAmB;YACnB,mBAAmB;QACrB;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1637, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/api/MessageRuntime.ts"],"sourcesContent":["import {\n  SpeechState,\n  SubmittedFeedback,\n} from \"../runtimes/core/ThreadRuntimeCore\";\nimport { symbolInnerMessage } from \"../runtimes/external-store/getExternalStoreMessage\";\nimport {\n  ThreadMessage,\n  ThreadAssistantContentPart,\n  ThreadUserContentPart,\n  Unsubscribe,\n} from \"../types\";\nimport {\n  ContentPartStatus,\n  RunConfig,\n  ToolCallContentPartStatus,\n} from \"../types/AssistantTypes\";\nimport { getThreadMessageText } from \"../utils/getThreadMessageText\";\nimport {\n  AttachmentRuntime,\n  AttachmentState,\n  MessageAttachmentRuntimeImpl,\n} from \"./AttachmentRuntime\";\nimport {\n  EditComposerRuntime,\n  EditComposerRuntimeImpl,\n} from \"./ComposerRuntime\";\nimport {\n  ContentPartRuntime,\n  ContentPartRuntimeImpl,\n  ContentPartState,\n} from \"./ContentPartRuntime\";\nimport { MessageRuntimePath } from \"./RuntimePathTypes\";\nimport { ThreadRuntimeCoreBinding } from \"./ThreadRuntime\";\nimport { NestedSubscriptionSubject } from \"./subscribable/NestedSubscriptionSubject\";\nimport { SKIP_UPDATE } from \"./subscribable/SKIP_UPDATE\";\nimport { ShallowMemoizeSubject } from \"./subscribable/ShallowMemoizeSubject\";\nimport { SubscribableWithState } from \"./subscribable/Subscribable\";\n\nconst COMPLETE_STATUS: ContentPartStatus = Object.freeze({\n  type: \"complete\",\n});\n\nexport const toContentPartStatus = (\n  message: ThreadMessage,\n  partIndex: number,\n  part: ThreadUserContentPart | ThreadAssistantContentPart,\n): ToolCallContentPartStatus => {\n  if (message.role !== \"assistant\") return COMPLETE_STATUS;\n\n  if (part.type === \"tool-call\") {\n    if (!part.result) {\n      return message.status as ToolCallContentPartStatus;\n    } else {\n      return COMPLETE_STATUS;\n    }\n  }\n\n  const isLastPart = partIndex === Math.max(0, message.content.length - 1);\n  if (message.status.type === \"requires-action\") return COMPLETE_STATUS;\n  return isLastPart ? (message.status as ContentPartStatus) : COMPLETE_STATUS;\n};\n\nconst getContentPartState = (\n  message: MessageState,\n  partIndex: number,\n): ContentPartState | SKIP_UPDATE => {\n  const part = message.content[partIndex];\n  if (!part) {\n    return SKIP_UPDATE;\n  }\n\n  // if the content part is the same, don't update\n  const status = toContentPartStatus(message, partIndex, part);\n  return Object.freeze({\n    ...part,\n    ...{ [symbolInnerMessage]: (part as any)[symbolInnerMessage] },\n    status,\n  });\n};\n\nexport type MessageState = ThreadMessage & {\n  readonly parentId: string | null;\n  readonly isLast: boolean;\n\n  readonly branchNumber: number;\n  readonly branchCount: number;\n\n  /**\n   * @deprecated This API is still under active development and might change without notice.\n   */\n  readonly speech: SpeechState | undefined;\n  readonly submittedFeedback: SubmittedFeedback | undefined;\n};\n\nexport type MessageStateBinding = SubscribableWithState<\n  MessageState,\n  MessageRuntimePath\n>;\n\ntype ReloadConfig = {\n  runConfig?: RunConfig;\n};\n\nexport type MessageRuntime = {\n  readonly path: MessageRuntimePath;\n\n  readonly composer: EditComposerRuntime;\n\n  getState(): MessageState;\n  reload(config?: ReloadConfig): void;\n  /**\n   * @deprecated This API is still under active development and might change without notice.\n   */\n  speak(): void;\n  /**\n   * @deprecated This API is still under active development and might change without notice.\n   */\n  stopSpeaking(): void;\n  submitFeedback({ type }: { type: \"positive\" | \"negative\" }): void;\n  switchToBranch({\n    position,\n    branchId,\n  }: {\n    position?: \"previous\" | \"next\" | undefined;\n    branchId?: string | undefined;\n  }): void;\n  unstable_getCopyText(): string;\n\n  subscribe(callback: () => void): Unsubscribe;\n\n  getContentPartByIndex(idx: number): ContentPartRuntime;\n  getContentPartByToolCallId(toolCallId: string): ContentPartRuntime;\n\n  getAttachmentByIndex(idx: number): AttachmentRuntime & { source: \"message\" };\n};\n\nexport class MessageRuntimeImpl implements MessageRuntime {\n  public get path() {\n    return this._core.path;\n  }\n\n  constructor(\n    private _core: MessageStateBinding,\n    private _threadBinding: ThreadRuntimeCoreBinding,\n  ) {\n    this.composer = new EditComposerRuntimeImpl(\n      new NestedSubscriptionSubject({\n        path: {\n          ...this.path,\n          ref: this.path.ref + `${this.path.ref}.composer`,\n          composerSource: \"edit\",\n        },\n        getState: this._getEditComposerRuntimeCore,\n        subscribe: (callback) => this._threadBinding.subscribe(callback),\n      }),\n      () => this._threadBinding.getState().beginEdit(this._core.getState().id),\n    );\n  }\n\n  protected __internal_bindMethods() {\n    this.reload = this.reload.bind(this);\n    this.getState = this.getState.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.getContentPartByIndex = this.getContentPartByIndex.bind(this);\n    this.getContentPartByToolCallId =\n      this.getContentPartByToolCallId.bind(this);\n    this.getAttachmentByIndex = this.getAttachmentByIndex.bind(this);\n    this.unstable_getCopyText = this.unstable_getCopyText.bind(this);\n    this.speak = this.speak.bind(this);\n    this.stopSpeaking = this.stopSpeaking.bind(this);\n    this.submitFeedback = this.submitFeedback.bind(this);\n    this.switchToBranch = this.switchToBranch.bind(this);\n  }\n\n  public readonly composer;\n\n  private _getEditComposerRuntimeCore = () => {\n    return this._threadBinding\n      .getState()\n      .getEditComposer(this._core.getState().id);\n  };\n\n  public getState() {\n    return this._core.getState();\n  }\n\n  public reload(reloadConfig: ReloadConfig = {}) {\n    const editComposerRuntimeCore = this._getEditComposerRuntimeCore();\n    const composerRuntimeCore =\n      editComposerRuntimeCore ?? this._threadBinding.getState().composer;\n    const composer = editComposerRuntimeCore ?? composerRuntimeCore;\n\n    const { runConfig = composer.runConfig } = reloadConfig;\n    const state = this._core.getState();\n    if (state.role !== \"assistant\")\n      throw new Error(\"Can only reload assistant messages\");\n\n    this._threadBinding.getState().startRun({\n      parentId: state.parentId,\n      sourceId: state.id,\n      runConfig,\n    });\n  }\n\n  public speak() {\n    const state = this._core.getState();\n    return this._threadBinding.getState().speak(state.id);\n  }\n\n  public stopSpeaking() {\n    const state = this._core.getState();\n    const thread = this._threadBinding.getState();\n    if (thread.speech?.messageId === state.id) {\n      this._threadBinding.getState().stopSpeaking();\n    } else {\n      throw new Error(\"Message is not being spoken\");\n    }\n  }\n\n  public submitFeedback({ type }: { type: \"positive\" | \"negative\" }) {\n    const state = this._core.getState();\n    this._threadBinding.getState().submitFeedback({\n      messageId: state.id,\n      type,\n    });\n  }\n\n  public switchToBranch({\n    position,\n    branchId,\n  }: {\n    position?: \"previous\" | \"next\" | undefined;\n    branchId?: string | undefined;\n  }) {\n    const state = this._core.getState();\n    if (branchId && position) {\n      throw new Error(\"May not specify both branchId and position\");\n    } else if (!branchId && !position) {\n      throw new Error(\"Must specify either branchId or position\");\n    }\n\n    const thread = this._threadBinding.getState();\n    const branches = thread.getBranches(state.id);\n    let targetBranch = branchId;\n    if (position === \"previous\") {\n      targetBranch = branches[state.branchNumber - 2];\n    } else if (position === \"next\") {\n      targetBranch = branches[state.branchNumber];\n    }\n    if (!targetBranch) throw new Error(\"Branch not found\");\n\n    this._threadBinding.getState().switchToBranch(targetBranch);\n  }\n\n  public unstable_getCopyText() {\n    return getThreadMessageText(this.getState());\n  }\n\n  public subscribe(callback: () => void) {\n    return this._core.subscribe(callback);\n  }\n\n  public getContentPartByIndex(idx: number) {\n    if (idx < 0) throw new Error(\"Content part index must be >= 0\");\n    return new ContentPartRuntimeImpl(\n      new ShallowMemoizeSubject({\n        path: {\n          ...this.path,\n          ref: this.path.ref + `${this.path.ref}.content[${idx}]`,\n          contentPartSelector: { type: \"index\", index: idx },\n        },\n        getState: () => {\n          return getContentPartState(this.getState(), idx);\n        },\n        subscribe: (callback) => this._core.subscribe(callback),\n      }),\n      this._core,\n      this._threadBinding,\n    );\n  }\n\n  public getContentPartByToolCallId(toolCallId: string) {\n    return new ContentPartRuntimeImpl(\n      new ShallowMemoizeSubject({\n        path: {\n          ...this.path,\n          ref:\n            this.path.ref +\n            `${this.path.ref}.content[toolCallId=${JSON.stringify(toolCallId)}]`,\n          contentPartSelector: { type: \"toolCallId\", toolCallId },\n        },\n        getState: () => {\n          const state = this._core.getState();\n          const idx = state.content.findIndex(\n            (part) =>\n              part.type === \"tool-call\" && part.toolCallId === toolCallId,\n          );\n          if (idx === -1) return SKIP_UPDATE;\n          return getContentPartState(state, idx);\n        },\n        subscribe: (callback) => this._core.subscribe(callback),\n      }),\n      this._core,\n      this._threadBinding,\n    );\n  }\n\n  public getAttachmentByIndex(idx: number) {\n    return new MessageAttachmentRuntimeImpl(\n      new ShallowMemoizeSubject({\n        path: {\n          ...this.path,\n          ref: this.path.ref + `${this.path.ref}.attachments[${idx}]`,\n          attachmentSource: \"message\",\n          attachmentSelector: { type: \"index\", index: idx },\n        },\n        getState: () => {\n          const attachments = this.getState().attachments;\n          const attachment = attachments?.[idx];\n          if (!attachment) return SKIP_UPDATE;\n\n          return {\n            ...attachment,\n            source: \"message\",\n          } satisfies AttachmentState & { source: \"message\" };\n        },\n        subscribe: (callback) => this._core.subscribe(callback),\n      }),\n    );\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1850, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/api/ThreadRuntime.ts"],"sourcesContent":["import {\n  ThreadSuggestion,\n  RuntimeCapabilities,\n  ThreadRuntimeCore,\n  SpeechState,\n  ThreadRuntimeEventType,\n  StartRunConfig,\n  ResumeRunConfig,\n} from \"../runtimes/core/ThreadRuntimeCore\";\nimport { ExportedMessageRepository } from \"../runtimes/utils/MessageRepository\";\nimport { AppendMessage, ThreadMessage, Unsubscribe } from \"../types\";\nimport {\n  MessageRuntime,\n  MessageRuntimeImpl,\n  MessageState,\n} from \"./MessageRuntime\";\nimport { NestedSubscriptionSubject } from \"./subscribable/NestedSubscriptionSubject\";\nimport { ShallowMemoizeSubject } from \"./subscribable/ShallowMemoizeSubject\";\nimport { SubscribableWithState } from \"./subscribable/Subscribable\";\nimport {\n  ThreadComposerRuntime,\n  ThreadComposerRuntimeImpl,\n} from \"./ComposerRuntime\";\nimport { SKIP_UPDATE } from \"./subscribable/SKIP_UPDATE\";\nimport {\n  MessageRuntimePath,\n  ThreadListItemRuntimePath,\n  ThreadRuntimePath,\n} from \"./RuntimePathTypes\";\nimport { ThreadListItemState } from \"./ThreadListItemRuntime\";\nimport { RunConfig } from \"../types/AssistantTypes\";\nimport { EventSubscriptionSubject } from \"./subscribable/EventSubscriptionSubject\";\nimport { symbolInnerMessage } from \"../runtimes/external-store/getExternalStoreMessage\";\nimport { ModelContext } from \"../model-context\";\nimport { ChatModelRunOptions, ChatModelRunResult } from \"../runtimes\";\nimport { ReadonlyJSONValue } from \"assistant-stream/utils\";\n\nexport type CreateStartRunConfig = {\n  parentId: string | null;\n  sourceId?: string | null | undefined;\n  runConfig?: RunConfig | undefined;\n};\n\nexport type CreateResumeRunConfig = CreateStartRunConfig & {\n  stream: (\n    options: ChatModelRunOptions,\n  ) => AsyncGenerator<ChatModelRunResult, void, unknown>;\n};\n\nconst toResumeRunConfig = (message: CreateResumeRunConfig): ResumeRunConfig => {\n  return {\n    parentId: message.parentId ?? null,\n    sourceId: message.sourceId ?? null,\n    runConfig: message.runConfig ?? {},\n    stream: message.stream,\n  };\n};\n\nconst toStartRunConfig = (message: CreateStartRunConfig): StartRunConfig => {\n  return {\n    parentId: message.parentId ?? null,\n    sourceId: message.sourceId ?? null,\n    runConfig: message.runConfig ?? {},\n  };\n};\n\nexport type CreateAppendMessage =\n  | string\n  | {\n      parentId?: string | null | undefined;\n      sourceId?: string | null | undefined;\n      role?: AppendMessage[\"role\"] | undefined;\n      content: AppendMessage[\"content\"];\n      attachments?: AppendMessage[\"attachments\"] | undefined;\n      startRun?: boolean | undefined;\n    };\n\nconst toAppendMessage = (\n  messages: readonly ThreadMessage[],\n  message: CreateAppendMessage,\n): AppendMessage => {\n  if (typeof message === \"string\") {\n    return {\n      createdAt: new Date(),\n      parentId: messages.at(-1)?.id ?? null,\n      sourceId: null,\n      runConfig: {},\n      role: \"user\",\n      content: [{ type: \"text\", text: message }],\n      attachments: [],\n      metadata: { custom: {} },\n    };\n  }\n\n  if (message.role && message.parentId && message.attachments) {\n    return message as AppendMessage;\n  }\n\n  return {\n    ...message,\n    parentId: message.parentId ?? messages.at(-1)?.id ?? null,\n    sourceId: message.sourceId ?? null,\n    role: message.role ?? \"user\",\n    attachments: message.attachments ?? [],\n  } as AppendMessage;\n};\n\nexport type ThreadRuntimeCoreBinding = SubscribableWithState<\n  ThreadRuntimeCore,\n  ThreadRuntimePath\n> & {\n  outerSubscribe(callback: () => void): Unsubscribe;\n};\n\nexport type ThreadListItemRuntimeBinding = SubscribableWithState<\n  ThreadListItemState,\n  ThreadListItemRuntimePath\n>;\n\nexport type ThreadState = {\n  /**\n   * The thread ID.\n   * @deprecated This field is deprecated and will be removed in 0.8.0. Use `useThreadListItem().id` instead.\n   */\n  readonly threadId: string;\n\n  /**\n   * The thread metadata.\n   *\n   * @deprecated Use `useThreadListItem()` instead. This field is deprecated and will be removed in 0.8.0.\n   */\n  readonly metadata: ThreadListItemState;\n\n  /**\n   * Whether the thread is disabled. Disabled threads cannot receive new messages.\n   */\n  readonly isDisabled: boolean;\n\n  /**\n   * Whether the thread is running. A thread is considered running when there is an active stream connection to the backend.\n   */\n  readonly isRunning: boolean;\n\n  /**\n   * The capabilities of the thread, such as whether the thread supports editing, branch switching, etc.\n   */\n  readonly capabilities: RuntimeCapabilities;\n\n  /**\n   * The messages in the currently selected branch of the thread.\n   */\n  readonly messages: readonly ThreadMessage[];\n\n  /**\n   * The thread state.\n   *\n   * @deprecated This feature is experimental\n   */\n  readonly state: ReadonlyJSONValue;\n\n  /**\n   * Follow up message suggestions to show the user.\n   */\n  readonly suggestions: readonly ThreadSuggestion[];\n\n  /**\n   * Custom extra information provided by the runtime.\n   */\n  readonly extras: unknown;\n\n  /**\n   * @deprecated This API is still under active development and might change without notice.\n   */\n  readonly speech: SpeechState | undefined;\n};\n\nexport const getThreadState = (\n  runtime: ThreadRuntimeCore,\n  threadListItemState: ThreadListItemState,\n): ThreadState => {\n  const lastMessage = runtime.messages.at(-1);\n  return Object.freeze({\n    threadId: threadListItemState.id,\n    metadata: threadListItemState,\n    capabilities: runtime.capabilities,\n    isDisabled: runtime.isDisabled,\n    isRunning:\n      lastMessage?.role !== \"assistant\"\n        ? false\n        : lastMessage.status.type === \"running\",\n    messages: runtime.messages,\n    state: runtime.state,\n    suggestions: runtime.suggestions,\n    extras: runtime.extras,\n    speech: runtime.speech,\n  });\n};\n\nexport type ThreadRuntime = {\n  /**\n   * The selector for the thread runtime.\n   */\n  readonly path: ThreadRuntimePath;\n\n  /**\n   * The thread composer runtime.\n   */\n  readonly composer: ThreadComposerRuntime;\n\n  /**\n   * Gets a snapshot of the thread state.\n   */\n  getState(): ThreadState;\n\n  /**\n   * Append a new message to the thread.\n   *\n   * @example ```ts\n   * // append a new user message with the text \"Hello, world!\"\n   * threadRuntime.append(\"Hello, world!\");\n   * ```\n   *\n   * @example ```ts\n   * // append a new assistant message with the text \"Hello, world!\"\n   * threadRuntime.append({\n   *   role: \"assistant\",\n   *   content: [{ type: \"text\", text: \"Hello, world!\" }],\n   * });\n   * ```\n   */\n  append(message: CreateAppendMessage): void;\n\n  /**\n   * @deprecated pass an object with `parentId` instead. This will be removed in 0.8.0.\n   */\n  startRun(parentId: string | null): void;\n  /**\n   * Start a new run with the given configuration.\n   * @param config The configuration for starting the run\n   */\n  startRun(config: CreateStartRunConfig): void;\n\n  /**\n   * Resume a run with the given configuration.\n   * @param config The configuration for resuming the run\n   **/\n  unstable_resumeRun(config: CreateResumeRunConfig): void;\n\n  subscribe(callback: () => void): Unsubscribe;\n  cancelRun(): void;\n  getModelContext(): ModelContext;\n\n  /**\n   * @deprecated This method was renamed to `getModelContext`.\n   */\n  getModelConfig(): ModelContext;\n\n  export(): ExportedMessageRepository;\n  import(repository: ExportedMessageRepository): void;\n  getMesssageByIndex(idx: number): MessageRuntime;\n  getMesssageById(messageId: string): MessageRuntime;\n\n  /**\n   * @deprecated This API is still under active development and might change without notice.\n   */\n  stopSpeaking: () => void;\n\n  unstable_on(event: ThreadRuntimeEventType, callback: () => void): Unsubscribe;\n};\n\nexport class ThreadRuntimeImpl implements ThreadRuntime {\n  public get path() {\n    return this._threadBinding.path;\n  }\n\n  public get __internal_threadBinding() {\n    return this._threadBinding;\n  }\n\n  private readonly _threadBinding: ThreadRuntimeCoreBinding & {\n    getStateState(): ThreadState;\n  };\n\n  constructor(\n    threadBinding: ThreadRuntimeCoreBinding,\n    threadListItemBinding: ThreadListItemRuntimeBinding,\n  ) {\n    const stateBinding = new ShallowMemoizeSubject({\n      path: threadBinding.path,\n      getState: () =>\n        getThreadState(\n          threadBinding.getState(),\n          threadListItemBinding.getState(),\n        ),\n      subscribe: (callback) => {\n        const sub1 = threadBinding.subscribe(callback);\n        const sub2 = threadListItemBinding.subscribe(callback);\n        return () => {\n          sub1();\n          sub2();\n        };\n      },\n    });\n\n    this._threadBinding = {\n      path: threadBinding.path,\n      getState: () => threadBinding.getState(),\n      getStateState: () => stateBinding.getState(),\n      outerSubscribe: (callback) => threadBinding.outerSubscribe(callback),\n      subscribe: (callback) => threadBinding.subscribe(callback),\n    };\n\n    this.composer = new ThreadComposerRuntimeImpl(\n      new NestedSubscriptionSubject({\n        path: {\n          ...this.path,\n          ref: this.path.ref + `${this.path.ref}.composer`,\n          composerSource: \"thread\",\n        },\n        getState: () => this._threadBinding.getState().composer,\n        subscribe: (callback) => this._threadBinding.subscribe(callback),\n      }),\n    );\n  }\n\n  protected __internal_bindMethods() {\n    this.append = this.append.bind(this);\n    this.unstable_resumeRun = this.unstable_resumeRun.bind(this);\n    this.startRun = this.startRun.bind(this);\n    this.cancelRun = this.cancelRun.bind(this);\n    this.stopSpeaking = this.stopSpeaking.bind(this);\n    this.export = this.export.bind(this);\n    this.import = this.import.bind(this);\n    this.getMesssageByIndex = this.getMesssageByIndex.bind(this);\n    this.getMesssageById = this.getMesssageById.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.unstable_on = this.unstable_on.bind(this);\n    this.getModelContext = this.getModelContext.bind(this);\n    this.getModelConfig = this.getModelConfig.bind(this);\n    this.getState = this.getState.bind(this);\n  }\n\n  public readonly composer;\n\n  public getState() {\n    return this._threadBinding.getStateState();\n  }\n\n  public append(message: CreateAppendMessage) {\n    this._threadBinding\n      .getState()\n      .append(\n        toAppendMessage(this._threadBinding.getState().messages, message),\n      );\n  }\n\n  public subscribe(callback: () => void) {\n    return this._threadBinding.subscribe(callback);\n  }\n\n  public getModelContext() {\n    return this._threadBinding.getState().getModelContext();\n  }\n\n  public getModelConfig() {\n    return this.getModelContext();\n  }\n\n  public startRun(configOrParentId: string | null | CreateStartRunConfig) {\n    const config =\n      configOrParentId === null || typeof configOrParentId === \"string\"\n        ? { parentId: configOrParentId }\n        : configOrParentId;\n    return this._threadBinding.getState().startRun(toStartRunConfig(config));\n  }\n\n  public unstable_resumeRun(config: CreateResumeRunConfig) {\n    return this._threadBinding.getState().resumeRun(toResumeRunConfig(config));\n  }\n\n  public cancelRun() {\n    this._threadBinding.getState().cancelRun();\n  }\n\n  public stopSpeaking() {\n    return this._threadBinding.getState().stopSpeaking();\n  }\n\n  public export() {\n    return this._threadBinding.getState().export();\n  }\n\n  public import(data: ExportedMessageRepository) {\n    this._threadBinding.getState().import(data);\n  }\n\n  public getMesssageByIndex(idx: number) {\n    if (idx < 0) throw new Error(\"Message index must be >= 0\");\n\n    return this._getMessageRuntime(\n      {\n        ...this.path,\n        ref: this.path.ref + `${this.path.ref}.messages[${idx}]`,\n        messageSelector: { type: \"index\", index: idx },\n      },\n      () => {\n        const messages = this._threadBinding.getState().messages;\n        const message = messages[idx];\n        if (!message) return undefined;\n        return {\n          message,\n          parentId: messages[idx - 1]?.id ?? null,\n        };\n      },\n    );\n  }\n\n  public getMesssageById(messageId: string) {\n    return this._getMessageRuntime(\n      {\n        ...this.path,\n        ref:\n          this.path.ref +\n          `${this.path.ref}.messages[messageId=${JSON.stringify(messageId)}]`,\n        messageSelector: { type: \"messageId\", messageId: messageId },\n      },\n      () => this._threadBinding.getState().getMessageById(messageId),\n    );\n  }\n\n  private _getMessageRuntime(\n    path: MessageRuntimePath,\n    callback: () =>\n      | { parentId: string | null; message: ThreadMessage }\n      | undefined,\n  ) {\n    return new MessageRuntimeImpl(\n      new ShallowMemoizeSubject({\n        path,\n        getState: () => {\n          const { message, parentId } = callback() ?? {};\n\n          const { messages, speech: speechState } =\n            this._threadBinding.getState();\n\n          if (!message || parentId === undefined) return SKIP_UPDATE;\n\n          const thread = this._threadBinding.getState();\n\n          const branches = thread.getBranches(message.id);\n          const submittedFeedback = thread.getSubmittedFeedback(message.id);\n\n          return {\n            ...message,\n            ...{ [symbolInnerMessage]: (message as any)[symbolInnerMessage] },\n\n            isLast: messages.at(-1)?.id === message.id,\n            parentId,\n\n            branchNumber: branches.indexOf(message.id) + 1,\n            branchCount: branches.length,\n\n            speech:\n              speechState?.messageId === message.id ? speechState : undefined,\n\n            submittedFeedback,\n          } satisfies MessageState;\n        },\n        subscribe: (callback) => this._threadBinding.subscribe(callback),\n      }),\n      this._threadBinding,\n    );\n  }\n\n  private _eventSubscriptionSubjects = new Map<\n    string,\n    EventSubscriptionSubject<ThreadRuntimeEventType>\n  >();\n\n  public unstable_on(\n    event: ThreadRuntimeEventType,\n    callback: () => void,\n  ): Unsubscribe {\n    let subject = this._eventSubscriptionSubjects.get(event);\n    if (!subject) {\n      subject = new EventSubscriptionSubject({\n        event: event,\n        binding: this._threadBinding,\n      });\n      this._eventSubscriptionSubjects.set(event, subject);\n    }\n    return subject.subscribe(callback);\n  }\n}\n"],"names":["callback"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2097, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/api/ThreadListRuntime.ts"],"sourcesContent":["import { LazyMemoizeSubject } from \"./subscribable/LazyMemoizeSubject\";\nimport { ThreadListRuntimeCore } from \"../runtimes/core/ThreadListRuntimeCore\";\nimport { Unsubscribe } from \"../types\";\nimport {\n  ThreadListItemRuntime,\n  ThreadListItemRuntimeImpl,\n  ThreadListItemState,\n} from \"./ThreadListItemRuntime\";\nimport { SKIP_UPDATE } from \"./subscribable/SKIP_UPDATE\";\nimport { ShallowMemoizeSubject } from \"./subscribable/ShallowMemoizeSubject\";\nimport {\n  ThreadListItemRuntimeBinding,\n  ThreadRuntime,\n  ThreadRuntimeCoreBinding,\n  ThreadRuntimeImpl,\n} from \"./ThreadRuntime\";\nimport { NestedSubscriptionSubject } from \"./subscribable/NestedSubscriptionSubject\";\n\nexport type ThreadListState = {\n  readonly mainThreadId: string;\n  readonly newThread: string | undefined;\n  readonly threads: readonly string[];\n  readonly archivedThreads: readonly string[];\n};\n\nexport type ThreadListRuntime = {\n  getState(): ThreadListState;\n\n  subscribe(callback: () => void): Unsubscribe;\n\n  readonly main: ThreadRuntime;\n  getById(threadId: string): ThreadRuntime;\n\n  readonly mainItem: ThreadListItemRuntime;\n  getItemById(threadId: string): ThreadListItemRuntime;\n  getItemByIndex(idx: number): ThreadListItemRuntime;\n  getArchivedItemByIndex(idx: number): ThreadListItemRuntime;\n\n  switchToThread(threadId: string): Promise<void>;\n  switchToNewThread(): Promise<void>;\n};\n\nconst getThreadListState = (\n  threadList: ThreadListRuntimeCore,\n): ThreadListState => {\n  return {\n    mainThreadId: threadList.mainThreadId,\n    newThread: threadList.newThreadId,\n    threads: threadList.threadIds,\n    archivedThreads: threadList.archivedThreadIds,\n  };\n};\n\nconst getThreadListItemState = (\n  threadList: ThreadListRuntimeCore,\n  threadId: string | undefined,\n): ThreadListItemState | SKIP_UPDATE => {\n  if (threadId === undefined) return SKIP_UPDATE;\n\n  const threadData = threadList.getItemById(threadId);\n  if (!threadData) return SKIP_UPDATE;\n  return {\n    id: threadData.threadId,\n    threadId: threadData.threadId, // TODO remove in 0.8.0\n    remoteId: threadData.remoteId,\n    externalId: threadData.externalId,\n    title: threadData.title,\n    status: threadData.status,\n    isMain: threadData.threadId === threadList.mainThreadId,\n  };\n};\n\nexport type ThreadListRuntimeCoreBinding = ThreadListRuntimeCore;\n\nexport class ThreadListRuntimeImpl implements ThreadListRuntime {\n  private _getState;\n  constructor(\n    private _core: ThreadListRuntimeCoreBinding,\n    private _runtimeFactory: new (\n      binding: ThreadRuntimeCoreBinding,\n      threadListItemBinding: ThreadListItemRuntimeBinding,\n    ) => ThreadRuntime = ThreadRuntimeImpl,\n  ) {\n    const stateBinding = new LazyMemoizeSubject({\n      path: {},\n      getState: () => getThreadListState(_core),\n      subscribe: (callback) => _core.subscribe(callback),\n    });\n\n    this._getState = stateBinding.getState.bind(stateBinding);\n\n    this._mainThreadListItemRuntime = new ThreadListItemRuntimeImpl(\n      new ShallowMemoizeSubject({\n        path: {\n          ref: `threadItems[main]`,\n          threadSelector: { type: \"main\" },\n        },\n        getState: () => {\n          return getThreadListItemState(this._core, this._core.mainThreadId);\n        },\n        subscribe: (callback) => this._core.subscribe(callback),\n      }),\n      this._core,\n    );\n\n    this.main = new _runtimeFactory(\n      new NestedSubscriptionSubject({\n        path: {\n          ref: \"threads.main\",\n          threadSelector: { type: \"main\" },\n        },\n        getState: () => _core.getMainThreadRuntimeCore(),\n        subscribe: (callback) => _core.subscribe(callback),\n      }),\n      this._mainThreadListItemRuntime, // TODO capture \"main\" threadListItem from context around useLocalRuntime / useExternalStoreRuntime\n    );\n  }\n\n  protected __internal_bindMethods() {\n    this.switchToThread = this.switchToThread.bind(this);\n    this.switchToNewThread = this.switchToNewThread.bind(this);\n    this.getState = this.getState.bind(this);\n    this.subscribe = this.subscribe.bind(this);\n    this.getById = this.getById.bind(this);\n    this.getItemById = this.getItemById.bind(this);\n    this.getItemByIndex = this.getItemByIndex.bind(this);\n    this.getArchivedItemByIndex = this.getArchivedItemByIndex.bind(this);\n  }\n\n  public switchToThread(threadId: string): Promise<void> {\n    return this._core.switchToThread(threadId);\n  }\n\n  public switchToNewThread(): Promise<void> {\n    return this._core.switchToNewThread();\n  }\n\n  public getState(): ThreadListState {\n    return this._getState();\n  }\n\n  public subscribe(callback: () => void): Unsubscribe {\n    return this._core.subscribe(callback);\n  }\n\n  private _mainThreadListItemRuntime;\n\n  public readonly main: ThreadRuntime;\n\n  public get mainItem() {\n    return this._mainThreadListItemRuntime;\n  }\n\n  public getById(threadId: string) {\n    return new this._runtimeFactory(\n      new NestedSubscriptionSubject({\n        path: {\n          ref: \"threads[threadId=\" + JSON.stringify(threadId) + \"]\",\n          threadSelector: { type: \"threadId\", threadId },\n        },\n        getState: () => this._core.getThreadRuntimeCore(threadId),\n        subscribe: (callback) => this._core.subscribe(callback),\n      }),\n      this.mainItem, // TODO capture \"main\" threadListItem from context around useLocalRuntime / useExternalStoreRuntime\n    );\n  }\n\n  public getItemByIndex(idx: number) {\n    return new ThreadListItemRuntimeImpl(\n      new ShallowMemoizeSubject({\n        path: {\n          ref: `threadItems[${idx}]`,\n          threadSelector: { type: \"index\", index: idx },\n        },\n        getState: () => {\n          return getThreadListItemState(this._core, this._core.threadIds[idx]);\n        },\n        subscribe: (callback) => this._core.subscribe(callback),\n      }),\n      this._core,\n    );\n  }\n\n  public getArchivedItemByIndex(idx: number) {\n    return new ThreadListItemRuntimeImpl(\n      new ShallowMemoizeSubject({\n        path: {\n          ref: `archivedThreadItems[${idx}]`,\n          threadSelector: { type: \"archiveIndex\", index: idx },\n        },\n        getState: () => {\n          return getThreadListItemState(\n            this._core,\n            this._core.archivedThreadIds[idx],\n          );\n        },\n        subscribe: (callback) => this._core.subscribe(callback),\n      }),\n      this._core,\n    );\n  }\n\n  public getItemById(threadId: string) {\n    return new ThreadListItemRuntimeImpl(\n      new ShallowMemoizeSubject({\n        path: {\n          ref: `threadItems[threadId=${threadId}]`,\n          threadSelector: { type: \"threadId\", threadId },\n        },\n        getState: () => {\n          return getThreadListItemState(this._core, threadId);\n        },\n        subscribe: (callback) => this._core.subscribe(callback),\n      }),\n      this._core,\n    );\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2264, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/api/AssistantRuntime.ts"],"sourcesContent":["import { AssistantRuntimeCore } from \"../runtimes/core/AssistantRuntimeCore\";\nimport { ModelContextProvider } from \"../model-context/ModelContextTypes\";\nimport { ThreadRuntime } from \"./ThreadRuntime\";\nimport { Unsubscribe } from \"../types\";\nimport { ThreadListRuntime, ThreadListRuntimeImpl } from \"./ThreadListRuntime\";\nimport { ExportedMessageRepository, ThreadMessageLike } from \"../runtimes\";\n\nexport type AssistantRuntime = {\n  /**\n   * The threads in this assistant.\n   */\n  readonly threads: ThreadListRuntime;\n\n  /**\n   * The currently selected main thread. Equivalent to `threads.main`.\n   */\n  readonly thread: ThreadRuntime;\n\n  /**\n   * @deprecated This field was renamed to `threads`.\n   */\n  readonly threadList: ThreadListRuntime;\n\n  /**\n   * Switch to a new thread.\n   *\n   * @deprecated This method was moved to `threads.switchToNewThread`.\n   */\n  switchToNewThread(): void;\n\n  /**\n   * Switch to a thread.\n   *\n   * @param threadId The thread ID to switch to.\n   * @deprecated This method was moved to `threads.switchToThread`.\n   */\n  switchToThread(threadId: string): void;\n\n  /**\n   * Register a model context provider. Model context providers are configuration such as system message, temperature, etc. that are set in the frontend.\n   *\n   * @param provider The model context provider to register.\n   */\n  registerModelContextProvider(provider: ModelContextProvider): Unsubscribe;\n\n  /**\n   * @deprecated This method was renamed to `registerModelContextProvider`.\n   */\n  registerModelConfigProvider(provider: ModelContextProvider): Unsubscribe;\n\n  /**\n   * @deprecated Deprecated. Please use `runtime.threads.main.import(ExportedMessageRepository.fromArray(initialMessages))`.\n   */\n  reset: unknown; // make it a type error\n};\n\nexport class AssistantRuntimeImpl implements AssistantRuntime {\n  public readonly threads;\n  public get threadList() {\n    return this.threads;\n  }\n\n  public readonly _thread: ThreadRuntime;\n\n  public constructor(private readonly _core: AssistantRuntimeCore) {\n    this.threads = new ThreadListRuntimeImpl(_core.threads);\n    this._thread = this.threads.main;\n  }\n\n  protected __internal_bindMethods() {\n    this.switchToNewThread = this.switchToNewThread.bind(this);\n    this.switchToThread = this.switchToThread.bind(this);\n    this.registerModelContextProvider =\n      this.registerModelContextProvider.bind(this);\n    this.registerModelConfigProvider =\n      this.registerModelConfigProvider.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  public get thread() {\n    return this._thread;\n  }\n\n  public switchToNewThread() {\n    return this._core.threads.switchToNewThread();\n  }\n\n  public switchToThread(threadId: string) {\n    return this._core.threads.switchToThread(threadId);\n  }\n\n  public registerModelContextProvider(provider: ModelContextProvider) {\n    return this._core.registerModelContextProvider(provider);\n  }\n\n  public registerModelConfigProvider(provider: ModelContextProvider) {\n    return this.registerModelContextProvider(provider);\n  }\n\n  public reset({\n    initialMessages,\n  }: { initialMessages?: ThreadMessageLike[] } = {}) {\n    return this._core.threads\n      .getMainThreadRuntimeCore()\n      .import(ExportedMessageRepository.fromArray(initialMessages ?? []));\n  }\n}\n"],"names":[],"mappings":";;;;AAIA,SAA4B,6BAA6B;AACzD,SAAS,iCAAoD;;;AAmDtD,IAAM,uBAAN,MAAuD;IAQrD,YAA6B,KAAA,CAA6B;QAA7B,IAAA,CAAA,KAAA,GAAA;QAClC,IAAA,CAAK,OAAA,GAAU,mLAAI,wBAAA,CAAsB,MAAM,OAAO;QACtD,IAAA,CAAK,OAAA,GAAU,IAAA,CAAK,OAAA,CAAQ,IAAA;IAC9B;IAVgB,QAAA;IAChB,IAAW,aAAa;QACtB,OAAO,IAAA,CAAK,OAAA;IACd;IAEgB,QAAA;IAON,yBAAyB;QACjC,IAAA,CAAK,iBAAA,GAAoB,IAAA,CAAK,iBAAA,CAAkB,IAAA,CAAK,IAAI;QACzD,IAAA,CAAK,cAAA,GAAiB,IAAA,CAAK,cAAA,CAAe,IAAA,CAAK,IAAI;QACnD,IAAA,CAAK,4BAAA,GACH,IAAA,CAAK,4BAAA,CAA6B,IAAA,CAAK,IAAI;QAC7C,IAAA,CAAK,2BAAA,GACH,IAAA,CAAK,2BAAA,CAA4B,IAAA,CAAK,IAAI;QAC5C,IAAA,CAAK,KAAA,GAAQ,IAAA,CAAK,KAAA,CAAM,IAAA,CAAK,IAAI;IACnC;IAEA,IAAW,SAAS;QAClB,OAAO,IAAA,CAAK,OAAA;IACd;IAEO,oBAAoB;QACzB,OAAO,IAAA,CAAK,KAAA,CAAM,OAAA,CAAQ,iBAAA,CAAkB;IAC9C;IAEO,eAAe,QAAA,EAAkB;QACtC,OAAO,IAAA,CAAK,KAAA,CAAM,OAAA,CAAQ,cAAA,CAAe,QAAQ;IACnD;IAEO,6BAA6B,QAAA,EAAgC;QAClE,OAAO,IAAA,CAAK,KAAA,CAAM,4BAAA,CAA6B,QAAQ;IACzD;IAEO,4BAA4B,QAAA,EAAgC;QACjE,OAAO,IAAA,CAAK,4BAAA,CAA6B,QAAQ;IACnD;IAEO,MAAM,EACX,eAAA,EACF,GAA+C,CAAC,CAAA,EAAG;QACjD,OAAO,IAAA,CAAK,KAAA,CAAM,OAAA,CACf,wBAAA,CAAyB,EACzB,MAAA,8LAAO,4BAAA,CAA0B,SAAA,CAAU,mBAAmB,CAAC,CAAC,CAAC;IACtE;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2317, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/runtimes/local/LocalRuntimeOptions.tsx"],"sourcesContent":["import { ThreadHistoryAdapter } from \"../adapters/thread-history/ThreadHistoryAdapter\";\nimport { AttachmentAdapter } from \"../adapters/attachment/AttachmentAdapter\";\nimport { ThreadMessageLike } from \"../external-store\";\nimport { FeedbackAdapter } from \"../adapters/feedback/FeedbackAdapter\";\nimport { SpeechSynthesisAdapter } from \"../adapters/speech/SpeechAdapterTypes\";\nimport { ChatModelAdapter } from \"./ChatModelAdapter\";\nimport { AssistantCloud } from \"../../cloud\";\nimport { SuggestionAdapter } from \"../adapters\";\n\nexport type LocalRuntimeOptionsBase = {\n  maxSteps?: number | undefined;\n  adapters: {\n    chatModel: ChatModelAdapter;\n    history?: ThreadHistoryAdapter | undefined;\n    attachments?: AttachmentAdapter | undefined;\n    speech?: SpeechSynthesisAdapter | undefined;\n    feedback?: FeedbackAdapter | undefined;\n    suggestion?: SuggestionAdapter | undefined;\n  };\n\n  /**\n   * Names of tools that are allowed to interrupt the run in order to wait for human/external approval.\n   */\n  unstable_humanToolNames?: string[] | undefined;\n};\n\n// TODO align LocalRuntimeOptions with LocalRuntimeOptionsBase\nexport type LocalRuntimeOptions = Omit<LocalRuntimeOptionsBase, \"adapters\"> & {\n  cloud?: AssistantCloud | undefined;\n  initialMessages?: readonly ThreadMessageLike[] | undefined;\n  adapters?: Omit<LocalRuntimeOptionsBase[\"adapters\"], \"chatModel\"> | undefined;\n};\n\nexport const splitLocalRuntimeOptions = <T extends LocalRuntimeOptions>(\n  options: T,\n) => {\n  const {\n    cloud,\n    initialMessages,\n    maxSteps,\n    adapters,\n    unstable_humanToolNames,\n    ...rest\n  } = options;\n\n  return {\n    localRuntimeOptions: {\n      cloud,\n      initialMessages,\n      maxSteps,\n      adapters,\n      unstable_humanToolNames,\n    },\n    otherOptions: rest,\n  };\n};\n"],"names":[],"mappings":";;;;AAiCO,IAAM,2BAA2B,CACtC,YACG;IACH,MAAM,EACJ,KAAA,EACA,eAAA,EACA,QAAA,EACA,QAAA,EACA,uBAAA,EACA,GAAG,MACL,GAAI;IAEJ,OAAO;QACL,qBAAqB;YACnB;YACA;YACA;YACA;YACA;QACF;QACA,cAAc;IAChB;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2342, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/utils/smooth/index.ts"],"sourcesContent":["\"use client\";\n// TODO createContextStoreHook does not work well with server-side nextjs bundler\n// use client necessary here for now\n\nexport { useSmooth } from \"./useSmooth\";\nexport { useSmoothStatus, withSmoothContextProvider } from \"./SmoothContext\";\n"],"names":[],"mappings":"","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2362, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/context/react/utils/createContextHook.ts"],"sourcesContent":["\"use client\";\n\nimport { useContext, Context } from \"react\";\n\n/**\n * Creates a context hook with optional support.\n * @param context - The React context to consume.\n * @param providerName - The name of the provider for error messages.\n * @returns A hook function that provides the context value.\n */\nexport function createContextHook<T>(\n  context: Context<T | null>,\n  providerName: string,\n) {\n  function useContextHook(options?: {\n    optional?: boolean | undefined;\n  }): T | null {\n    const contextValue = useContext(context);\n    if (!options?.optional && !contextValue) {\n      throw new Error(`This component must be used within ${providerName}.`);\n    }\n    return contextValue;\n  }\n\n  return useContextHook;\n}\n"],"names":[],"mappings":";;;;AAEA,SAAS,kBAA2B;;;AAQ7B,SAAS,kBACd,OAAA,EACA,YAAA,EACA;IACA,SAAS,eAAe,OAAA,EAEX;QACX,MAAM,yNAAe,aAAA,EAAW,OAAO;QACvC,IAAI,CAAC,SAAS,YAAY,CAAC,cAAc;YACvC,MAAM,IAAI,MAAM,CAAA,mCAAA,EAAsC,YAAY,CAAA,CAAA,CAAG;QACvE;QACA,OAAO;IACT;IAEA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2387, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/context/react/utils/createContextStoreHook.ts"],"sourcesContent":["import { UseBoundStore } from \"zustand\";\nimport { ReadonlyStore } from \"../../ReadonlyStore\";\n\n/**\n * Creates hooks for accessing a store within a context.\n * @param contextHook - The hook to access the context.\n * @param contextKey - The key of the store in the context.\n * @returns An object containing the hooks: `use...` and `use...Store`.\n */\nexport function createContextStoreHook<T, K extends keyof T & string>(\n  contextHook: (options?: { optional?: boolean }) => T | null,\n  contextKey: K,\n) {\n  type StoreType = T[K];\n  type StateType = StoreType extends ReadonlyStore<infer S> ? S : never;\n\n  // Define useStoreStoreHook with overloads\n  function useStoreStoreHook(): ReadonlyStore<StateType>;\n  function useStoreStoreHook(options: {\n    optional: true;\n  }): ReadonlyStore<StateType> | null;\n  function useStoreStoreHook(options?: {\n    optional?: boolean;\n  }): ReadonlyStore<StateType> | null {\n    const context = contextHook(options);\n    if (!context) return null;\n    return context[contextKey] as ReadonlyStore<StateType>;\n  }\n\n  // Define useStoreHook with overloads\n  function useStoreHook(): StateType;\n  function useStoreHook<TSelected>(\n    selector: (state: StateType) => TSelected,\n  ): TSelected;\n  function useStoreHook(options: { optional: true }): StateType | null;\n  function useStoreHook<TSelected>(options: {\n    optional: true;\n    selector?: (state: StateType) => TSelected;\n  }): TSelected | null;\n  function useStoreHook<TSelected>(\n    param?:\n      | ((state: StateType) => TSelected)\n      | {\n          optional?: boolean;\n          selector?: (state: StateType) => TSelected;\n        },\n  ): TSelected | StateType | null {\n    let optional = false;\n    let selector: ((state: StateType) => TSelected) | undefined;\n\n    if (typeof param === \"function\") {\n      selector = param;\n    } else if (param && typeof param === \"object\") {\n      optional = !!param.optional;\n      selector = param.selector;\n    }\n\n    const store = useStoreStoreHook({\n      optional,\n    } as any) as UseBoundStore<ReadonlyStore<StateType>>;\n    if (!store) return null;\n    return selector ? store(selector) : store();\n  }\n\n  // Return an object with keys based on contextKey\n  return {\n    [contextKey]: useStoreHook,\n    [`${contextKey}Store`]: useStoreStoreHook,\n  } as {\n    [P in K]: typeof useStoreHook;\n  } & {\n    [P in `${K}Store`]: typeof useStoreStoreHook;\n  };\n}\n"],"names":[],"mappings":";;;;AASO,SAAS,uBACd,WAAA,EACA,UAAA,EACA;IASA,SAAS,kBAAkB,OAAA,EAES;QAClC,MAAM,UAAU,YAAY,OAAO;QACnC,IAAI,CAAC,QAAS,CAAA,OAAO;QACrB,OAAO,OAAA,CAAQ,UAAU,CAAA;IAC3B;IAYA,SAAS,aACP,KAAA,EAM8B;QAC9B,IAAI,WAAW;QACf,IAAI;QAEJ,IAAI,OAAO,UAAU,YAAY;YAC/B,WAAW;QACb,OAAA,IAAW,SAAS,OAAO,UAAU,UAAU;YAC7C,WAAW,CAAC,CAAC,MAAM,QAAA;YACnB,WAAW,MAAM,QAAA;QACnB;QAEA,MAAM,QAAQ,kBAAkB;YAC9B;QACF,CAAQ;QACR,IAAI,CAAC,MAAO,CAAA,OAAO;QACnB,OAAO,WAAW,MAAM,QAAQ,IAAI,MAAM;IAC5C;IAGA,OAAO;QACL,CAAC,UAAU,CAAA,EAAG;QACd,CAAC,GAAG,UAAU,CAAA,KAAA,CAAO,CAAA,EAAG;IAC1B;AAKF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2425, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/context/react/utils/ensureBinding.ts"],"sourcesContent":["type Bindable = {\n  __internal_bindMethods?: () => void;\n  __isBound?: boolean;\n};\nconst debugVerifyPrototype = (\n  runtime: Record<string, unknown>,\n  prototype: any,\n) => {\n  const unboundMethods = Object.getOwnPropertyNames(prototype).filter(\n    (methodStr) => {\n      const descriptor = Object.getOwnPropertyDescriptor(prototype, methodStr);\n      const isMethod = descriptor && typeof descriptor.value === \"function\";\n      if (!isMethod) return false;\n\n      const methodName = methodStr as keyof typeof runtime | \"constructor\";\n      return (\n        isMethod &&\n        !methodName.startsWith(\"_\") &&\n        methodName !== \"constructor\" &&\n        prototype[methodName] === runtime[methodName]\n      );\n    },\n  );\n\n  if (unboundMethods.length > 0) {\n    throw new Error(\n      \"The following methods are not bound: \" + JSON.stringify(unboundMethods),\n    );\n  }\n\n  const prototypePrototype = Object.getPrototypeOf(prototype);\n  if (prototypePrototype && prototypePrototype !== Object.prototype) {\n    debugVerifyPrototype(runtime, prototypePrototype);\n  }\n};\nexport const ensureBinding = (r: unknown) => {\n  const runtime = r as Bindable;\n  if (runtime.__isBound) return;\n\n  runtime.__internal_bindMethods?.();\n  runtime.__isBound = true;\n\n  // @ts-expect-error - strip this out in production build\n  DEV: debugVerifyPrototype(runtime, Object.getPrototypeOf(runtime));\n};\n"],"names":[],"mappings":";;;;AAmCO,IAAM,gBAAgB,CAAC,MAAe;IAC3C,MAAM,UAAU;IAChB,IAAI,QAAQ,SAAA,CAAW,CAAA;IAEvB,QAAQ,sBAAA,GAAyB;IACjC,QAAQ,SAAA,GAAY;AAItB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2443, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/context/react/utils/useRuntimeState.ts"],"sourcesContent":["import { useDebugValue, useSyncExternalStore } from \"react\";\nimport { Unsubscribe } from \"../../../types\";\nimport { ensureBinding } from \"./ensureBinding\";\n\nexport type SubscribableRuntime<TState> = {\n  getState: () => TState;\n  subscribe: (callback: () => void) => Unsubscribe;\n};\n\nexport function useRuntimeStateInternal<TState, TSelected>(\n  runtime: SubscribableRuntime<TState>,\n  selector: ((state: TState) => TSelected | TState) | undefined = identity,\n): TSelected | TState {\n  // TODO move to useRuntimeState\n  ensureBinding(runtime);\n\n  const slice = useSyncExternalStore(\n    runtime.subscribe,\n    () => selector(runtime.getState()),\n    () => selector(runtime.getState()),\n  );\n  useDebugValue(slice);\n  return slice;\n}\n\nconst identity = <T>(arg: T): T => arg;\nexport function useRuntimeState<TState>(\n  runtime: SubscribableRuntime<TState>,\n): TState;\nexport function useRuntimeState<TState, TSelected>(\n  runtime: SubscribableRuntime<TState>,\n  selector: (state: TState) => TSelected,\n): TSelected;\nexport function useRuntimeState<TState, TSelected>(\n  runtime: SubscribableRuntime<TState>,\n  selector: ((state: TState) => TSelected) | undefined,\n): TSelected | TState;\nexport function useRuntimeState<TState, TSelected>(\n  runtime: SubscribableRuntime<TState>,\n  selector?: ((state: TState) => TSelected) | undefined,\n): TSelected | TState {\n  // ensure that the runtime is bound\n  // ensureBinding(runtime);\n\n  return useRuntimeStateInternal(runtime, selector);\n}\n"],"names":[],"mappings":";;;;;AAAA,SAAS,eAAe,4BAA4B;AAEpD,SAAS,qBAAqB;;;AAOvB,SAAS,wBACd,OAAA,EACA,WAAgE,QAAA,EAC5C;IAEpB,CAAA,GAAA,gMAAA,CAAA,gBAAA,EAAc,OAAO;IAErB,MAAM,kNAAQ,uBAAA,EACZ,QAAQ,SAAA,EACR,IAAM,SAAS,QAAQ,QAAA,CAAS,CAAC,GACjC,IAAM,SAAS,QAAQ,QAAA,CAAS,CAAC;IAEnC,CAAA,GAAA,qMAAA,CAAA,gBAAA,EAAc,KAAK;IACnB,OAAO;AACT;AAEA,IAAM,WAAW,CAAI,MAAc;AAY5B,SAAS,gBACd,OAAA,EACA,QAAA,EACoB;IAIpB,OAAO,wBAAwB,SAAS,QAAQ;AAClD","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2470, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/context/react/utils/createStateHookForRuntime.ts"],"sourcesContent":["import {\n  SubscribableRuntime,\n  useRuntimeStateInternal,\n} from \"./useRuntimeState\";\n\nexport function createStateHookForRuntime<TState>(\n  useRuntime: (options: {\n    optional: boolean | undefined;\n  }) => SubscribableRuntime<TState> | null,\n) {\n  // empty\n  function useStoreHook(): TState;\n\n  // selector\n  function useStoreHook<TSelected>(\n    selector: (state: TState) => TSelected,\n  ): TSelected;\n\n  // selector?\n  function useStoreHook<TSelected>(\n    selector: ((state: TState) => TSelected) | undefined,\n  ): TSelected | TState;\n\n  // optional=false\n  function useStoreHook(options: { optional?: false | undefined }): TState;\n\n  // optional?\n  function useStoreHook(options: {\n    optional?: boolean | undefined;\n  }): TState | null;\n\n  // optional=false, selector\n  function useStoreHook<TSelected>(options: {\n    optional?: false | undefined;\n    selector: (state: TState) => TSelected;\n  }): TSelected;\n\n  // optional=false, selector?\n  function useStoreHook<TSelected>(options: {\n    optional?: false | undefined;\n    selector: ((state: TState) => TSelected) | undefined;\n  }): TSelected | TState;\n\n  // optional?, selector\n  function useStoreHook<TSelected>(options: {\n    optional?: boolean | undefined;\n    selector: (state: TState) => TSelected;\n  }): TSelected | null;\n\n  // optional?, selector?\n  function useStoreHook<TSelected>(options: {\n    optional?: boolean | undefined;\n    selector: ((state: TState) => TSelected) | undefined;\n  }): TSelected | TState | null;\n\n  function useStoreHook<TSelected>(\n    param?:\n      | ((state: TState) => TSelected)\n      | {\n          optional?: boolean | undefined;\n          selector?: ((state: TState) => TSelected) | undefined;\n        },\n  ): TSelected | TState | null {\n    let optional = false;\n    let selector: ((state: TState) => TSelected) | undefined;\n\n    if (typeof param === \"function\") {\n      selector = param;\n    } else if (param) {\n      optional = !!param.optional;\n      selector = param.selector;\n    }\n\n    const store = useRuntime({ optional });\n    if (!store) return null;\n\n    // it is ok to call useRuntimeStateInternal conditionally because it will never become null if its available\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return useRuntimeStateInternal(store, selector);\n  }\n\n  return useStoreHook;\n}\n"],"names":[],"mappings":";;;;AAAA;;AAKO,SAAS,0BACd,UAAA,EAGA;IA8CA,SAAS,aACP,KAAA,EAM2B;QAC3B,IAAI,WAAW;QACf,IAAI;QAEJ,IAAI,OAAO,UAAU,YAAY;YAC/B,WAAW;QACb,OAAA,IAAW,OAAO;YAChB,WAAW,CAAC,CAAC,MAAM,QAAA;YACnB,WAAW,MAAM,QAAA;QACnB;QAEA,MAAM,QAAQ,WAAW;YAAE;QAAS,CAAC;QACrC,IAAI,CAAC,MAAO,CAAA,OAAO;QAInB,8MAAO,0BAAA,EAAwB,OAAO,QAAQ;IAChD;IAEA,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2502, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/context/react/MessageContext.ts"],"sourcesContent":["\"use client\";\n\nimport { createContext } from \"react\";\nimport { ReadonlyStore } from \"../ReadonlyStore\";\nimport { MessageUtilsState } from \"../stores/MessageUtils\";\nimport { createContextHook } from \"./utils/createContextHook\";\nimport { createContextStoreHook } from \"./utils/createContextStoreHook\";\nimport { UseBoundStore } from \"zustand\";\nimport { MessageRuntime } from \"../../api/MessageRuntime\";\nimport { createStateHookForRuntime } from \"./utils/createStateHookForRuntime\";\nimport { EditComposerRuntime } from \"../../api\";\n\nexport type MessageContextValue = {\n  useMessageRuntime: UseBoundStore<ReadonlyStore<MessageRuntime>>;\n  useMessageUtils: UseBoundStore<ReadonlyStore<MessageUtilsState>>;\n};\n\nexport const MessageContext = createContext<MessageContextValue | null>(null);\n\nconst useMessageContext = createContextHook(\n  MessageContext,\n  \"a component passed to <ThreadPrimitive.Messages components={...} />\",\n);\n\nexport function useMessageRuntime(options?: {\n  optional?: false | undefined;\n}): MessageRuntime;\nexport function useMessageRuntime(options?: {\n  optional?: boolean | undefined;\n}): MessageRuntime | null;\nexport function useMessageRuntime(options?: {\n  optional?: boolean | undefined;\n}) {\n  const context = useMessageContext(options);\n  if (!context) return null;\n  return context.useMessageRuntime();\n}\n\nexport const useMessage = createStateHookForRuntime(useMessageRuntime);\n\nconst useEditComposerRuntime = (opt: {\n  optional: boolean | undefined;\n}): EditComposerRuntime | null => useMessageRuntime(opt)?.composer ?? null;\nexport const useEditComposer = createStateHookForRuntime(\n  useEditComposerRuntime,\n);\n\nexport const { useMessageUtils, useMessageUtilsStore } = createContextStoreHook(\n  useMessageContext,\n  \"useMessageUtils\",\n);\n"],"names":[],"mappings":";;;;;;;;;AAEA,SAAS,qBAAqB;AAG9B,SAAS,yBAAyB;AAClC,SAAS,8BAA8B;AAGvC,SAAS,iCAAiC;;;;;;AAQnC,IAAM,2NAAiB,gBAAA,EAA0C,IAAI;AAE5E,IAAM,6NAAoB,oBAAA,EACxB,gBACA;AASK,SAAS,kBAAkB,OAAA,EAE/B;IACD,MAAM,UAAU,kBAAkB,OAAO;IACzC,IAAI,CAAC,QAAS,CAAA,OAAO;IACrB,OAAO,QAAQ,iBAAA,CAAkB;AACnC;AAEO,IAAM,cAAa,4OAAA,EAA0B,iBAAiB;AAErE,IAAM,yBAAyB,CAAC,MAEE,kBAAkB,GAAG,GAAG,YAAY;AAC/D,IAAM,mOAAkB,4BAAA,EAC7B;AAGK,IAAM,EAAE,eAAA,EAAiB,oBAAA,CAAqB,CAAA,iNAAI,yBAAA,EACvD,mBACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2539, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/context/react/ContentPartContext.ts"],"sourcesContent":["\"use client\";\n\nimport { createContext } from \"react\";\nimport { ReadonlyStore } from \"../ReadonlyStore\";\nimport { createContextHook } from \"./utils/createContextHook\";\nimport { UseBoundStore } from \"zustand\";\nimport { ContentPartRuntime } from \"../../api/ContentPartRuntime\";\nimport { createStateHookForRuntime } from \"./utils/createStateHookForRuntime\";\n\nexport type ContentPartContextValue = {\n  useContentPartRuntime: UseBoundStore<ReadonlyStore<ContentPartRuntime>>;\n};\n\nexport const ContentPartContext = createContext<ContentPartContextValue | null>(\n  null,\n);\n\nconst useContentPartContext = createContextHook(\n  ContentPartContext,\n  \"a component passed to <MessagePrimitive.Content components={...}>\",\n);\n\nexport function useContentPartRuntime(options?: {\n  optional?: false | undefined;\n}): ContentPartRuntime;\nexport function useContentPartRuntime(options?: {\n  optional?: boolean | undefined;\n}): ContentPartRuntime | null;\nexport function useContentPartRuntime(options?: {\n  optional?: boolean | undefined;\n}) {\n  const context = useContentPartContext(options);\n  if (!context) return null;\n  return context.useContentPartRuntime();\n}\n\nexport const useContentPart = createStateHookForRuntime(useContentPartRuntime);\n"],"names":[],"mappings":";;;;;;AAEA,SAAS,qBAAqB;AAE9B,SAAS,yBAAyB;AAGlC,SAAS,iCAAiC;;;;;AAMnC,IAAM,+NAAqB,gBAAA,EAChC;AAGF,IAAM,iOAAwB,oBAAA,EAC5B,oBACA;AASK,SAAS,sBAAsB,OAAA,EAEnC;IACD,MAAM,UAAU,sBAAsB,OAAO;IAC7C,IAAI,CAAC,QAAS,CAAA,OAAO;IACrB,OAAO,QAAQ,qBAAA,CAAsB;AACvC;AAEO,IAAM,kOAAiB,4BAAA,EAA0B,qBAAqB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2568, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/utils/smooth/SmoothContext.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  ComponentType,\n  createContext,\n  FC,\n  forwardRef,\n  PropsWithChildren,\n  useContext,\n  useState,\n} from \"react\";\nimport { ReadonlyStore } from \"../../context/ReadonlyStore\";\nimport { create, UseBoundStore } from \"zustand\";\nimport {\n  ContentPartStatus,\n  ToolCallContentPartStatus,\n} from \"../../types/AssistantTypes\";\nimport { useContentPartRuntime } from \"../../context/react/ContentPartContext\";\nimport { createContextStoreHook } from \"../../context/react/utils/createContextStoreHook\";\n\ntype SmoothContextValue = {\n  useSmoothStatus: UseBoundStore<\n    ReadonlyStore<ContentPartStatus | ToolCallContentPartStatus>\n  >;\n};\n\nconst SmoothContext = createContext<SmoothContextValue | null>(null);\n\nconst makeSmoothContext = (\n  initialState: ContentPartStatus | ToolCallContentPartStatus,\n) => {\n  const useSmoothStatus = create(() => initialState);\n  return { useSmoothStatus };\n};\n\nexport const SmoothContextProvider: FC<PropsWithChildren> = ({ children }) => {\n  const outer = useSmoothContext({ optional: true });\n  const contentPartRuntime = useContentPartRuntime();\n\n  const [context] = useState(() =>\n    makeSmoothContext(contentPartRuntime.getState().status),\n  );\n\n  // do not wrap if there is an outer SmoothContextProvider\n  if (outer) return children;\n\n  return (\n    <SmoothContext.Provider value={context}>{children}</SmoothContext.Provider>\n  );\n};\n\nexport const withSmoothContextProvider = <C extends ComponentType<any>>(\n  Component: C,\n): C => {\n  const Wrapped = forwardRef((props, ref) => {\n    return (\n      <SmoothContextProvider>\n        <Component {...(props as any)} ref={ref} />\n      </SmoothContextProvider>\n    );\n  });\n  Wrapped.displayName = Component.displayName;\n  return Wrapped as any;\n};\n\nfunction useSmoothContext(options?: {\n  optional?: false | undefined;\n}): SmoothContextValue;\nfunction useSmoothContext(options?: {\n  optional?: boolean | undefined;\n}): SmoothContextValue | null;\nfunction useSmoothContext(options?: { optional?: boolean | undefined }) {\n  const context = useContext(SmoothContext);\n  if (!options?.optional && !context)\n    throw new Error(\n      \"This component must be used within a SmoothContextProvider.\",\n    );\n  return context;\n}\n\nexport const { useSmoothStatus, useSmoothStatusStore } = createContextStoreHook(\n  useSmoothContext,\n  \"useSmoothStatus\",\n);\n"],"names":["useSmoothStatus"],"mappings":";;;;;;;AAEA;AAUA,SAAS,cAA6B;AAKtC,SAAS,6BAA6B;AACtC,SAAS,8BAA8B;AA6BnC;;;;;;;AArBJ,IAAM,0NAAgB,gBAAA,EAAyC,IAAI;AAEnE,IAAM,oBAAoB,CACxB,iBACG;IACH,MAAMA,mBAAkB,sJAAA,EAAO,IAAM,YAAY;IACjD,OAAO;QAAE,iBAAAA;IAAgB;AAC3B;AAEO,IAAM,wBAA+C,CAAC,EAAE,QAAA,CAAS,CAAA,KAAM;IAC5E,MAAM,QAAQ,iBAAiB;QAAE,UAAU;IAAK,CAAC;IACjD,MAAM,sBAAqB,wNAAA,CAAsB;IAEjD,MAAM,CAAC,OAAO,CAAA,6MAAI,WAAA,EAAS,IACzB,kBAAkB,mBAAmB,QAAA,CAAS,EAAE,MAAM;IAIxD,IAAI,MAAO,CAAA,OAAO;IAElB,OACE,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EAAC,cAAc,QAAA,EAAd;QAAuB,OAAO;QAAU;IAAA,CAAS;AAEtD;AAEO,IAAM,4BAA4B,CACvC,cACM;IACN,MAAM,WAAU,sNAAA,EAAW,CAAC,OAAO,QAAQ;QACzC,OACE,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EAAC,uBAAA;YACC,UAAA,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EAAC,WAAA;gBAAW,GAAI,KAAA;gBAAe;YAAA,CAAU;QAAA,CAC3C;IAEJ,CAAC;IACD,QAAQ,WAAA,GAAc,UAAU,WAAA;IAChC,OAAO;AACT;AAQA,SAAS,iBAAiB,OAAA,EAA8C;IACtE,MAAM,oNAAU,aAAA,EAAW,aAAa;IACxC,IAAI,CAAC,SAAS,YAAY,CAAC,SACzB,MAAM,IAAI,MACR;IAEJ,OAAO;AACT;AAEO,IAAM,EAAE,eAAA,EAAiB,oBAAA,CAAqB,CAAA,iNAAI,yBAAA,EACvD,kBACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2631, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/context/ReadonlyStore.ts"],"sourcesContent":["import type { StoreApi } from \"zustand\";\n\nexport type ReadonlyStore<T> = Omit<StoreApi<T>, \"setState\" | \"destroy\">;\n\nexport const writableStore = <T>(store: ReadonlyStore<T> | undefined) => {\n  return store as unknown as StoreApi<T>;\n};\n"],"names":[],"mappings":";;;;AAIO,IAAM,gBAAgB,CAAI,UAAwC;IACvE,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2646, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/utils/smooth/useSmooth.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport { useMessage } from \"../../context\";\nimport {\n  ContentPartStatus,\n  ReasoningContentPart,\n  TextContentPart,\n} from \"../../types/AssistantTypes\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useSmoothStatusStore } from \"./SmoothContext\";\nimport { writableStore } from \"../../context/ReadonlyStore\";\nimport { ContentPartState } from \"../../api/ContentPartRuntime\";\n\nclass TextStreamAnimator {\n  private animationFrameId: number | null = null;\n  private lastUpdateTime: number = Date.now();\n\n  public targetText: string = \"\";\n\n  constructor(\n    public currentText: string,\n    private setText: (newText: string) => void,\n  ) {}\n\n  start() {\n    if (this.animationFrameId !== null) return;\n    this.lastUpdateTime = Date.now();\n    this.animate();\n  }\n\n  stop() {\n    if (this.animationFrameId !== null) {\n      cancelAnimationFrame(this.animationFrameId);\n      this.animationFrameId = null;\n    }\n  }\n\n  private animate = () => {\n    const currentTime = Date.now();\n    const deltaTime = currentTime - this.lastUpdateTime;\n    let timeToConsume = deltaTime;\n\n    const remainingChars = this.targetText.length - this.currentText.length;\n    const baseTimePerChar = Math.min(5, 250 / remainingChars);\n\n    let charsToAdd = 0;\n    while (timeToConsume >= baseTimePerChar && charsToAdd < remainingChars) {\n      charsToAdd++;\n      timeToConsume -= baseTimePerChar;\n    }\n\n    if (charsToAdd !== remainingChars) {\n      this.animationFrameId = requestAnimationFrame(this.animate);\n    } else {\n      this.animationFrameId = null;\n    }\n    if (charsToAdd === 0) return;\n\n    this.currentText = this.targetText.slice(\n      0,\n      this.currentText.length + charsToAdd,\n    );\n    this.lastUpdateTime = currentTime - timeToConsume;\n    this.setText(this.currentText);\n  };\n}\n\nconst SMOOTH_STATUS: ContentPartStatus = Object.freeze({\n  type: \"running\",\n});\n\nexport const useSmooth = (\n  state: ContentPartState & (TextContentPart | ReasoningContentPart),\n  smooth: boolean = false,\n): ContentPartState & (TextContentPart | ReasoningContentPart) => {\n  const { text } = state;\n  const id = useMessage({\n    optional: true,\n    selector: (m: { id: string }) => m.id,\n  });\n\n  const idRef = useRef(id);\n  const [displayedText, setDisplayedText] = useState(text);\n\n  const smoothStatusStore = useSmoothStatusStore({ optional: true });\n  const setText = useCallbackRef((text: string) => {\n    setDisplayedText(text);\n    if (smoothStatusStore) {\n      const target =\n        displayedText !== text || state.status.type === \"running\"\n          ? SMOOTH_STATUS\n          : state.status;\n      writableStore(smoothStatusStore).setState(target, true);\n    }\n  });\n\n  // TODO this is hacky\n  useEffect(() => {\n    if (smoothStatusStore) {\n      const target =\n        displayedText !== text || state.status.type === \"running\"\n          ? SMOOTH_STATUS\n          : state.status;\n      writableStore(smoothStatusStore).setState(target, true);\n    }\n  }, [smoothStatusStore, text, displayedText, state.status]);\n\n  const [animatorRef] = useState<TextStreamAnimator>(\n    new TextStreamAnimator(text, setText),\n  );\n\n  useEffect(() => {\n    if (!smooth) {\n      animatorRef.stop();\n      return;\n    }\n\n    if (idRef.current !== id || !text.startsWith(animatorRef.targetText)) {\n      idRef.current = id;\n      setText(text);\n\n      animatorRef.currentText = text;\n      animatorRef.targetText = text;\n      animatorRef.stop();\n\n      return;\n    }\n\n    animatorRef.targetText = text;\n    animatorRef.start();\n  }, [setText, animatorRef, id, smooth, text]);\n\n  useEffect(() => {\n    return () => {\n      animatorRef.stop();\n    };\n  }, [animatorRef]);\n\n  return useMemo(\n    () =>\n      smooth\n        ? {\n            type: \"text\",\n            text: displayedText,\n            status: text === displayedText ? state.status : SMOOTH_STATUS,\n          }\n        : state,\n    [smooth, displayedText, state, text],\n  );\n};\n"],"names":["text"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2876, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/runtimes/local/shouldContinue.tsx"],"sourcesContent":["import type { ThreadAssistantMessage } from \"../../types\";\n\nexport const shouldContinue = (\n  result: ThreadAssistantMessage,\n  humanToolNames: string[] | undefined,\n) => {\n  // TODO legacy behavior -- make specifying human tool names required\n  if (humanToolNames === undefined) {\n    return (\n      result.status?.type === \"requires-action\" &&\n      result.status.reason === \"tool-calls\" &&\n      result.content.every((c) => c.type !== \"tool-call\" || !!c.result)\n    );\n  }\n\n  return (\n    result.status?.type === \"requires-action\" &&\n    result.status.reason === \"tool-calls\" &&\n    result.content.every(\n      (c) =>\n        c.type !== \"tool-call\" ||\n        !!c.result ||\n        !humanToolNames.includes(c.toolName),\n    )\n  );\n};\n"],"names":[],"mappings":";;;;AAEO,IAAM,iBAAiB,CAC5B,QACA,mBACG;IAEH,IAAI,mBAAmB,KAAA,GAAW;QAChC,OACE,OAAO,MAAA,EAAQ,SAAS,qBACxB,OAAO,MAAA,CAAO,MAAA,KAAW,gBACzB,OAAO,OAAA,CAAQ,KAAA,CAAM,CAAC,IAAM,EAAE,IAAA,KAAS,eAAe,CAAC,CAAC,EAAE,MAAM;IAEpE;IAEA,OACE,OAAO,MAAA,EAAQ,SAAS,qBACxB,OAAO,MAAA,CAAO,MAAA,KAAW,gBACzB,OAAO,OAAA,CAAQ,KAAA,CACb,CAAC,IACC,EAAE,IAAA,KAAS,eACX,CAAC,CAAC,EAAE,MAAA,IACJ,CAAC,eAAe,QAAA,CAAS,EAAE,QAAQ;AAG3C","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2894, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/runtimes/composer/DefaultEditComposerRuntimeCore.tsx"],"sourcesContent":["import { AppendMessage, ThreadMessage } from \"../../types\";\nimport { getThreadMessageText } from \"../../utils/getThreadMessageText\";\nimport { AttachmentAdapter } from \"../adapters/attachment\";\nimport { ThreadRuntimeCore } from \"../core/ThreadRuntimeCore\";\nimport { BaseComposerRuntimeCore } from \"./BaseComposerRuntimeCore\";\n\nexport class DefaultEditComposerRuntimeCore extends BaseComposerRuntimeCore {\n  public get canCancel() {\n    return true;\n  }\n\n  protected getAttachmentAdapter() {\n    return this.runtime.adapters?.attachments;\n  }\n\n  private _nonTextParts;\n  private _previousText;\n  private _parentId;\n  private _sourceId;\n  constructor(\n    private runtime: ThreadRuntimeCore & {\n      adapters?: { attachments?: AttachmentAdapter | undefined } | undefined;\n    },\n    private endEditCallback: () => void,\n    { parentId, message }: { parentId: string | null; message: ThreadMessage },\n  ) {\n    super();\n    this._parentId = parentId;\n    this._sourceId = message.id;\n    this._previousText = getThreadMessageText(message);\n    this.setText(this._previousText);\n\n    this.setRole(message.role);\n    this.setAttachments(message.attachments ?? []);\n\n    this._nonTextParts = message.content.filter((part) => part.type !== \"text\");\n\n    // Use the runConfig from the regular (non-edit) composer as the initial runConfig for the edit composer\n    this.setRunConfig({ ...runtime.composer.runConfig });\n  }\n\n  public async handleSend(\n    message: Omit<AppendMessage, \"parentId\" | \"sourceId\">,\n  ) {\n    const text = getThreadMessageText(message as AppendMessage);\n    if (text !== this._previousText) {\n      this.runtime.append({\n        ...message,\n        content: [...message.content, ...this._nonTextParts] as any,\n        parentId: this._parentId,\n        sourceId: this._sourceId,\n      });\n    }\n\n    this.handleCancel();\n  }\n\n  public handleCancel() {\n    this.endEditCallback();\n    this._notifySubscribers();\n  }\n}\n"],"names":[],"mappings":";;;;AACA,SAAS,4BAA4B;AAGrC,SAAS,+BAA+B;;;AAEjC,IAAM,iCAAN,oNAA6C,0BAAA,CAAwB;IAa1E,YACU,OAAA,EAGA,eAAA,EACR,EAAE,QAAA,EAAU,OAAA,CAAQ,CAAA,CACpB;QACA,KAAA,CAAM;QANE,IAAA,CAAA,OAAA,GAAA;QAGA,IAAA,CAAA,eAAA,GAAA;QAIR,IAAA,CAAK,SAAA,GAAY;QACjB,IAAA,CAAK,SAAA,GAAY,QAAQ,EAAA;QACzB,IAAA,CAAK,aAAA,2LAAgB,uBAAA,EAAqB,OAAO;QACjD,IAAA,CAAK,OAAA,CAAQ,IAAA,CAAK,aAAa;QAE/B,IAAA,CAAK,OAAA,CAAQ,QAAQ,IAAI;QACzB,IAAA,CAAK,cAAA,CAAe,QAAQ,WAAA,IAAe,CAAC,CAAC;QAE7C,IAAA,CAAK,aAAA,GAAgB,QAAQ,OAAA,CAAQ,MAAA,CAAO,CAAC,OAAS,KAAK,IAAA,KAAS,MAAM;QAG1E,IAAA,CAAK,YAAA,CAAa;YAAE,GAAG,QAAQ,QAAA,CAAS,SAAA;QAAU,CAAC;IACrD;IAhCA,IAAW,YAAY;QACrB,OAAO;IACT;IAEU,uBAAuB;QAC/B,OAAO,IAAA,CAAK,OAAA,CAAQ,QAAA,EAAU;IAChC;IAEQ,cAAA;IACA,cAAA;IACA,UAAA;IACA,UAAA;IAuBR,MAAa,WACX,OAAA,EACA;QACA,MAAM,OAAO,+MAAA,EAAqB,OAAwB;QAC1D,IAAI,SAAS,IAAA,CAAK,aAAA,EAAe;YAC/B,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;gBAClB,GAAG,OAAA;gBACH,SAAS,CAAC;uBAAG,QAAQ,OAAA,EAAS;uBAAG,IAAA,CAAK,aAAa;iBAAA;gBACnD,UAAU,IAAA,CAAK,SAAA;gBACf,UAAU,IAAA,CAAK,SAAA;YACjB,CAAC;QACH;QAEA,IAAA,CAAK,YAAA,CAAa;IACpB;IAEO,eAAe;QACpB,IAAA,CAAK,eAAA,CAAgB;QACrB,IAAA,CAAK,kBAAA,CAAmB;IAC1B;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2956, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/runtimes/core/BaseThreadRuntimeCore.tsx"],"sourcesContent":["import type { AppendMessage, Unsubscribe } from \"../../types\";\nimport {\n  ExportedMessageRepository,\n  MessageRepository,\n} from \"../utils/MessageRepository\";\nimport { DefaultThreadComposerRuntimeCore } from \"../composer/DefaultThreadComposerRuntimeCore\";\nimport {\n  AddToolResultOptions,\n  ThreadSuggestion,\n  SubmitFeedbackOptions,\n  ThreadRuntimeCore,\n  SpeechState,\n  RuntimeCapabilities,\n  SubmittedFeedback,\n  ThreadRuntimeEventType,\n  StartRunConfig,\n  ResumeRunConfig,\n} from \"../core/ThreadRuntimeCore\";\nimport { DefaultEditComposerRuntimeCore } from \"../composer/DefaultEditComposerRuntimeCore\";\nimport { SpeechSynthesisAdapter } from \"../adapters/speech/SpeechAdapterTypes\";\nimport { FeedbackAdapter } from \"../adapters/feedback/FeedbackAdapter\";\nimport { AttachmentAdapter } from \"../adapters/attachment\";\nimport { getThreadMessageText } from \"../../utils/getThreadMessageText\";\nimport { ModelContextProvider } from \"../../model-context\";\n\ntype BaseThreadAdapters = {\n  speech?: SpeechSynthesisAdapter | undefined;\n  feedback?: FeedbackAdapter | undefined;\n  attachments?: AttachmentAdapter | undefined;\n};\n\nexport abstract class BaseThreadRuntimeCore implements ThreadRuntimeCore {\n  private _subscriptions = new Set<() => void>();\n  private _isInitialized = false;\n\n  protected readonly repository = new MessageRepository();\n  public abstract get adapters(): BaseThreadAdapters | undefined;\n  public abstract get isDisabled(): boolean;\n  public abstract get suggestions(): readonly ThreadSuggestion[];\n  public abstract get extras(): unknown;\n\n  public abstract get capabilities(): RuntimeCapabilities;\n  public abstract append(message: AppendMessage): void;\n  public abstract startRun(config: StartRunConfig): void;\n  public abstract resumeRun(config: ResumeRunConfig): void;\n  public abstract addToolResult(options: AddToolResultOptions): void;\n  public abstract cancelRun(): void;\n\n  public get messages() {\n    return this.repository.getMessages();\n  }\n\n  public get state() {\n    let mostRecentAssistantMessage;\n    for (const message of this.messages) {\n      if (message.role === \"assistant\") {\n        mostRecentAssistantMessage = message;\n        break;\n      }\n    }\n\n    return mostRecentAssistantMessage?.metadata.unstable_state ?? null;\n  }\n\n  public readonly composer = new DefaultThreadComposerRuntimeCore(this);\n\n  constructor(private readonly _contextProvider: ModelContextProvider) {}\n\n  public getModelContext() {\n    return this._contextProvider.getModelContext();\n  }\n\n  private _editComposers = new Map<string, DefaultEditComposerRuntimeCore>();\n  public getEditComposer(messageId: string) {\n    return this._editComposers.get(messageId);\n  }\n  public beginEdit(messageId: string) {\n    if (this._editComposers.has(messageId))\n      throw new Error(\"Edit already in progress\");\n\n    this._editComposers.set(\n      messageId,\n      new DefaultEditComposerRuntimeCore(\n        this,\n        () => this._editComposers.delete(messageId),\n        this.repository.getMessage(messageId),\n      ),\n    );\n    this._notifySubscribers();\n  }\n\n  public getMessageById(messageId: string) {\n    return this.repository.getMessage(messageId);\n  }\n\n  public getBranches(messageId: string): string[] {\n    return this.repository.getBranches(messageId);\n  }\n\n  public switchToBranch(branchId: string): void {\n    this.repository.switchToBranch(branchId);\n    this._notifySubscribers();\n  }\n\n  protected _notifySubscribers() {\n    for (const callback of this._subscriptions) callback();\n  }\n\n  public _notifyEventSubscribers(event: ThreadRuntimeEventType) {\n    const subscribers = this._eventSubscribers.get(event);\n    if (!subscribers) return;\n\n    for (const callback of subscribers) callback();\n  }\n\n  public subscribe(callback: () => void): Unsubscribe {\n    this._subscriptions.add(callback);\n    return () => this._subscriptions.delete(callback);\n  }\n\n  private _submittedFeedback: Record<string, SubmittedFeedback> = {};\n\n  public getSubmittedFeedback(messageId: string) {\n    return this._submittedFeedback[messageId];\n  }\n\n  public submitFeedback({ messageId, type }: SubmitFeedbackOptions) {\n    const adapter = this.adapters?.feedback;\n    if (!adapter) throw new Error(\"Feedback adapter not configured\");\n\n    const { message } = this.repository.getMessage(messageId);\n    adapter.submit({ message, type });\n\n    this._submittedFeedback[messageId] = { type };\n    this._notifySubscribers();\n  }\n\n  private _stopSpeaking: Unsubscribe | undefined;\n  public speech: SpeechState | undefined;\n\n  public speak(messageId: string) {\n    const adapter = this.adapters?.speech;\n    if (!adapter) throw new Error(\"Speech adapter not configured\");\n\n    const { message } = this.repository.getMessage(messageId);\n\n    this._stopSpeaking?.();\n\n    const utterance = adapter.speak(getThreadMessageText(message));\n    const unsub = utterance.subscribe(() => {\n      if (utterance.status.type === \"ended\") {\n        this._stopSpeaking = undefined;\n        this.speech = undefined;\n      } else {\n        this.speech = { messageId, status: utterance.status };\n      }\n      this._notifySubscribers();\n    });\n\n    this.speech = { messageId, status: utterance.status };\n    this._notifySubscribers();\n\n    this._stopSpeaking = () => {\n      utterance.cancel();\n      unsub();\n      this.speech = undefined;\n      this._stopSpeaking = undefined;\n    };\n  }\n\n  public stopSpeaking() {\n    if (!this._stopSpeaking) throw new Error(\"No message is being spoken\");\n    this._stopSpeaking();\n    this._notifySubscribers();\n  }\n\n  protected ensureInitialized() {\n    if (!this._isInitialized) {\n      this._isInitialized = true;\n      this._notifyEventSubscribers(\"initialize\");\n    }\n  }\n\n  // TODO import()/export() on external store doesn't make much sense\n  public export() {\n    return this.repository.export();\n  }\n\n  public import(data: ExportedMessageRepository) {\n    this.ensureInitialized();\n    this.repository.clear();\n    this.repository.import(data);\n    this._notifySubscribers();\n  }\n\n  private _eventSubscribers = new Map<\n    ThreadRuntimeEventType,\n    Set<() => void>\n  >();\n\n  public unstable_on(event: ThreadRuntimeEventType, callback: () => void) {\n    if (event === \"model-context-update\") {\n      return this._contextProvider.subscribe?.(callback) ?? (() => {});\n    }\n\n    const subscribers = this._eventSubscribers.get(event);\n    if (!subscribers) {\n      this._eventSubscribers.set(event, new Set([callback]));\n    } else {\n      subscribers.add(callback);\n    }\n\n    return () => {\n      const subscribers = this._eventSubscribers.get(event)!;\n      subscribers.delete(callback);\n    };\n  }\n}\n"],"names":["subscribers"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3120, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/runtimes/local/LocalThreadRuntimeCore.tsx"],"sourcesContent":["import { fromThreadMessageLike, generateId } from \"../../internal\";\nimport type { AppendMessage, ThreadAssistantMessage } from \"../../types\";\nimport type { ChatModelAdapter, ChatModelRunResult } from \"./ChatModelAdapter\";\nimport { shouldContinue } from \"./shouldContinue\";\nimport { LocalRuntimeOptionsBase } from \"./LocalRuntimeOptions\";\nimport {\n  AddToolResultOptions,\n  ThreadSuggestion,\n  ThreadRuntimeCore,\n  StartRunConfig,\n  ResumeRunConfig,\n} from \"../core/ThreadRuntimeCore\";\nimport { BaseThreadRuntimeCore } from \"../core/BaseThreadRuntimeCore\";\nimport { RunConfig } from \"../../types/AssistantTypes\";\nimport { ModelContextProvider } from \"../../model-context\";\n\nexport class LocalThreadRuntimeCore\n  extends BaseThreadRuntimeCore\n  implements ThreadRuntimeCore\n{\n  public readonly capabilities = {\n    switchToBranch: true,\n    edit: true,\n    reload: true,\n    cancel: true,\n    unstable_copy: true,\n    speech: false,\n    attachments: false,\n    feedback: false,\n  };\n\n  private abortController: AbortController | null = null;\n\n  public readonly isDisabled = false;\n\n  private _suggestions: readonly ThreadSuggestion[] = [];\n  private _suggestionsController: AbortController | null = null;\n  public get suggestions(): readonly ThreadSuggestion[] {\n    return this._suggestions;\n  }\n\n  public get adapters() {\n    return this._options.adapters;\n  }\n\n  constructor(\n    contextProvider: ModelContextProvider,\n    options: LocalRuntimeOptionsBase,\n  ) {\n    super(contextProvider);\n    this.__internal_setOptions(options);\n  }\n\n  private _options!: LocalRuntimeOptionsBase;\n\n  private _lastRunConfig: RunConfig = {};\n\n  public get extras() {\n    return undefined;\n  }\n\n  public __internal_setOptions(options: LocalRuntimeOptionsBase) {\n    if (this._options === options) return;\n\n    this._options = options;\n\n    let hasUpdates = false;\n\n    const canSpeak = options.adapters?.speech !== undefined;\n    if (this.capabilities.speech !== canSpeak) {\n      this.capabilities.speech = canSpeak;\n      hasUpdates = true;\n    }\n\n    const canAttach = options.adapters?.attachments !== undefined;\n    if (this.capabilities.attachments !== canAttach) {\n      this.capabilities.attachments = canAttach;\n      hasUpdates = true;\n    }\n\n    const canFeedback = options.adapters?.feedback !== undefined;\n    if (this.capabilities.feedback !== canFeedback) {\n      this.capabilities.feedback = canFeedback;\n      hasUpdates = true;\n    }\n\n    if (hasUpdates) this._notifySubscribers();\n  }\n\n  private _loadPromise: Promise<void> | undefined;\n  public __internal_load() {\n    if (this._loadPromise) return this._loadPromise;\n\n    const promise = this.adapters.history?.load() ?? Promise.resolve(null);\n\n    this._loadPromise = promise.then((repo) => {\n      if (!repo) return;\n      this.repository.import(repo);\n      this._notifySubscribers();\n\n      const resume = this.adapters.history?.resume?.bind(this.adapters.history);\n      if (repo.unstable_resume && resume) {\n        this.startRun(\n          {\n            parentId: this.repository.headId,\n            sourceId: this.repository.headId,\n            runConfig: this._lastRunConfig,\n          },\n          resume,\n        );\n      }\n    });\n\n    return this._loadPromise;\n  }\n\n  public async append(message: AppendMessage): Promise<void> {\n    this.ensureInitialized();\n\n    const newMessage = fromThreadMessageLike(message, generateId(), {\n      type: \"complete\",\n      reason: \"unknown\",\n    });\n    this.repository.addOrUpdateMessage(message.parentId, newMessage);\n    this._options.adapters.history?.append({\n      parentId: message.parentId,\n      message: newMessage,\n    });\n\n    const startRun = message.startRun ?? message.role === \"user\";\n    if (startRun) {\n      await this.startRun({\n        parentId: newMessage.id,\n        sourceId: message.sourceId,\n        runConfig: message.runConfig ?? {},\n      });\n    } else {\n      this.repository.resetHead(newMessage.id);\n      this._notifySubscribers();\n    }\n  }\n\n  public resumeRun({ stream, ...startConfig }: ResumeRunConfig): Promise<void> {\n    return this.startRun(startConfig, stream);\n  }\n\n  public async startRun(\n    { parentId, runConfig }: StartRunConfig,\n    runCallback?: ChatModelAdapter[\"run\"],\n  ): Promise<void> {\n    this.ensureInitialized();\n\n    this.repository.resetHead(parentId);\n\n    // add assistant message\n    const id = generateId();\n    let message: ThreadAssistantMessage = {\n      id,\n      role: \"assistant\",\n      status: { type: \"running\" },\n      content: [],\n      metadata: {\n        unstable_state: this.state,\n        unstable_annotations: [],\n        unstable_data: [],\n        steps: [],\n        custom: {},\n      },\n      createdAt: new Date(),\n    };\n\n    this._notifyEventSubscribers(\"run-start\");\n\n    try {\n      this._suggestions = [];\n      this._suggestionsController?.abort();\n      this._suggestionsController = null;\n\n      do {\n        message = await this.performRoundtrip(\n          parentId,\n          message,\n          runConfig,\n          runCallback,\n        );\n        runCallback = undefined;\n      } while (shouldContinue(message, this._options.unstable_humanToolNames));\n    } finally {\n      this._notifyEventSubscribers(\"run-end\");\n    }\n\n    this._suggestionsController = new AbortController();\n    const signal = this._suggestionsController.signal;\n    if (\n      this.adapters.suggestion &&\n      message.status?.type !== \"requires-action\"\n    ) {\n      const promiseOrGenerator = this.adapters.suggestion?.generate({\n        messages: this.messages,\n      });\n\n      if (Symbol.asyncIterator in promiseOrGenerator) {\n        for await (const r of promiseOrGenerator) {\n          if (signal.aborted) break;\n          this._suggestions = r;\n        }\n      } else {\n        const result = await promiseOrGenerator;\n        if (signal.aborted) return;\n        this._suggestions = result;\n      }\n    }\n  }\n\n  private async performRoundtrip(\n    parentId: string | null,\n    message: ThreadAssistantMessage,\n    runConfig: RunConfig | undefined,\n    runCallback?: ChatModelAdapter[\"run\"],\n  ) {\n    const messages = this.repository.getMessages();\n\n    // abort existing run\n    this.abortController?.abort();\n    this.abortController = new AbortController();\n\n    const initialContent = message.content;\n    const initialAnnotations = message.metadata?.unstable_annotations;\n    const initialData = message.metadata?.unstable_data;\n    const initialSteps = message.metadata?.steps;\n    const initalCustom = message.metadata?.custom;\n    const updateMessage = (m: Partial<ChatModelRunResult>) => {\n      const newSteps = m.metadata?.steps;\n      const steps = newSteps\n        ? [...(initialSteps ?? []), ...newSteps]\n        : undefined;\n\n      const newAnnotations = m.metadata?.unstable_annotations;\n      const newData = m.metadata?.unstable_data;\n      const annotations = newAnnotations\n        ? [...(initialAnnotations ?? []), ...newAnnotations]\n        : undefined;\n      const data = newData ? [...(initialData ?? []), ...newData] : undefined;\n\n      message = {\n        ...message,\n        ...(m.content\n          ? { content: [...initialContent, ...(m.content ?? [])] }\n          : undefined),\n        status: m.status ?? message.status,\n        ...(m.metadata\n          ? {\n              metadata: {\n                ...message.metadata,\n                ...(m.metadata.unstable_state\n                  ? { unstable_state: m.metadata.unstable_state }\n                  : undefined),\n                ...(annotations\n                  ? { unstable_annotations: annotations }\n                  : undefined),\n                ...(data ? { unstable_data: data } : undefined),\n                ...(steps ? { steps } : undefined),\n                ...(m.metadata?.custom\n                  ? {\n                      custom: { ...(initalCustom ?? {}), ...m.metadata.custom },\n                    }\n                  : undefined),\n              },\n            }\n          : undefined),\n      };\n      this.repository.addOrUpdateMessage(parentId, message);\n      this._notifySubscribers();\n    };\n\n    const maxSteps = this._options.maxSteps ?? 2;\n\n    const steps = message.metadata?.steps?.length ?? 0;\n    if (steps >= maxSteps) {\n      // reached max tool steps\n      updateMessage({\n        status: {\n          type: \"incomplete\",\n          reason: \"tool-calls\",\n        },\n      });\n      return message;\n    } else {\n      updateMessage({\n        status: {\n          type: \"running\",\n        },\n      });\n    }\n\n    try {\n      this._lastRunConfig = runConfig ?? {};\n      const context = this.getModelContext();\n\n      runCallback =\n        runCallback ??\n        this.adapters.chatModel.run.bind(this.adapters.chatModel);\n\n      const abortSignal = this.abortController.signal;\n      const promiseOrGenerator = runCallback({\n        messages,\n        runConfig: this._lastRunConfig,\n        abortSignal,\n        context,\n        config: context,\n        unstable_assistantMessageId: message.id,\n        unstable_getMessage() {\n          return message;\n        },\n      });\n\n      // handle async iterator for streaming results\n      if (Symbol.asyncIterator in promiseOrGenerator) {\n        for await (const r of promiseOrGenerator) {\n          if (abortSignal.aborted) {\n            updateMessage({\n              status: { type: \"incomplete\", reason: \"cancelled\" },\n            });\n            break;\n          }\n\n          updateMessage(r);\n        }\n      } else {\n        updateMessage(await promiseOrGenerator);\n      }\n\n      if (message.status.type === \"running\") {\n        updateMessage({\n          status: { type: \"complete\", reason: \"unknown\" },\n        });\n      }\n    } catch (e) {\n      // TODO this should be handled by the run result stream\n      if (e instanceof Error && e.name === \"AbortError\") {\n        updateMessage({\n          status: { type: \"incomplete\", reason: \"cancelled\" },\n        });\n      } else {\n        updateMessage({\n          status: {\n            type: \"incomplete\",\n            reason: \"error\",\n            error:\n              e instanceof Error\n                ? e.message\n                : `[${typeof e}] ${new String(e).toString()}`,\n          },\n        });\n\n        throw e;\n      }\n    } finally {\n      this.abortController = null;\n\n      if (\n        message.status.type === \"complete\" ||\n        message.status.type === \"incomplete\"\n      ) {\n        await this._options.adapters.history?.append({\n          parentId,\n          message: message,\n        });\n      }\n    }\n    return message;\n  }\n\n  public detach() {\n    this.abortController?.abort({ detach: true });\n    this.abortController = null;\n  }\n\n  public cancelRun() {\n    this.abortController?.abort({ detach: false });\n    this.abortController = null;\n  }\n\n  public addToolResult({\n    messageId,\n    toolCallId,\n    result,\n    isError,\n    artifact,\n  }: AddToolResultOptions) {\n    const messageData = this.repository.getMessage(messageId);\n    const { parentId } = messageData;\n    let { message } = messageData;\n\n    if (message.role !== \"assistant\")\n      throw new Error(\"Tried to add tool result to non-assistant message\");\n\n    let added = false;\n    let found = false;\n    const newContent = message.content.map((c) => {\n      if (c.type !== \"tool-call\") return c;\n      if (c.toolCallId !== toolCallId) return c;\n      found = true;\n      if (!c.result) added = true;\n      return {\n        ...c,\n        result,\n        artifact,\n        isError,\n      };\n    });\n\n    if (!found)\n      throw new Error(\"Tried to add tool result to non-existing tool call\");\n\n    message = {\n      ...message,\n      content: newContent,\n    };\n    this.repository.addOrUpdateMessage(parentId, message);\n\n    if (\n      added &&\n      shouldContinue(message, this._options.unstable_humanToolNames)\n    ) {\n      this.performRoundtrip(parentId, message, this._lastRunConfig);\n    }\n  }\n}\n"],"names":["steps"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3474, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/runtimes/local/LocalThreadListRuntimeCore.tsx"],"sourcesContent":["import { ThreadListRuntimeCore } from \"../core/ThreadListRuntimeCore\";\nimport { BaseSubscribable } from \"../remote-thread-list/BaseSubscribable\";\nimport { LocalThreadRuntimeCore } from \"./LocalThreadRuntimeCore\";\n\nexport type LocalThreadFactory = () => LocalThreadRuntimeCore;\n\nconst EMPTY_ARRAY = Object.freeze([]);\nexport class LocalThreadListRuntimeCore\n  extends BaseSubscribable\n  implements ThreadListRuntimeCore\n{\n  private _mainThread: LocalThreadRuntimeCore;\n  constructor(_threadFactory: LocalThreadFactory) {\n    super();\n\n    this._mainThread = _threadFactory();\n  }\n\n  public getMainThreadRuntimeCore() {\n    return this._mainThread;\n  }\n\n  public get newThreadId(): string {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public get threadIds(): readonly string[] {\n    throw EMPTY_ARRAY;\n  }\n\n  public get archivedThreadIds(): readonly string[] {\n    throw EMPTY_ARRAY;\n  }\n\n  public get mainThreadId(): string {\n    return \"__DEFAULT_ID__\";\n  }\n\n  public getThreadRuntimeCore(): never {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public getLoadThreadsPromise(): Promise<void> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public getItemById(threadId: string) {\n    if (threadId === this.mainThreadId) {\n      return {\n        status: \"regular\" as const,\n        threadId: this.mainThreadId,\n        remoteId: this.mainThreadId,\n        externalId: undefined,\n        title: undefined,\n        isMain: true,\n      };\n    }\n    throw new Error(\"Method not implemented\");\n  }\n\n  public async switchToThread(): Promise<void> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public switchToNewThread(): Promise<void> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public rename(): Promise<void> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public archive(): Promise<void> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public detach(): Promise<void> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public unarchive(): Promise<void> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public delete(): Promise<void> {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public initialize(): never {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  public generateTitle(): never {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n"],"names":[],"mappings":";;;;AACA,SAAS,wBAAwB;;AAKjC,IAAM,cAAc,OAAO,MAAA,CAAO,CAAC,CAAC;AAC7B,IAAM,6BAAN,6NACG,mBAAA,CAEV;IACU,YAAA;IACR,YAAY,cAAA,CAAoC;QAC9C,KAAA,CAAM;QAEN,IAAA,CAAK,WAAA,GAAc,eAAe;IACpC;IAEO,2BAA2B;QAChC,OAAO,IAAA,CAAK,WAAA;IACd;IAEA,IAAW,cAAsB;QAC/B,MAAM,IAAI,MAAM,yBAAyB;IAC3C;IAEA,IAAW,YAA+B;QACxC,MAAM;IACR;IAEA,IAAW,oBAAuC;QAChD,MAAM;IACR;IAEA,IAAW,eAAuB;QAChC,OAAO;IACT;IAEO,uBAA8B;QACnC,MAAM,IAAI,MAAM,yBAAyB;IAC3C;IAEO,wBAAuC;QAC5C,MAAM,IAAI,MAAM,yBAAyB;IAC3C;IAEO,YAAY,QAAA,EAAkB;QACnC,IAAI,aAAa,IAAA,CAAK,YAAA,EAAc;YAClC,OAAO;gBACL,QAAQ;gBACR,UAAU,IAAA,CAAK,YAAA;gBACf,UAAU,IAAA,CAAK,YAAA;gBACf,YAAY,KAAA;gBACZ,OAAO,KAAA;gBACP,QAAQ;YACV;QACF;QACA,MAAM,IAAI,MAAM,wBAAwB;IAC1C;IAEA,MAAa,iBAAgC;QAC3C,MAAM,IAAI,MAAM,yBAAyB;IAC3C;IAEO,oBAAmC;QACxC,MAAM,IAAI,MAAM,yBAAyB;IAC3C;IAEO,SAAwB;QAC7B,MAAM,IAAI,MAAM,yBAAyB;IAC3C;IAEO,UAAyB;QAC9B,MAAM,IAAI,MAAM,yBAAyB;IAC3C;IAEO,SAAwB;QAC7B,MAAM,IAAI,MAAM,yBAAyB;IAC3C;IAEO,YAA2B;QAChC,MAAM,IAAI,MAAM,yBAAyB;IAC3C;IAEO,SAAwB;QAC7B,MAAM,IAAI,MAAM,yBAAyB;IAC3C;IAEO,aAAoB;QACzB,MAAM,IAAI,MAAM,yBAAyB;IAC3C;IAEO,gBAAuB;QAC5B,MAAM,IAAI,MAAM,yBAAyB;IAC3C;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3557, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/runtimes/local/LocalRuntimeCore.tsx"],"sourcesContent":["import { BaseAssistantRuntimeCore } from \"../core/BaseAssistantRuntimeCore\";\nimport { LocalThreadRuntimeCore } from \"./LocalThreadRuntimeCore\";\nimport { LocalRuntimeOptionsBase } from \"./LocalRuntimeOptions\";\nimport { LocalThreadListRuntimeCore } from \"./LocalThreadListRuntimeCore\";\nimport { ExportedMessageRepository } from \"../utils/MessageRepository\";\nimport { ThreadMessageLike } from \"../external-store\";\n\nexport class LocalRuntimeCore extends BaseAssistantRuntimeCore {\n  public readonly threads;\n  public readonly Provider = undefined;\n\n  private _options: LocalRuntimeOptionsBase;\n\n  constructor(\n    options: LocalRuntimeOptionsBase,\n    initialMessages: readonly ThreadMessageLike[] | undefined,\n  ) {\n    super();\n\n    this._options = options;\n\n    this.threads = new LocalThreadListRuntimeCore(() => {\n      return new LocalThreadRuntimeCore(this._contextProvider, this._options);\n    });\n\n    if (initialMessages) {\n      this.threads\n        .getMainThreadRuntimeCore()\n        .import(ExportedMessageRepository.fromArray(initialMessages));\n    }\n  }\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,gCAAgC;AACzC,SAAS,8BAA8B;AAEvC,SAAS,kCAAkC;AAC3C,SAAS,iCAAiC;;;;;AAGnC,IAAM,mBAAN,iNAA+B,2BAAA,CAAyB;IAC7C,QAAA;IACA,WAAW,KAAA,EAAA;IAEnB,SAAA;IAER,YACE,OAAA,EACA,eAAA,CACA;QACA,KAAA,CAAM;QAEN,IAAA,CAAK,QAAA,GAAW;QAEhB,IAAA,CAAK,OAAA,GAAU,0MAAI,6BAAA,CAA2B,MAAM;YAClD,OAAO,sMAAI,yBAAA,CAAuB,IAAA,CAAK,gBAAA,EAAkB,IAAA,CAAK,QAAQ;QACxE,CAAC;QAED,IAAI,iBAAiB;YACnB,IAAA,CAAK,OAAA,CACF,wBAAA,CAAyB,EACzB,MAAA,8LAAO,4BAAA,CAA0B,SAAA,CAAU,eAAe,CAAC;QAChE;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3592, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/runtimes/adapters/RuntimeAdapterProvider.tsx"],"sourcesContent":["import { createContext, FC, ReactNode, useContext } from \"react\";\nimport { ThreadHistoryAdapter } from \"./thread-history/ThreadHistoryAdapter\";\nimport { ModelContextProvider } from \"../../model-context\";\n\nexport type RuntimeAdapters = {\n  modelContext?: ModelContextProvider;\n  history?: ThreadHistoryAdapter;\n};\n\nconst RuntimeAdaptersContext = createContext<RuntimeAdapters | null>(null);\n\nnamespace RuntimeAdapterProvider {\n  export type Props = {\n    adapters: RuntimeAdapters;\n    children: ReactNode;\n  };\n}\n\nexport const RuntimeAdapterProvider: FC<RuntimeAdapterProvider.Props> = ({\n  adapters,\n  children,\n}) => {\n  const context = useContext(RuntimeAdaptersContext);\n  return (\n    <RuntimeAdaptersContext.Provider\n      value={{\n        ...context,\n        ...adapters,\n      }}\n    >\n      {children}\n    </RuntimeAdaptersContext.Provider>\n  );\n};\n\nexport const useRuntimeAdapters = () => {\n  const adapters = useContext(RuntimeAdaptersContext);\n  return adapters;\n};\n"],"names":[],"mappings":";;;;;AAAA,SAAS,eAA8B,kBAAkB;AAwBrD;;;AAfJ,IAAM,mOAAyB,gBAAA,EAAsC,IAAI;AASlE,IAAM,yBAA2D,CAAC,EACvE,QAAA,EACA,QAAA,EACF,KAAM;IACJ,MAAM,oNAAU,aAAA,EAAW,sBAAsB;IACjD,OACE,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EAAC,uBAAuB,QAAA,EAAvB;QACC,OAAO;YACL,GAAG,OAAA;YACH,GAAG,QAAA;QACL;QAEC;IAAA;AAGP;AAEO,IAAM,qBAAqB,MAAM;IACtC,MAAM,qNAAW,aAAA,EAAW,sBAAsB;IAClD,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3624, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/context/react/AssistantContext.ts"],"sourcesContent":["\"use client\";\n\nimport { createContext } from \"react\";\nimport type { AssistantToolUIsState } from \"../stores/AssistantToolUIs\";\nimport { ReadonlyStore } from \"../ReadonlyStore\";\nimport { createContextHook } from \"./utils/createContextHook\";\nimport { createContextStoreHook } from \"./utils/createContextStoreHook\";\nimport { UseBoundStore } from \"zustand\";\nimport { AssistantRuntime } from \"../../api/AssistantRuntime\";\nimport { ThreadListRuntime } from \"../../api/ThreadListRuntime\";\nimport { createStateHookForRuntime } from \"./utils/createStateHookForRuntime\";\n\nexport type AssistantContextValue = {\n  useAssistantRuntime: UseBoundStore<ReadonlyStore<AssistantRuntime>>;\n  useToolUIs: UseBoundStore<ReadonlyStore<AssistantToolUIsState>>;\n};\n\nexport const AssistantContext = createContext<AssistantContextValue | null>(\n  null,\n);\n\nexport const useAssistantContext = createContextHook(\n  AssistantContext,\n  \"AssistantRuntimeProvider\",\n);\n\nexport function useAssistantRuntime(options?: {\n  optional?: false | undefined;\n}): AssistantRuntime;\nexport function useAssistantRuntime(options?: {\n  optional?: boolean | undefined;\n}): AssistantRuntime | null;\nexport function useAssistantRuntime(options?: {\n  optional?: boolean | undefined;\n}) {\n  const context = useAssistantContext(options);\n  if (!context) return null;\n  return context.useAssistantRuntime();\n}\n\nexport const { useToolUIs, useToolUIsStore } = createContextStoreHook(\n  useAssistantContext,\n  \"useToolUIs\",\n);\n\nconst useThreadListRuntime = (opt: {\n  optional: boolean | undefined;\n}): ThreadListRuntime | null => useAssistantRuntime(opt)?.threads ?? null;\nexport const useThreadList = createStateHookForRuntime(useThreadListRuntime);\n"],"names":[],"mappings":";;;;;;;;;AAEA,SAAS,qBAAqB;AAG9B,SAAS,yBAAyB;AAClC,SAAS,8BAA8B;AAIvC,SAAS,iCAAiC;;;;;;AAOnC,IAAM,6NAAmB,gBAAA,EAC9B;AAGK,IAAM,uBAAsB,4NAAA,EACjC,kBACA;AASK,SAAS,oBAAoB,OAAA,EAEjC;IACD,MAAM,UAAU,oBAAoB,OAAO;IAC3C,IAAI,CAAC,QAAS,CAAA,OAAO;IACrB,OAAO,QAAQ,mBAAA,CAAoB;AACrC;AAEO,IAAM,EAAE,UAAA,EAAY,eAAA,CAAgB,CAAA,iNAAI,yBAAA,EAC7C,qBACA;AAGF,IAAM,uBAAuB,CAAC,MAEE,oBAAoB,GAAG,GAAG,WAAW;AAC9D,IAAM,iOAAgB,4BAAA,EAA0B,oBAAoB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3660, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/context/react/ThreadListItemContext.ts"],"sourcesContent":["\"use client\";\n\nimport { createContext } from \"react\";\nimport { ReadonlyStore } from \"../ReadonlyStore\";\nimport { createContextHook } from \"./utils/createContextHook\";\nimport { UseBoundStore } from \"zustand\";\nimport { ThreadListItemRuntime } from \"../../api/ThreadListItemRuntime\";\nimport { createStateHookForRuntime } from \"./utils/createStateHookForRuntime\";\n\nexport type ThreadListItemContextValue = {\n  useThreadListItemRuntime: UseBoundStore<ReadonlyStore<ThreadListItemRuntime>>;\n};\n\nexport const ThreadListItemContext =\n  createContext<ThreadListItemContextValue | null>(null);\n\nconst useThreadListItemContext = createContextHook(\n  ThreadListItemContext,\n  \"a component passed to <ThreadListPrimitive.Items components={...}>\",\n);\n\nexport function useThreadListItemRuntime(options?: {\n  optional?: false | undefined;\n}): ThreadListItemRuntime;\nexport function useThreadListItemRuntime(options?: {\n  optional?: boolean | undefined;\n}): ThreadListItemRuntime | null;\nexport function useThreadListItemRuntime(options?: {\n  optional?: boolean | undefined;\n}) {\n  const context = useThreadListItemContext(options);\n  if (!context) return null;\n  return context.useThreadListItemRuntime();\n}\n\nexport const useThreadListItem = createStateHookForRuntime(\n  useThreadListItemRuntime,\n);\n"],"names":[],"mappings":";;;;;;AAEA,SAAS,qBAAqB;AAE9B,SAAS,yBAAyB;AAGlC,SAAS,iCAAiC;;;;;AAMnC,IAAM,kOACX,gBAAA,EAAiD,IAAI;AAEvD,IAAM,oOAA2B,oBAAA,EAC/B,uBACA;AASK,SAAS,yBAAyB,OAAA,EAEtC;IACD,MAAM,UAAU,yBAAyB,OAAO;IAChD,IAAI,CAAC,QAAS,CAAA,OAAO;IACrB,OAAO,QAAQ,wBAAA,CAAyB;AAC1C;AAEO,IAAM,qOAAoB,4BAAA,EAC/B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3689, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/context/providers/ThreadListItemRuntimeProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport { type FC, type PropsWithChildren, useEffect, useState } from \"react\";\nimport { create } from \"zustand\";\nimport {\n  ThreadListItemContext,\n  type ThreadListItemContextValue,\n} from \"../react/ThreadListItemContext\";\nimport { writableStore } from \"../ReadonlyStore\";\nimport { ThreadListItemRuntime } from \"../../api/ThreadListItemRuntime\";\nimport { ensureBinding } from \"../react/utils/ensureBinding\";\n\nexport namespace ThreadListItemRuntimeProvider {\n  export type Props = PropsWithChildren<{\n    runtime: ThreadListItemRuntime;\n  }>;\n}\n\nconst useThreadListItemRuntimeStore = (runtime: ThreadListItemRuntime) => {\n  const [store] = useState(() => create(() => runtime));\n\n  useEffect(() => {\n    ensureBinding(runtime);\n    writableStore(store).setState(runtime, true);\n  }, [runtime, store]);\n\n  return store;\n};\n\nexport const ThreadListItemRuntimeProvider: FC<\n  ThreadListItemRuntimeProvider.Props\n> = ({ runtime, children }) => {\n  const useThreadListItemRuntime = useThreadListItemRuntimeStore(runtime);\n  const [context] = useState<ThreadListItemContextValue>(() => {\n    return { useThreadListItemRuntime };\n  });\n\n  return (\n    <ThreadListItemContext.Provider value={context}>\n      {children}\n    </ThreadListItemContext.Provider>\n  );\n};\n"],"names":[],"mappings":";;;;AAEA,SAA0C,WAAW,gBAAgB;AACrE,SAAS,cAAc;AACvB;AAIA,SAAS,qBAAqB;AAE9B,SAAS,qBAAqB;AA4B1B;;;;;;;;AApBJ,IAAM,gCAAgC,CAAC,YAAmC;IACxE,MAAM,CAAC,KAAK,CAAA,OAAI,iNAAA,EAAS,iJAAM,SAAA,EAAO,IAAM,OAAO,CAAC;IAEpD,CAAA,GAAA,qMAAA,CAAA,YAAA,EAAU,MAAM;QACd,CAAA,GAAA,gMAAA,CAAA,gBAAA,EAAc,OAAO;QACrB,CAAA,GAAA,8KAAA,CAAA,gBAAA,EAAc,KAAK,EAAE,QAAA,CAAS,SAAS,IAAI;IAC7C,GAAG;QAAC;QAAS,KAAK;KAAC;IAEnB,OAAO;AACT;AAEO,IAAM,gCAET,CAAC,EAAE,OAAA,EAAS,QAAA,CAAS,CAAA,KAAM;IAC7B,MAAM,2BAA2B,8BAA8B,OAAO;IACtE,MAAM,CAAC,OAAO,CAAA,6MAAI,WAAA,EAAqC,MAAM;QAC3D,OAAO;YAAE;QAAyB;IACpC,CAAC;IAED,OACE,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,kMAAC,wBAAA,CAAsB,QAAA,EAAtB;QAA+B,OAAO;QACpC;IAAA,CACH;AAEJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3737, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/runtimes/remote-thread-list/RemoteThreadListHookInstanceManager.tsx"],"sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\n\"use client\";\n\nimport {\n  FC,\n  useCallback,\n  useRef,\n  useEffect,\n  memo,\n  useMemo,\n  PropsWithChildren,\n  ComponentType,\n} from \"react\";\nimport { UseBoundStore, StoreApi, create } from \"zustand\";\nimport { useAssistantRuntime } from \"../../context\";\nimport { ThreadListItemRuntimeProvider } from \"../../context/providers/ThreadListItemRuntimeProvider\";\nimport {\n  useThreadListItem,\n  useThreadListItemRuntime,\n} from \"../../context/react/ThreadListItemContext\";\nimport { ThreadRuntimeCore, ThreadRuntimeImpl } from \"../../internal\";\nimport { BaseSubscribable } from \"./BaseSubscribable\";\nimport { AssistantRuntime } from \"../../api\";\n\ntype RemoteThreadListHook = () => AssistantRuntime;\n\ntype RemoteThreadListHookInstance = {\n  runtime?: ThreadRuntimeCore;\n};\nexport class RemoteThreadListHookInstanceManager extends BaseSubscribable {\n  private useRuntimeHook: UseBoundStore<\n    StoreApi<{ useRuntime: RemoteThreadListHook }>\n  >;\n  private instances = new Map<string, RemoteThreadListHookInstance>();\n  private useAliveThreadsKeysChanged = create(() => ({}));\n\n  constructor(runtimeHook: RemoteThreadListHook) {\n    super();\n    this.useRuntimeHook = create(() => ({ useRuntime: runtimeHook }));\n  }\n\n  public startThreadRuntime(threadId: string) {\n    if (!this.instances.has(threadId)) {\n      this.instances.set(threadId, {});\n      this.useAliveThreadsKeysChanged.setState({}, true);\n    }\n\n    return new Promise<ThreadRuntimeCore>((resolve, reject) => {\n      const callback = () => {\n        const instance = this.instances.get(threadId);\n        if (!instance) {\n          dispose();\n          reject(new Error(\"Thread was deleted before runtime was started\"));\n        } else if (!instance.runtime) {\n          return; // misc update\n        } else {\n          dispose();\n          resolve(instance.runtime);\n        }\n      };\n      const dispose = this.subscribe(callback);\n      callback();\n    });\n  }\n\n  public getThreadRuntimeCore(threadId: string) {\n    const instance = this.instances.get(threadId);\n    if (!instance)\n      throw new Error(\n        \"getThreadRuntimeCore not found. This is a bug in assistant-ui.\",\n      );\n    return instance.runtime;\n  }\n\n  public stopThreadRuntime(threadId: string) {\n    this.instances.delete(threadId);\n    this.useAliveThreadsKeysChanged.setState({}, true);\n  }\n\n  public setRuntimeHook(newRuntimeHook: RemoteThreadListHook) {\n    const prevRuntimeHook = this.useRuntimeHook.getState().useRuntime;\n    if (prevRuntimeHook !== newRuntimeHook) {\n      this.useRuntimeHook.setState({ useRuntime: newRuntimeHook }, true);\n    }\n  }\n\n  private _InnerActiveThreadProvider: FC = () => {\n    const { id } = useThreadListItem();\n\n    const { useRuntime } = this.useRuntimeHook();\n    const runtime = useRuntime();\n\n    const threadBinding = (runtime.thread as ThreadRuntimeImpl)\n      .__internal_threadBinding;\n\n    const updateRuntime = useCallback(() => {\n      const aliveThread = this.instances.get(id);\n      if (!aliveThread)\n        throw new Error(\"Thread not found. This is a bug in assistant-ui.\");\n\n      aliveThread.runtime = threadBinding.getState();\n\n      if (isMounted) {\n        this._notifySubscribers();\n      }\n    }, [id, threadBinding]);\n\n    const isMounted = useRef(false);\n    if (!isMounted.current) {\n      updateRuntime();\n    }\n\n    useEffect(() => {\n      isMounted.current = true;\n      updateRuntime();\n      return threadBinding.outerSubscribe(updateRuntime);\n    }, [threadBinding, updateRuntime]);\n\n    // auto initialize thread\n    const threadListItemRuntime = useThreadListItemRuntime();\n    useEffect(() => {\n      return runtime.threads.main.unstable_on(\"initialize\", () => {\n        if (threadListItemRuntime.getState().status === \"new\") {\n          threadListItemRuntime.initialize();\n\n          // auto generate a title after first run\n          const dispose = runtime.thread.unstable_on(\"run-end\", () => {\n            dispose();\n\n            threadListItemRuntime.generateTitle();\n          });\n        }\n      });\n    }, [runtime, threadListItemRuntime]);\n\n    return null;\n  };\n\n  private _OuterActiveThreadProvider: FC<{\n    threadId: string;\n    provider: ComponentType<PropsWithChildren>;\n    // eslint-disable-next-line react/display-name\n  }> = memo(({ threadId, provider: Provider }) => {\n    const assistantRuntime = useAssistantRuntime();\n    const threadListItemRuntime = useMemo(\n      () => assistantRuntime.threads.getItemById(threadId),\n      [assistantRuntime, threadId],\n    );\n\n    return (\n      <ThreadListItemRuntimeProvider runtime={threadListItemRuntime}>\n        <Provider>\n          <this._InnerActiveThreadProvider />\n        </Provider>\n      </ThreadListItemRuntimeProvider>\n    );\n  });\n\n  public __internal_RenderThreadRuntimes: FC<{\n    provider: ComponentType<PropsWithChildren>;\n  }> = ({ provider }) => {\n    this.useAliveThreadsKeysChanged(); // trigger re-render on alive threads change\n\n    return Array.from(this.instances.keys()).map((threadId) => (\n      <this._OuterActiveThreadProvider\n        key={threadId}\n        threadId={threadId}\n        provider={provider}\n      />\n    ));\n  };\n}\n"],"names":[],"mappings":";;;;AAGA;AAUA,SAAkC,cAAc;AAChD,SAAS,2BAA2B;AACpC,SAAS,qCAAqC;AAC9C;AAKA,SAAS,wBAAwB;AAmIvB;;;;;;;;;AA3HH,IAAM,sCAAN,6NAAkD,mBAAA,CAAiB;IAChE,eAAA;IAGA,YAAY,aAAA,GAAA,IAAI,IAA0C,EAAA;IAC1D,0KAA6B,SAAA,EAAO,IAAA,CAAO,CAAC,CAAA,CAAE,EAAA;IAEtD,YAAY,WAAA,CAAmC;QAC7C,KAAA,CAAM;QACN,IAAA,CAAK,cAAA,+IAAiB,UAAA,EAAO,IAAA,CAAO;gBAAE,YAAY;YAAY,CAAA,CAAE;IAClE;IAEO,mBAAmB,QAAA,EAAkB;QAC1C,IAAI,CAAC,IAAA,CAAK,SAAA,CAAU,GAAA,CAAI,QAAQ,GAAG;YACjC,IAAA,CAAK,SAAA,CAAU,GAAA,CAAI,UAAU,CAAC,CAAC;YAC/B,IAAA,CAAK,0BAAA,CAA2B,QAAA,CAAS,CAAC,GAAG,IAAI;QACnD;QAEA,OAAO,IAAI,QAA2B,CAAC,SAAS,WAAW;YACzD,MAAM,WAAW,MAAM;gBACrB,MAAM,WAAW,IAAA,CAAK,SAAA,CAAU,GAAA,CAAI,QAAQ;gBAC5C,IAAI,CAAC,UAAU;oBACb,QAAQ;oBACR,OAAO,IAAI,MAAM,+CAA+C,CAAC;gBACnE,OAAA,IAAW,CAAC,SAAS,OAAA,EAAS;oBAC5B;gBACF,OAAO;oBACL,QAAQ;oBACR,QAAQ,SAAS,OAAO;gBAC1B;YACF;YACA,MAAM,UAAU,IAAA,CAAK,SAAA,CAAU,QAAQ;YACvC,SAAS;QACX,CAAC;IACH;IAEO,qBAAqB,QAAA,EAAkB;QAC5C,MAAM,WAAW,IAAA,CAAK,SAAA,CAAU,GAAA,CAAI,QAAQ;QAC5C,IAAI,CAAC,UACH,MAAM,IAAI,MACR;QAEJ,OAAO,SAAS,OAAA;IAClB;IAEO,kBAAkB,QAAA,EAAkB;QACzC,IAAA,CAAK,SAAA,CAAU,MAAA,CAAO,QAAQ;QAC9B,IAAA,CAAK,0BAAA,CAA2B,QAAA,CAAS,CAAC,GAAG,IAAI;IACnD;IAEO,eAAe,cAAA,EAAsC;QAC1D,MAAM,kBAAkB,IAAA,CAAK,cAAA,CAAe,QAAA,CAAS,EAAE,UAAA;QACvD,IAAI,oBAAoB,gBAAgB;YACtC,IAAA,CAAK,cAAA,CAAe,QAAA,CAAS;gBAAE,YAAY;YAAe,GAAG,IAAI;QACnE;IACF;IAEQ,6BAAiC,MAAM;QAC7C,MAAM,EAAE,EAAA,CAAG,CAAA,uMAAI,oBAAA,CAAkB;QAEjC,MAAM,EAAE,UAAA,CAAW,CAAA,GAAI,IAAA,CAAK,cAAA,CAAe;QAC3C,MAAM,UAAU,WAAW;QAE3B,MAAM,gBAAiB,QAAQ,MAAA,CAC5B,wBAAA;QAEH,MAAM,0NAAgB,cAAA,EAAY,MAAM;YACtC,MAAM,cAAc,IAAA,CAAK,SAAA,CAAU,GAAA,CAAI,EAAE;YACzC,IAAI,CAAC,aACH,MAAM,IAAI,MAAM,kDAAkD;YAEpE,YAAY,OAAA,GAAU,cAAc,QAAA,CAAS;YAE7C,IAAI,WAAW;gBACb,IAAA,CAAK,kBAAA,CAAmB;YAC1B;QACF,GAAG;YAAC;YAAI,aAAa;SAAC;QAEtB,MAAM,aAAY,kNAAA,EAAO,KAAK;QAC9B,IAAI,CAAC,UAAU,OAAA,EAAS;YACtB,cAAc;QAChB;QAEA,CAAA,GAAA,qMAAA,CAAA,YAAA,EAAU,MAAM;YACd,UAAU,OAAA,GAAU;YACpB,cAAc;YACd,OAAO,cAAc,cAAA,CAAe,aAAa;QACnD,GAAG;YAAC;YAAe,aAAa;SAAC;QAGjC,MAAM,wBAAwB,+NAAA,CAAyB;QACvD,CAAA,GAAA,qMAAA,CAAA,YAAA,EAAU,MAAM;YACd,OAAO,QAAQ,OAAA,CAAQ,IAAA,CAAK,WAAA,CAAY,cAAc,MAAM;gBAC1D,IAAI,sBAAsB,QAAA,CAAS,EAAE,MAAA,KAAW,OAAO;oBACrD,sBAAsB,UAAA,CAAW;oBAGjC,MAAM,UAAU,QAAQ,MAAA,CAAO,WAAA,CAAY,WAAW,MAAM;wBAC1D,QAAQ;wBAER,sBAAsB,aAAA,CAAc;oBACtC,CAAC;gBACH;YACF,CAAC;QACH,GAAG;YAAC;YAAS,qBAAqB;SAAC;QAEnC,OAAO;IACT,EAAA;IAEQ,uOAIH,OAAA,EAAK,CAAC,EAAE,QAAA,EAAU,UAAU,QAAA,CAAS,CAAA,KAAM;QAC9C,MAAM,kNAAmB,sBAAA,CAAoB;QAC7C,MAAM,yBAAwB,mNAAA,EAC5B,IAAM,iBAAiB,OAAA,CAAQ,WAAA,CAAY,QAAQ,GACnD;YAAC;YAAkB,QAAQ;SAAA;QAG7B,OACE,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,6MAAC,iCAAA,EAAA;YAA8B,SAAS;YACtC,UAAA,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EAAC,UAAA;gBACC,UAAA,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EAAC,IAAA,CAAK,0BAAA,EAAL,CAAA,CAAgC;YAAA,CACnC;QAAA,CACF;IAEJ,CAAC,EAAA;IAEM,kCAEF,CAAC,EAAE,QAAA,CAAS,CAAA,KAAM;QACrB,IAAA,CAAK,0BAAA,CAA2B;QAEhC,OAAO,MAAM,IAAA,CAAK,IAAA,CAAK,SAAA,CAAU,IAAA,CAAK,CAAC,EAAE,GAAA,CAAI,CAAC,WAC5C,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EAAC,IAAA,CAAK,0BAAA,EAAL;gBAEC;gBACA;YAAA,GAFK;IAKX,EAAA;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 3879, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/runtimes/remote-thread-list/EMPTY_THREAD_CORE.tsx"],"sourcesContent":["import { ThreadRuntimeCore } from \"../../internal\";\n\nconst EMPTY_THREAD_ERROR = new Error(\n  \"This is the empty thread, a placeholder for the main thread. You cannot perform any actions on this thread instance. This error is probably because you tried to call a thread method in your render function. Call the method inside a `useEffect` hook instead.\",\n);\nexport const EMPTY_THREAD_CORE: ThreadRuntimeCore = {\n  getMessageById() {\n    return undefined;\n  },\n\n  getBranches() {\n    return [];\n  },\n\n  switchToBranch() {\n    throw EMPTY_THREAD_ERROR;\n  },\n\n  append() {\n    throw EMPTY_THREAD_ERROR;\n  },\n\n  startRun() {\n    throw EMPTY_THREAD_ERROR;\n  },\n\n  resumeRun() {\n    throw EMPTY_THREAD_ERROR;\n  },\n\n  cancelRun() {\n    throw EMPTY_THREAD_ERROR;\n  },\n\n  addToolResult() {\n    throw EMPTY_THREAD_ERROR;\n  },\n\n  speak() {\n    throw EMPTY_THREAD_ERROR;\n  },\n\n  stopSpeaking() {\n    throw EMPTY_THREAD_ERROR;\n  },\n\n  getSubmittedFeedback() {\n    return undefined;\n  },\n\n  submitFeedback() {\n    throw EMPTY_THREAD_ERROR;\n  },\n\n  getModelContext() {\n    return {};\n  },\n\n  composer: {\n    attachments: [],\n\n    getAttachmentAccept() {\n      return \"*\";\n    },\n\n    async addAttachment() {\n      throw EMPTY_THREAD_ERROR;\n    },\n\n    async removeAttachment() {\n      throw EMPTY_THREAD_ERROR;\n    },\n\n    isEditing: false,\n\n    canCancel: false,\n    isEmpty: true,\n\n    text: \"\",\n\n    setText() {\n      throw EMPTY_THREAD_ERROR;\n    },\n\n    role: \"user\",\n\n    setRole() {\n      throw EMPTY_THREAD_ERROR;\n    },\n\n    runConfig: {},\n\n    setRunConfig() {\n      throw EMPTY_THREAD_ERROR;\n    },\n\n    async reset() {\n      // noop\n    },\n\n    async clearAttachments() {\n      // noop\n    },\n\n    send() {\n      throw EMPTY_THREAD_ERROR;\n    },\n\n    cancel() {\n      // noop\n    },\n\n    subscribe() {\n      return () => {};\n    },\n\n    unstable_on() {\n      return () => {};\n    },\n  },\n\n  getEditComposer() {\n    return undefined;\n  },\n\n  beginEdit() {\n    throw EMPTY_THREAD_ERROR;\n  },\n\n  speech: undefined,\n\n  capabilities: {\n    switchToBranch: false,\n    edit: false,\n    reload: false,\n    cancel: false,\n    unstable_copy: false,\n    speech: false,\n    attachments: false,\n    feedback: false,\n  },\n\n  isDisabled: true,\n\n  messages: [],\n\n  state: null,\n\n  suggestions: [],\n\n  extras: undefined,\n\n  subscribe() {\n    return () => {};\n  },\n\n  import() {\n    throw EMPTY_THREAD_ERROR;\n  },\n\n  export() {\n    return { messages: [] };\n  },\n\n  unstable_on() {\n    return () => {};\n  },\n};\n"],"names":[],"mappings":";;;;AAEA,IAAM,qBAAqB,IAAI,MAC7B;AAEK,IAAM,oBAAuC;IAClD,iBAAiB;QACf,OAAO,KAAA;IACT;IAEA,cAAc;QACZ,OAAO,CAAC,CAAA;IACV;IAEA,iBAAiB;QACf,MAAM;IACR;IAEA,SAAS;QACP,MAAM;IACR;IAEA,WAAW;QACT,MAAM;IACR;IAEA,YAAY;QACV,MAAM;IACR;IAEA,YAAY;QACV,MAAM;IACR;IAEA,gBAAgB;QACd,MAAM;IACR;IAEA,QAAQ;QACN,MAAM;IACR;IAEA,eAAe;QACb,MAAM;IACR;IAEA,uBAAuB;QACrB,OAAO,KAAA;IACT;IAEA,iBAAiB;QACf,MAAM;IACR;IAEA,kBAAkB;QAChB,OAAO,CAAC;IACV;IAEA,UAAU;QACR,aAAa,CAAC,CAAA;QAEd,sBAAsB;YACpB,OAAO;QACT;QAEA,MAAM,gBAAgB;YACpB,MAAM;QACR;QAEA,MAAM,mBAAmB;YACvB,MAAM;QACR;QAEA,WAAW;QAEX,WAAW;QACX,SAAS;QAET,MAAM;QAEN,UAAU;YACR,MAAM;QACR;QAEA,MAAM;QAEN,UAAU;YACR,MAAM;QACR;QAEA,WAAW,CAAC;QAEZ,eAAe;YACb,MAAM;QACR;QAEA,MAAM,QAAQ,EAEd;QAEA,MAAM,mBAAmB,EAEzB;QAEA,OAAO;YACL,MAAM;QACR;QAEA,SAAS,EAET;QAEA,YAAY;YACV,OAAO,KAAO,CAAD;QACf;QAEA,cAAc;YACZ,OAAO,KAAO,CAAD;QACf;IACF;IAEA,kBAAkB;QAChB,OAAO,KAAA;IACT;IAEA,YAAY;QACV,MAAM;IACR;IAEA,QAAQ,KAAA;IAER,cAAc;QACZ,gBAAgB;QAChB,MAAM;QACN,QAAQ;QACR,QAAQ;QACR,eAAe;QACf,QAAQ;QACR,aAAa;QACb,UAAU;IACZ;IAEA,YAAY;IAEZ,UAAU,CAAC,CAAA;IAEX,OAAO;IAEP,aAAa,CAAC,CAAA;IAEd,QAAQ,KAAA;IAER,YAAY;QACV,OAAO,KAAO,CAAD;IACf;IAEA,SAAS;QACP,MAAM;IACR;IAEA,SAAS;QACP,OAAO;YAAE,UAAU,CAAC,CAAA;QAAE;IACxB;IAEA,cAAc;QACZ,OAAO,KAAO,CAAD;IACf;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4008, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/runtimes/remote-thread-list/OptimisticState.ts"],"sourcesContent":["import { BaseSubscribable } from \"./BaseSubscribable\";\n\ntype Transform<TState, TResult> = {\n  execute: () => Promise<TResult>;\n\n  /** transform the state after the promise resolves */\n  then?: (state: TState, result: TResult) => TState;\n\n  /** transform the state during resolution and afterwards */\n  optimistic?: (state: TState) => TState;\n\n  /** transform the state only while loading */\n  loading?: (state: TState, task: Promise<TResult>) => TState;\n};\n\ntype PendingTransform<TState, TResult> = Transform<TState, TResult> & {\n  task: Promise<TResult>;\n};\n\nconst pipeTransforms = <TState, TExtra>(\n  initialState: TState,\n  extraParam: TExtra,\n  transforms: (((state: TState, extra: TExtra) => TState) | undefined)[],\n): TState => {\n  return transforms.reduce((state, transform) => {\n    return transform?.(state, extraParam) ?? state;\n  }, initialState);\n};\n\nexport class OptimisticState<TState> extends BaseSubscribable {\n  private readonly _pendingTransforms: Array<PendingTransform<TState, any>> =\n    [];\n  private _baseValue: TState;\n  private _cachedValue: TState;\n\n  public constructor(initialState: TState) {\n    super();\n    this._baseValue = initialState;\n    this._cachedValue = initialState;\n  }\n\n  private _updateState(): void {\n    this._cachedValue = this._pendingTransforms.reduce((state, transform) => {\n      return pipeTransforms(state, transform.task, [\n        transform.loading,\n        transform.optimistic,\n      ]);\n    }, this._baseValue);\n\n    this._notifySubscribers();\n  }\n\n  public get baseValue(): TState {\n    return this._baseValue;\n  }\n\n  public get value(): TState {\n    return this._cachedValue;\n  }\n\n  public update(state: TState): void {\n    this._baseValue = state;\n    this._updateState();\n  }\n\n  public async optimisticUpdate<TResult>(\n    transform: Transform<TState, TResult>,\n  ): Promise<TResult> {\n    const task = transform.execute();\n    const pendingTransform = { ...transform, task };\n    try {\n      this._pendingTransforms.push(pendingTransform);\n      this._updateState();\n\n      const result = await task;\n      this._baseValue = pipeTransforms(this._baseValue, result, [\n        transform.optimistic,\n        transform.then,\n      ]);\n      return result;\n    } finally {\n      const index = this._pendingTransforms.indexOf(pendingTransform);\n      if (index > -1) {\n        this._pendingTransforms.splice(index, 1);\n      }\n      this._updateState();\n    }\n  }\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,wBAAwB;;AAmBjC,IAAM,iBAAiB,CACrB,cACA,YACA,eACW;IACX,OAAO,WAAW,MAAA,CAAO,CAAC,OAAO,cAAc;QAC7C,OAAO,YAAY,OAAO,UAAU,KAAK;IAC3C,GAAG,YAAY;AACjB;AAEO,IAAM,kBAAN,6NAAsC,mBAAA,CAAiB;IAC3C,qBACf,CAAC,CAAA,CAAA;IACK,WAAA;IACA,aAAA;IAED,YAAY,YAAA,CAAsB;QACvC,KAAA,CAAM;QACN,IAAA,CAAK,UAAA,GAAa;QAClB,IAAA,CAAK,YAAA,GAAe;IACtB;IAEQ,eAAqB;QAC3B,IAAA,CAAK,YAAA,GAAe,IAAA,CAAK,kBAAA,CAAmB,MAAA,CAAO,CAAC,OAAO,cAAc;YACvE,OAAO,eAAe,OAAO,UAAU,IAAA,EAAM;gBAC3C,UAAU,OAAA;gBACV,UAAU,UAAA;aACX;QACH,GAAG,IAAA,CAAK,UAAU;QAElB,IAAA,CAAK,kBAAA,CAAmB;IAC1B;IAEA,IAAW,YAAoB;QAC7B,OAAO,IAAA,CAAK,UAAA;IACd;IAEA,IAAW,QAAgB;QACzB,OAAO,IAAA,CAAK,YAAA;IACd;IAEO,OAAO,KAAA,EAAqB;QACjC,IAAA,CAAK,UAAA,GAAa;QAClB,IAAA,CAAK,YAAA,CAAa;IACpB;IAEA,MAAa,iBACX,SAAA,EACkB;QAClB,MAAM,OAAO,UAAU,OAAA,CAAQ;QAC/B,MAAM,mBAAmB;YAAE,GAAG,SAAA;YAAW;QAAK;QAC9C,IAAI;YACF,IAAA,CAAK,kBAAA,CAAmB,IAAA,CAAK,gBAAgB;YAC7C,IAAA,CAAK,YAAA,CAAa;YAElB,MAAM,SAAS,MAAM;YACrB,IAAA,CAAK,UAAA,GAAa,eAAe,IAAA,CAAK,UAAA,EAAY,QAAQ;gBACxD,UAAU,UAAA;gBACV,UAAU,IAAA;aACX;YACD,OAAO;QACT,SAAE;YACA,MAAM,QAAQ,IAAA,CAAK,kBAAA,CAAmB,OAAA,CAAQ,gBAAgB;YAC9D,IAAI,QAAQ,CAAA,GAAI;gBACd,IAAA,CAAK,kBAAA,CAAmB,MAAA,CAAO,OAAO,CAAC;YACzC;YACA,IAAA,CAAK,YAAA,CAAa;QACpB;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4079, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/runtimes/remote-thread-list/RemoteThreadListThreadListRuntimeCore.tsx"],"sourcesContent":["\"use client\";\n\nimport { ThreadListRuntimeCore } from \"../core/ThreadListRuntimeCore\";\nimport { generateId } from \"../../internal\";\nimport {\n  RemoteThreadInitializeResponse,\n  RemoteThreadListOptions,\n} from \"./types\";\nimport { RemoteThreadListHookInstanceManager } from \"./RemoteThreadListHookInstanceManager\";\nimport { BaseSubscribable } from \"./BaseSubscribable\";\nimport { EMPTY_THREAD_CORE } from \"./EMPTY_THREAD_CORE\";\nimport { OptimisticState } from \"./OptimisticState\";\nimport { FC, Fragment, useEffect, useId } from \"react\";\nimport { create } from \"zustand\";\nimport { AssistantMessageStream } from \"assistant-stream\";\nimport { ModelContextProvider } from \"../../model-context\";\nimport { RuntimeAdapterProvider } from \"../adapters/RuntimeAdapterProvider\";\n\ntype RemoteThreadData =\n  | {\n      readonly threadId: string;\n      readonly remoteId?: undefined;\n      readonly externalId?: undefined;\n      readonly status: \"new\";\n      readonly title: undefined;\n    }\n  | {\n      readonly threadId: string;\n      readonly initializeTask: Promise<RemoteThreadInitializeResponse>;\n      readonly remoteId?: undefined;\n      readonly externalId?: undefined;\n      readonly status: \"regular\" | \"archived\";\n      readonly title?: string | undefined;\n    }\n  | {\n      readonly threadId: string;\n      readonly initializeTask: Promise<RemoteThreadInitializeResponse>;\n      readonly remoteId: string;\n      readonly externalId: string | undefined;\n      readonly status: \"regular\" | \"archived\";\n      readonly title?: string | undefined;\n    };\n\ntype THREAD_MAPPING_ID = string & { __brand: \"THREAD_MAPPING_ID\" };\nfunction createThreadMappingId(id: string): THREAD_MAPPING_ID {\n  return id as THREAD_MAPPING_ID;\n}\n\ntype RemoteThreadState = {\n  readonly isLoading: boolean;\n  readonly newThreadId: string | undefined;\n  readonly threadIds: readonly string[];\n  readonly archivedThreadIds: readonly string[];\n  readonly threadIdMap: Readonly<Record<string, THREAD_MAPPING_ID>>;\n  readonly threadData: Readonly<Record<THREAD_MAPPING_ID, RemoteThreadData>>;\n};\n\nconst getThreadData = (\n  state: RemoteThreadState,\n  threadIdOrRemoteId: string,\n) => {\n  const idx = state.threadIdMap[threadIdOrRemoteId];\n  if (idx === undefined) return undefined;\n  return state.threadData[idx];\n};\n\nconst updateStatusReducer = (\n  state: RemoteThreadState,\n  threadIdOrRemoteId: string,\n  newStatus: \"regular\" | \"archived\" | \"deleted\",\n) => {\n  const data = getThreadData(state, threadIdOrRemoteId);\n  if (!data) return state;\n\n  const { threadId, remoteId, status: lastStatus } = data;\n  if (lastStatus === newStatus) return state;\n\n  const newState = { ...state };\n\n  // lastStatus\n  switch (lastStatus) {\n    case \"new\":\n      newState.newThreadId = undefined;\n      break;\n    case \"regular\":\n      newState.threadIds = newState.threadIds.filter((t) => t !== threadId);\n      break;\n    case \"archived\":\n      newState.archivedThreadIds = newState.archivedThreadIds.filter(\n        (t) => t !== threadId,\n      );\n      break;\n\n    default: {\n      const _exhaustiveCheck: never = lastStatus;\n      throw new Error(`Unsupported state: ${_exhaustiveCheck}`);\n    }\n  }\n\n  // newStatus\n  switch (newStatus) {\n    case \"regular\":\n      newState.threadIds = [threadId, ...newState.threadIds];\n      break;\n\n    case \"archived\":\n      newState.archivedThreadIds = [threadId, ...newState.archivedThreadIds];\n      break;\n\n    case \"deleted\":\n      newState.threadData = Object.fromEntries(\n        Object.entries(newState.threadData).filter(([key]) => key !== threadId),\n      );\n      newState.threadIdMap = Object.fromEntries(\n        Object.entries(newState.threadIdMap).filter(\n          ([key]) => key !== threadId && key !== remoteId,\n        ),\n      );\n      break;\n\n    default: {\n      const _exhaustiveCheck: never = newStatus;\n      throw new Error(`Unsupported state: ${_exhaustiveCheck}`);\n    }\n  }\n\n  if (newStatus !== \"deleted\") {\n    newState.threadData = {\n      ...newState.threadData,\n      [threadId]: {\n        ...data,\n        status: newStatus,\n      },\n    };\n  }\n\n  return newState;\n};\n\nexport class RemoteThreadListThreadListRuntimeCore\n  extends BaseSubscribable\n  implements ThreadListRuntimeCore\n{\n  private _options!: RemoteThreadListOptions;\n  private readonly _hookManager: RemoteThreadListHookInstanceManager;\n\n  private _loadThreadsPromise: Promise<void> | undefined;\n\n  private _mainThreadId!: string;\n  private readonly _state = new OptimisticState<RemoteThreadState>({\n    isLoading: false,\n    newThreadId: undefined,\n    threadIds: [],\n    archivedThreadIds: [],\n    threadIdMap: {},\n    threadData: {},\n  });\n\n  public getLoadThreadsPromise() {\n    // TODO this needs to be cached in case this promise is loaded during suspense\n    if (!this._loadThreadsPromise) {\n      this._loadThreadsPromise = this._state\n        .optimisticUpdate({\n          execute: () => this._options.adapter.list(),\n          loading: (state) => {\n            return {\n              ...state,\n              isLoading: true,\n            };\n          },\n          then: (state, l) => {\n            const newThreadIds = [];\n            const newArchivedThreadIds = [];\n            const newThreadIdMap = {} as Record<string, THREAD_MAPPING_ID>;\n            const newThreadData = {} as Record<\n              THREAD_MAPPING_ID,\n              RemoteThreadData\n            >;\n\n            for (const thread of l.threads) {\n              switch (thread.status) {\n                case \"regular\":\n                  newThreadIds.push(thread.remoteId);\n                  break;\n                case \"archived\":\n                  newArchivedThreadIds.push(thread.remoteId);\n                  break;\n                default: {\n                  const _exhaustiveCheck: never = thread.status;\n                  throw new Error(`Unsupported state: ${_exhaustiveCheck}`);\n                }\n              }\n\n              const mappingId = createThreadMappingId(thread.remoteId);\n              newThreadIdMap[thread.remoteId] = mappingId;\n              newThreadData[mappingId] = {\n                threadId: thread.remoteId,\n                remoteId: thread.remoteId,\n                externalId: thread.externalId,\n                status: thread.status,\n                title: thread.title,\n                initializeTask: Promise.resolve({\n                  remoteId: thread.remoteId,\n                  externalId: thread.externalId,\n                }),\n              };\n            }\n\n            return {\n              ...state,\n              threadIds: newThreadIds,\n              archivedThreadIds: newArchivedThreadIds,\n              threadIdMap: {\n                ...state.threadIdMap,\n                ...newThreadIdMap,\n              },\n              threadData: {\n                ...state.threadData,\n                ...newThreadData,\n              },\n            };\n          },\n        })\n        .then(() => {});\n    }\n\n    return this._loadThreadsPromise;\n  }\n\n  constructor(\n    options: RemoteThreadListOptions,\n    private readonly contextProvider: ModelContextProvider,\n  ) {\n    super();\n\n    this._state.subscribe(() => this._notifySubscribers());\n    this._hookManager = new RemoteThreadListHookInstanceManager(\n      options.runtimeHook,\n    );\n    this.useProvider = create(() => ({\n      Provider: options.adapter.unstable_Provider ?? Fragment,\n    }));\n    this.__internal_setOptions(options);\n\n    this.switchToNewThread();\n  }\n\n  private useProvider;\n\n  public __internal_setOptions(options: RemoteThreadListOptions) {\n    if (this._options === options) return;\n\n    this._options = options;\n\n    const Provider = options.adapter.unstable_Provider ?? Fragment;\n    if (Provider !== this.useProvider.getState().Provider) {\n      this.useProvider.setState({ Provider }, true);\n    }\n\n    this._hookManager.setRuntimeHook(options.runtimeHook);\n  }\n\n  public __internal_load() {\n    this.getLoadThreadsPromise(); // begin loading on initial bind\n  }\n\n  public get threadIds() {\n    return this._state.value.threadIds;\n  }\n\n  public get archivedThreadIds() {\n    return this._state.value.archivedThreadIds;\n  }\n\n  public get newThreadId() {\n    return this._state.value.newThreadId;\n  }\n\n  public get mainThreadId(): string {\n    return this._mainThreadId;\n  }\n\n  public getMainThreadRuntimeCore() {\n    const result = this._hookManager.getThreadRuntimeCore(this._mainThreadId);\n    if (!result) return EMPTY_THREAD_CORE;\n    return result;\n  }\n\n  public getThreadRuntimeCore(threadIdOrRemoteId: string) {\n    const data = this.getItemById(threadIdOrRemoteId);\n    if (!data) throw new Error(\"Thread not found\");\n\n    const result = this._hookManager.getThreadRuntimeCore(data.threadId);\n    if (!result) throw new Error(\"Thread not found\");\n    return result;\n  }\n\n  public getItemById(threadIdOrRemoteId: string) {\n    return getThreadData(this._state.value, threadIdOrRemoteId);\n  }\n\n  public async switchToThread(threadIdOrRemoteId: string): Promise<void> {\n    const data = this.getItemById(threadIdOrRemoteId);\n    if (!data) throw new Error(\"Thread not found\");\n\n    if (this._mainThreadId === data.threadId) return;\n\n    const task = this._hookManager.startThreadRuntime(data.threadId);\n    if (this.mainThreadId !== undefined) {\n      await task;\n    } else {\n      task.then(() => this._notifySubscribers());\n    }\n\n    if (data.status === \"archived\") await this.unarchive(data.threadId);\n    this._mainThreadId = data.threadId;\n\n    this._notifySubscribers();\n  }\n\n  public async switchToNewThread(): Promise<void> {\n    // an initialization transaction is in progress, wait for it to settle\n    while (\n      this._state.baseValue.newThreadId !== undefined &&\n      this._state.value.newThreadId === undefined\n    ) {\n      await this._state.waitForUpdate();\n    }\n\n    const state = this._state.value;\n    let threadId: string | undefined = this._state.value.newThreadId;\n    if (threadId === undefined) {\n      do {\n        threadId = `__LOCALID_${generateId()}`;\n      } while (state.threadIdMap[threadId]);\n\n      const mappingId = createThreadMappingId(threadId);\n      this._state.update({\n        ...state,\n        newThreadId: threadId,\n        threadIdMap: {\n          ...state.threadIdMap,\n          [threadId]: mappingId,\n        },\n        threadData: {\n          ...state.threadData,\n          [threadId]: {\n            status: \"new\",\n            threadId,\n          },\n        },\n      });\n    }\n\n    return this.switchToThread(threadId);\n  }\n\n  public initialize = async (threadId: string) => {\n    if (this._state.value.newThreadId !== threadId) {\n      const data = this.getItemById(threadId);\n      if (!data) throw new Error(\"Thread not found\");\n      if (data.status === \"new\") throw new Error(\"Unexpected new state\");\n      return data.initializeTask;\n    }\n\n    return this._state.optimisticUpdate({\n      execute: () => {\n        return this._options.adapter.initialize(threadId);\n      },\n      optimistic: (state) => {\n        return updateStatusReducer(state, threadId, \"regular\");\n      },\n      loading: (state, task) => {\n        const mappingId = createThreadMappingId(threadId);\n        return {\n          ...state,\n          threadData: {\n            ...state.threadData,\n            [mappingId]: {\n              ...state.threadData[mappingId],\n              initializeTask: task,\n            },\n          },\n        };\n      },\n      then: (state, { remoteId, externalId }) => {\n        const data = getThreadData(state, threadId);\n        if (!data) return state;\n\n        const mappingId = createThreadMappingId(threadId);\n        return {\n          ...state,\n          threadIdMap: {\n            ...state.threadIdMap,\n            [remoteId]: mappingId,\n          },\n          threadData: {\n            ...state.threadData,\n            [mappingId]: {\n              ...data,\n              initializeTask: Promise.resolve({ remoteId, externalId }),\n              remoteId,\n              externalId,\n            },\n          },\n        };\n      },\n    });\n  };\n\n  public generateTitle = async (threadId: string) => {\n    const data = this.getItemById(threadId);\n    if (!data) throw new Error(\"Thread not found\");\n    if (data.status === \"new\") throw new Error(\"Thread is not yet initialized\");\n\n    const { remoteId } = await data.initializeTask;\n    const messages = this.getThreadRuntimeCore(threadId).messages;\n    const stream = await this._options.adapter.generateTitle(\n      remoteId,\n      messages,\n    );\n    const messageStream = AssistantMessageStream.fromAssistantStream(stream);\n    for await (const result of messageStream) {\n      const newTitle = result.parts.filter((c) => c.type === \"text\")[0]?.text;\n      const state = this._state.baseValue;\n      this._state.update({\n        ...state,\n        threadData: {\n          ...state.threadData,\n          [data.threadId]: {\n            ...data,\n            title: newTitle,\n          },\n        },\n      });\n    }\n  };\n\n  public rename(threadIdOrRemoteId: string, newTitle: string): Promise<void> {\n    const data = this.getItemById(threadIdOrRemoteId);\n    if (!data) throw new Error(\"Thread not found\");\n    if (data.status === \"new\") throw new Error(\"Thread is not yet initialized\");\n\n    return this._state.optimisticUpdate({\n      execute: async () => {\n        const { remoteId } = await data.initializeTask;\n        return this._options.adapter.rename(remoteId, newTitle);\n      },\n      optimistic: (state) => {\n        const data = getThreadData(state, threadIdOrRemoteId);\n        if (!data) return state;\n\n        return {\n          ...state,\n          threadData: {\n            ...state.threadData,\n            [data.threadId]: {\n              ...data,\n              title: newTitle,\n            },\n          },\n        };\n      },\n    });\n  }\n\n  private async _ensureThreadIsNotMain(threadId: string) {\n    if (threadId === this.newThreadId)\n      throw new Error(\"Cannot ensure new thread is not main\");\n\n    if (threadId === this._mainThreadId) {\n      await this.switchToNewThread();\n    }\n  }\n\n  public async archive(threadIdOrRemoteId: string) {\n    const data = this.getItemById(threadIdOrRemoteId);\n    if (!data) throw new Error(\"Thread not found\");\n    if (data.status !== \"regular\")\n      throw new Error(\"Thread is not yet initialized or already archived\");\n\n    return this._state.optimisticUpdate({\n      execute: async () => {\n        await this._ensureThreadIsNotMain(data.threadId);\n        const { remoteId } = await data.initializeTask;\n        return this._options.adapter.archive(remoteId);\n      },\n      optimistic: (state) => {\n        return updateStatusReducer(state, data.threadId, \"archived\");\n      },\n    });\n  }\n\n  public unarchive(threadIdOrRemoteId: string): Promise<void> {\n    const data = this.getItemById(threadIdOrRemoteId);\n    if (!data) throw new Error(\"Thread not found\");\n    if (data.status !== \"archived\") throw new Error(\"Thread is not archived\");\n\n    return this._state.optimisticUpdate({\n      execute: async () => {\n        try {\n          const { remoteId } = await data.initializeTask;\n          return await this._options.adapter.unarchive(remoteId);\n        } catch (error) {\n          await this._ensureThreadIsNotMain(data.threadId);\n          throw error;\n        }\n      },\n      optimistic: (state) => {\n        return updateStatusReducer(state, data.threadId, \"regular\");\n      },\n    });\n  }\n\n  public async delete(threadIdOrRemoteId: string) {\n    const data = this.getItemById(threadIdOrRemoteId);\n    if (!data) throw new Error(\"Thread not found\");\n    if (data.status !== \"regular\" && data.status !== \"archived\")\n      throw new Error(\"Thread is not yet initialized\");\n\n    return this._state.optimisticUpdate({\n      execute: async () => {\n        await this._ensureThreadIsNotMain(data.threadId);\n        const { remoteId } = await data.initializeTask;\n        return await this._options.adapter.delete(remoteId);\n      },\n      optimistic: (state) => {\n        return updateStatusReducer(state, data.threadId, \"deleted\");\n      },\n    });\n  }\n\n  public async detach(threadIdOrRemoteId: string): Promise<void> {\n    const data = this.getItemById(threadIdOrRemoteId);\n    if (!data) throw new Error(\"Thread not found\");\n    if (data.status !== \"regular\" && data.status !== \"archived\")\n      throw new Error(\"Thread is not yet initialized\");\n\n    await this._ensureThreadIsNotMain(data.threadId);\n    this._hookManager.stopThreadRuntime(data.threadId);\n  }\n\n  private useBoundIds = create<string[]>(() => []);\n\n  public __internal_RenderComponent: FC = () => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const id = useId();\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      this.useBoundIds.setState((s) => [...s, id], true);\n      return () => {\n        this.useBoundIds.setState((s) => s.filter((i) => i !== id), true);\n      };\n    }, [id]);\n\n    const boundIds = this.useBoundIds();\n    const { Provider } = this.useProvider();\n\n    const adapters = {\n      modelContext: this.contextProvider,\n    };\n\n    return (\n      (boundIds.length === 0 || boundIds[0] === id) && (\n        // only render if the component is the first one mounted\n        <RuntimeAdapterProvider adapters={adapters}>\n          <this._hookManager.__internal_RenderThreadRuntimes\n            provider={Provider}\n          />\n        </RuntimeAdapterProvider>\n      )\n    );\n  };\n}\n"],"names":["data"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4539, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/runtimes/remote-thread-list/useRemoteThreadListRuntime.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useMemo } from \"react\";\nimport { BaseAssistantRuntimeCore } from \"../core/BaseAssistantRuntimeCore\";\nimport { RemoteThreadListThreadListRuntimeCore } from \"./RemoteThreadListThreadListRuntimeCore\";\nimport { RemoteThreadListOptions } from \"./types\";\nimport { AssistantRuntimeImpl } from \"../../internal\";\nimport { AssistantRuntimeCore } from \"../core/AssistantRuntimeCore\";\n\nclass RemoteThreadListRuntimeCore\n  extends BaseAssistantRuntimeCore\n  implements AssistantRuntimeCore\n{\n  public readonly threads;\n\n  constructor(options: RemoteThreadListOptions) {\n    super();\n    this.threads = new RemoteThreadListThreadListRuntimeCore(\n      options,\n      this._contextProvider,\n    );\n  }\n\n  public get RenderComponent() {\n    return this.threads.__internal_RenderComponent;\n  }\n}\n\nexport const useRemoteThreadListRuntime = (\n  options: RemoteThreadListOptions,\n) => {\n  const [runtime] = useState(() => new RemoteThreadListRuntimeCore(options));\n  useEffect(() => {\n    runtime.threads.__internal_setOptions(options);\n    runtime.threads.__internal_load();\n  }, [runtime, options]);\n  return useMemo(() => new AssistantRuntimeImpl(runtime), [runtime]);\n};\n"],"names":[],"mappings":";;;;AAEA,SAAS,UAAU,WAAW,eAAe;AAC7C,SAAS,gCAAgC;AACzC,SAAS,6CAA6C;AAEtD,SAAS,4BAA4B;;;;;;AAGrC,IAAM,8BAAN,iNACU,2BAAA,CAEV;IACkB,QAAA;IAEhB,YAAY,OAAA,CAAkC;QAC5C,KAAA,CAAM;QACN,IAAA,CAAK,OAAA,GAAU,uOAAI,yCAAA,CACjB,SACA,IAAA,CAAK,gBAAA;IAET;IAEA,IAAW,kBAAkB;QAC3B,OAAO,IAAA,CAAK,OAAA,CAAQ,0BAAA;IACtB;AACF;AAEO,IAAM,6BAA6B,CACxC,YACG;IACH,MAAM,CAAC,OAAO,CAAA,IAAI,oNAAA,EAAS,IAAM,IAAI,4BAA4B,OAAO,CAAC;IACzE,CAAA,GAAA,qMAAA,CAAA,YAAA,EAAU,MAAM;QACd,QAAQ,OAAA,CAAQ,qBAAA,CAAsB,OAAO;QAC7C,QAAQ,OAAA,CAAQ,eAAA,CAAgB;IAClC,GAAG;QAAC;QAAS,OAAO;KAAC;IACrB,iNAAO,UAAA,EAAQ,IAAM,kLAAI,uBAAA,CAAqB,OAAO,GAAG;QAAC,OAAO;KAAC;AACnE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4583, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/cloud/AssistantCloudAuthStrategy.tsx"],"sourcesContent":["export type AssistantCloudAuthStrategy = {\n  readonly strategy: \"anon\" | \"jwt\" | \"api-key\";\n  getAuthHeaders(): Promise<Record<string, string> | false>;\n  readAuthHeaders(headers: Headers): void;\n};\n\nconst getJwtExpiry = (jwt: string): number => {\n  try {\n    const parts = jwt.split(\".\");\n    const bodyPart = parts[1];\n    if (!bodyPart) {\n      throw new Error(\"Invalid JWT format\");\n    }\n\n    // Convert from Base64Url to Base64 and add padding if necessary\n    let base64 = bodyPart.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    while (base64.length % 4 !== 0) {\n      base64 += \"=\";\n    }\n\n    // Decode the Base64 string and parse the payload\n    const payload = atob(base64);\n    const payloadObj = JSON.parse(payload);\n    const exp = payloadObj.exp;\n\n    if (!exp || typeof exp !== \"number\") {\n      throw new Error('JWT does not contain a valid \"exp\" field');\n    }\n\n    // Convert expiration time to milliseconds\n    return exp * 1000;\n  } catch (error) {\n    throw new Error(\"Unable to determine the token expiry: \" + error);\n  }\n};\n\nexport class AssistantCloudJWTAuthStrategy\n  implements AssistantCloudAuthStrategy\n{\n  public readonly strategy = \"jwt\";\n\n  private cachedToken: string | null = null;\n  private tokenExpiry: number | null = null;\n  #authTokenCallback: () => Promise<string | null>;\n\n  constructor(authTokenCallback: () => Promise<string | null>) {\n    this.#authTokenCallback = authTokenCallback;\n  }\n\n  public async getAuthHeaders(): Promise<Record<string, string> | false> {\n    const currentTime = Date.now();\n\n    // Use cached token if it's valid for at least 30 more seconds\n    if (\n      this.cachedToken &&\n      this.tokenExpiry &&\n      this.tokenExpiry - currentTime > 30 * 1000\n    ) {\n      return { Authorization: `Bearer ${this.cachedToken}` };\n    }\n\n    // Fetch a new token via the callback\n    const newToken = await this.#authTokenCallback();\n    if (!newToken) return false;\n\n    this.cachedToken = newToken;\n    this.tokenExpiry = getJwtExpiry(newToken);\n\n    return { Authorization: `Bearer ${newToken}` };\n  }\n\n  public readAuthHeaders(headers: Headers) {\n    const authHeader = headers.get(\"Authorization\");\n    if (!authHeader) return;\n\n    const [scheme, token] = authHeader.split(\" \");\n    if (scheme !== \"Bearer\" || !token) {\n      throw new Error(\"Invalid auth header received\");\n    }\n\n    this.cachedToken = token;\n    this.tokenExpiry = getJwtExpiry(token);\n  }\n}\n\nexport class AssistantCloudAPIKeyAuthStrategy\n  implements AssistantCloudAuthStrategy\n{\n  public readonly strategy = \"api-key\";\n\n  #apiKey: string;\n  #userId: string;\n  #workspaceId: string;\n\n  constructor(apiKey: string, userId: string, workspaceId: string) {\n    this.#apiKey = apiKey;\n    this.#userId = userId;\n    this.#workspaceId = workspaceId;\n  }\n\n  public async getAuthHeaders(): Promise<Record<string, string>> {\n    return {\n      Authorization: `Bearer ${this.#apiKey}`,\n      \"Aui-User-Id\": this.#userId,\n      \"Aui-Workspace-Id\": this.#workspaceId,\n    };\n  }\n\n  public readAuthHeaders() {\n    // No operation needed for API key auth\n  }\n}\n\nconst AUI_REFRESH_TOKEN_NAME = \"aui:refresh_token\";\n\nexport class AssistantCloudAnonymousAuthStrategy\n  implements AssistantCloudAuthStrategy\n{\n  public readonly strategy = \"anon\";\n\n  private baseUrl: string;\n  private jwtStrategy: AssistantCloudJWTAuthStrategy;\n\n  constructor(baseUrl: string) {\n    this.baseUrl = baseUrl;\n    this.jwtStrategy = new AssistantCloudJWTAuthStrategy(async () => {\n      const currentTime = Date.now();\n      const storedRefreshTokenJson = localStorage.getItem(\n        AUI_REFRESH_TOKEN_NAME,\n      );\n      const storedRefreshToken = storedRefreshTokenJson\n        ? (JSON.parse(storedRefreshTokenJson) as {\n            token: string;\n            expires_at: string;\n          })\n        : undefined;\n\n      if (storedRefreshToken) {\n        const refreshExpiry = new Date(storedRefreshToken.expires_at).getTime();\n        if (refreshExpiry - currentTime > 30 * 1000) {\n          const response = await fetch(\n            `${this.baseUrl}/v1/auth/tokens/refresh`,\n            {\n              method: \"POST\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify({ refresh_token: storedRefreshToken.token }),\n            },\n          );\n\n          if (response.ok) {\n            const data = await response.json();\n            const { access_token, refresh_token } = data;\n            if (refresh_token) {\n              localStorage.setItem(\n                AUI_REFRESH_TOKEN_NAME,\n                JSON.stringify(refresh_token),\n              );\n            }\n            return access_token;\n          }\n        } else {\n          localStorage.removeItem(AUI_REFRESH_TOKEN_NAME);\n        }\n      }\n\n      // No valid refresh token; request a new anonymous token\n      const response = await fetch(`${this.baseUrl}/v1/auth/tokens/anonymous`, {\n        method: \"POST\",\n      });\n\n      if (!response.ok) return null;\n\n      const data = await response.json();\n      const { access_token, refresh_token } = data;\n\n      if (!access_token || !refresh_token) return null;\n\n      localStorage.setItem(\n        AUI_REFRESH_TOKEN_NAME,\n        JSON.stringify(refresh_token),\n      );\n      return access_token;\n    });\n  }\n\n  public async getAuthHeaders(): Promise<Record<string, string> | false> {\n    return this.jwtStrategy.getAuthHeaders();\n  }\n\n  public readAuthHeaders(headers: Headers): void {\n    this.jwtStrategy.readAuthHeaders(headers);\n  }\n}\n"],"names":["response","data","access_token","refresh_token"],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4725, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/cloud/AssistantCloudAPI.tsx"],"sourcesContent":["import {\n  AssistantCloudAuthStrategy,\n  AssistantCloudJWTAuthStrategy,\n  AssistantCloudAPIKeyAuthStrategy,\n  AssistantCloudAnonymousAuthStrategy,\n} from \"./AssistantCloudAuthStrategy\";\n\nexport type AssistantCloudConfig =\n  | {\n      baseUrl: string;\n      authToken: () => Promise<string | null>;\n    }\n  | {\n      apiKey: string;\n      userId: string;\n      workspaceId: string;\n    }\n  | {\n      baseUrl: string;\n      anonymous: true;\n    };\n\nclass CloudAPIError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"APIError\";\n  }\n}\n\ntype MakeRequestOptions = {\n  method?: \"POST\" | \"PUT\" | \"DELETE\" | undefined;\n  headers?: Record<string, string> | undefined;\n  query?: Record<string, string | number | boolean> | undefined;\n  body?: object | undefined;\n};\n\nexport class AssistantCloudAPI {\n  public _auth: AssistantCloudAuthStrategy;\n  public _baseUrl;\n\n  constructor(config: AssistantCloudConfig) {\n    if (\"authToken\" in config) {\n      this._baseUrl = config.baseUrl;\n      this._auth = new AssistantCloudJWTAuthStrategy(config.authToken);\n    } else if (\"apiKey\" in config) {\n      this._baseUrl = \"https://backend.assistant-api.com\";\n      this._auth = new AssistantCloudAPIKeyAuthStrategy(\n        config.apiKey,\n        config.userId,\n        config.workspaceId,\n      );\n    } else if (\"anonymous\" in config) {\n      this._baseUrl = config.baseUrl;\n      this._auth = new AssistantCloudAnonymousAuthStrategy(config.baseUrl);\n    } else {\n      throw new Error(\n        \"Invalid configuration: Must provide authToken, apiKey, or anonymous configuration\",\n      );\n    }\n  }\n\n  public async initializeAuth() {\n    return !!this._auth.getAuthHeaders();\n  }\n\n  public async makeRawRequest(\n    endpoint: string,\n    options: MakeRequestOptions = {},\n  ) {\n    const authHeaders = await this._auth.getAuthHeaders();\n    if (!authHeaders) throw new Error(\"Authorization failed\");\n\n    const headers = {\n      ...authHeaders,\n      ...options.headers,\n      \"Content-Type\": \"application/json\",\n    };\n\n    const queryParams = new URLSearchParams();\n    if (options.query) {\n      for (const [key, value] of Object.entries(options.query)) {\n        if (value === false) continue;\n        if (value === true) {\n          queryParams.set(key, \"true\");\n        } else {\n          queryParams.set(key, value.toString());\n        }\n      }\n    }\n\n    const url = new URL(`${this._baseUrl}/v1${endpoint}`);\n    url.search = queryParams.toString();\n\n    const response = await fetch(url, {\n      method: options.method ?? \"GET\",\n      headers,\n      body: options.body ? JSON.stringify(options.body) : null,\n    });\n\n    this._auth.readAuthHeaders(response.headers);\n\n    if (!response.ok) {\n      const text = await response.text();\n      try {\n        const body = JSON.parse(text);\n        throw new CloudAPIError(body.message);\n      } catch {\n        throw new Error(\n          `Request failed with status ${response.status}, ${text}`,\n        );\n      }\n    }\n\n    return response;\n  }\n\n  public async makeRequest(endpoint: string, options: MakeRequestOptions = {}) {\n    const response = await this.makeRawRequest(endpoint, options);\n    return response.json();\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;;AAsBA,IAAM,gBAAN,cAA4B,MAAM;IAChC,YAAY,OAAA,CAAiB;QAC3B,KAAA,CAAM,OAAO;QACb,IAAA,CAAK,IAAA,GAAO;IACd;AACF;AASO,IAAM,oBAAN,MAAwB;IACtB,MAAA;IACA,SAAA;IAEP,YAAY,MAAA,CAA8B;QACxC,IAAI,eAAe,QAAQ;YACzB,IAAA,CAAK,QAAA,GAAW,OAAO,OAAA;YACvB,IAAA,CAAK,KAAA,GAAQ,8LAAI,gCAAA,CAA8B,OAAO,SAAS;QACjE,OAAA,IAAW,YAAY,QAAQ;YAC7B,IAAA,CAAK,QAAA,GAAW;YAChB,IAAA,CAAK,KAAA,GAAQ,8LAAI,mCAAA,CACf,OAAO,MAAA,EACP,OAAO,MAAA,EACP,OAAO,WAAA;QAEX,OAAA,IAAW,eAAe,QAAQ;YAChC,IAAA,CAAK,QAAA,GAAW,OAAO,OAAA;YACvB,IAAA,CAAK,KAAA,GAAQ,8LAAI,sCAAA,CAAoC,OAAO,OAAO;QACrE,OAAO;YACL,MAAM,IAAI,MACR;QAEJ;IACF;IAEA,MAAa,iBAAiB;QAC5B,OAAO,CAAC,CAAC,IAAA,CAAK,KAAA,CAAM,cAAA,CAAe;IACrC;IAEA,MAAa,eACX,QAAA,EACA,UAA8B,CAAC,CAAA,EAC/B;QACA,MAAM,cAAc,MAAM,IAAA,CAAK,KAAA,CAAM,cAAA,CAAe;QACpD,IAAI,CAAC,YAAa,CAAA,MAAM,IAAI,MAAM,sBAAsB;QAExD,MAAM,UAAU;YACd,GAAG,WAAA;YACH,GAAG,QAAQ,OAAA;YACX,gBAAgB;QAClB;QAEA,MAAM,cAAc,IAAI,gBAAgB;QACxC,IAAI,QAAQ,KAAA,EAAO;YACjB,KAAA,MAAW,CAAC,KAAK,KAAK,CAAA,IAAK,OAAO,OAAA,CAAQ,QAAQ,KAAK,EAAG;gBACxD,IAAI,UAAU,MAAO,CAAA;gBACrB,IAAI,UAAU,MAAM;oBAClB,YAAY,GAAA,CAAI,KAAK,MAAM;gBAC7B,OAAO;oBACL,YAAY,GAAA,CAAI,KAAK,MAAM,QAAA,CAAS,CAAC;gBACvC;YACF;QACF;QAEA,MAAM,MAAM,IAAI,IAAI,GAAG,IAAA,CAAK,QAAQ,CAAA,GAAA,EAAM,QAAQ,EAAE;QACpD,IAAI,MAAA,GAAS,YAAY,QAAA,CAAS;QAElC,MAAM,WAAW,MAAM,MAAM,KAAK;YAChC,QAAQ,QAAQ,MAAA,IAAU;YAC1B;YACA,MAAM,QAAQ,IAAA,GAAO,KAAK,SAAA,CAAU,QAAQ,IAAI,IAAI;QACtD,CAAC;QAED,IAAA,CAAK,KAAA,CAAM,eAAA,CAAgB,SAAS,OAAO;QAE3C,IAAI,CAAC,SAAS,EAAA,EAAI;YAChB,MAAM,OAAO,MAAM,SAAS,IAAA,CAAK;YACjC,IAAI;gBACF,MAAM,OAAO,KAAK,KAAA,CAAM,IAAI;gBAC5B,MAAM,IAAI,cAAc,KAAK,OAAO;YACtC,EAAA,OAAQ;gBACN,MAAM,IAAI,MACR,CAAA,2BAAA,EAA8B,SAAS,MAAM,CAAA,EAAA,EAAK,IAAI,EAAA;YAE1D;QACF;QAEA,OAAO;IACT;IAEA,MAAa,YAAY,QAAA,EAAkB,UAA8B,CAAC,CAAA,EAAG;QAC3E,MAAM,WAAW,MAAM,IAAA,CAAK,cAAA,CAAe,UAAU,OAAO;QAC5D,OAAO,SAAS,IAAA,CAAK;IACvB;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4808, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/cloud/AssistantCloudAuthTokens.tsx"],"sourcesContent":["import { AssistantCloudAPI } from \"./AssistantCloudAPI\";\n\ntype AssistantCloudAuthTokensCreateResponse = {\n  token: string;\n};\n\nexport class AssistantCloudAuthTokens {\n  constructor(private cloud: AssistantCloudAPI) {}\n\n  public async create(): Promise<AssistantCloudAuthTokensCreateResponse> {\n    return this.cloud.makeRequest(\"/auth/tokens\", { method: \"POST\" });\n  }\n}\n"],"names":[],"mappings":";;;;AAMO,IAAM,2BAAN,MAA+B;IACpC,YAAoB,KAAA,CAA0B;QAA1B,IAAA,CAAA,KAAA,GAAA;IAA2B;IAE/C,MAAa,SAA0D;QACrE,OAAO,IAAA,CAAK,KAAA,CAAM,WAAA,CAAY,gBAAgB;YAAE,QAAQ;QAAO,CAAC;IAClE;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4830, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/cloud/AssistantCloudRuns.tsx"],"sourcesContent":["import { ThreadMessage } from \"../types\";\nimport { AssistantCloudAPI } from \"./AssistantCloudAPI\";\nimport { AssistantStream, PlainTextDecoder } from \"assistant-stream\";\n\ntype AssistantCloudRunsStreamBody = {\n  thread_id: string;\n  assistant_id: \"system/thread_title\";\n  messages: readonly ThreadMessage[];\n};\n\nexport class AssistantCloudRuns {\n  constructor(private cloud: AssistantCloudAPI) {}\n\n  public __internal_getAssistantOptions(assistantId: string) {\n    return {\n      api: this.cloud._baseUrl + \"/v1/runs/stream\",\n      headers: async () => {\n        const headers = await this.cloud._auth.getAuthHeaders();\n        if (!headers) throw new Error(\"Authorization failed\");\n        return {\n          ...headers,\n          Accept: \"text/plain\",\n        };\n      },\n      body: {\n        assistant_id: assistantId,\n        response_format: \"vercel-ai-data-stream/v1\",\n        thread_id: \"unstable_todo\",\n      },\n    };\n  }\n\n  public async stream(\n    body: AssistantCloudRunsStreamBody,\n  ): Promise<AssistantStream> {\n    const response = await this.cloud.makeRawRequest(\"/runs/stream\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"text/plain\",\n      },\n      body,\n    });\n    return AssistantStream.fromResponse(response, new PlainTextDecoder());\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA,SAAS,iBAAiB,wBAAwB;;AAQ3C,IAAM,qBAAN,MAAyB;IAC9B,YAAoB,KAAA,CAA0B;QAA1B,IAAA,CAAA,KAAA,GAAA;IAA2B;IAExC,+BAA+B,WAAA,EAAqB;QACzD,OAAO;YACL,KAAK,IAAA,CAAK,KAAA,CAAM,QAAA,GAAW;YAC3B,SAAS,YAAY;gBACnB,MAAM,UAAU,MAAM,IAAA,CAAK,KAAA,CAAM,KAAA,CAAM,cAAA,CAAe;gBACtD,IAAI,CAAC,QAAS,CAAA,MAAM,IAAI,MAAM,sBAAsB;gBACpD,OAAO;oBACL,GAAG,OAAA;oBACH,QAAQ;gBACV;YACF;YACA,MAAM;gBACJ,cAAc;gBACd,iBAAiB;gBACjB,WAAW;YACb;QACF;IACF;IAEA,MAAa,OACX,IAAA,EAC0B;QAC1B,MAAM,WAAW,MAAM,IAAA,CAAK,KAAA,CAAM,cAAA,CAAe,gBAAgB;YAC/D,QAAQ;YACR,SAAS;gBACP,QAAQ;YACV;YACA;QACF,CAAC;QACD,8KAAO,kBAAA,CAAgB,YAAA,CAAa,UAAU,sLAAI,mBAAA,CAAiB,CAAC;IACtE;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4878, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/cloud/AssistantCloudThreadMessages.tsx"],"sourcesContent":["import { ReadonlyJSONObject } from \"assistant-stream/utils\";\nimport { AssistantCloudAPI } from \"./AssistantCloudAPI\";\n\nexport type CloudMessage = {\n  id: string;\n  parent_id: string | null;\n  height: number;\n  created_at: Date;\n  updated_at: Date;\n  format: \"aui/v0\" | string;\n  content: ReadonlyJSONObject;\n};\n\ntype AssistantCloudThreadMessageListResponse = {\n  messages: CloudMessage[];\n};\n\ntype AssistantCloudThreadMessageCreateBody = {\n  parent_id: string | null;\n  format: \"aui/v0\" | string;\n  content: ReadonlyJSONObject;\n};\n\ntype AssistantCloudMessageCreateResponse = {\n  message_id: string;\n};\n\nexport class AssistantCloudThreadMessages {\n  constructor(private cloud: AssistantCloudAPI) {}\n\n  public async list(\n    threadId: string,\n  ): Promise<AssistantCloudThreadMessageListResponse> {\n    return this.cloud.makeRequest(\n      `/threads/${encodeURIComponent(threadId)}/messages`,\n    );\n  }\n\n  public async create(\n    threadId: string,\n    body: AssistantCloudThreadMessageCreateBody,\n  ): Promise<AssistantCloudMessageCreateResponse> {\n    return this.cloud.makeRequest(\n      `/threads/${encodeURIComponent(threadId)}/messages`,\n      { method: \"POST\", body },\n    );\n  }\n}\n"],"names":[],"mappings":";;;;AA2BO,IAAM,+BAAN,MAAmC;IACxC,YAAoB,KAAA,CAA0B;QAA1B,IAAA,CAAA,KAAA,GAAA;IAA2B;IAE/C,MAAa,KACX,QAAA,EACkD;QAClD,OAAO,IAAA,CAAK,KAAA,CAAM,WAAA,CAChB,CAAA,SAAA,EAAY,mBAAmB,QAAQ,CAAC,CAAA,SAAA,CAAA;IAE5C;IAEA,MAAa,OACX,QAAA,EACA,IAAA,EAC8C;QAC9C,OAAO,IAAA,CAAK,KAAA,CAAM,WAAA,CAChB,CAAA,SAAA,EAAY,mBAAmB,QAAQ,CAAC,CAAA,SAAA,CAAA,EACxC;YAAE,QAAQ;YAAQ;QAAK;IAE3B;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4904, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/cloud/AssistantCloudThreads.tsx"],"sourcesContent":["import { AssistantCloudAPI } from \"./AssistantCloudAPI\";\nimport { AssistantCloudThreadMessages } from \"./AssistantCloudThreadMessages\";\n\ntype AssistantCloudThreadsListQuery = {\n  is_archived?: boolean;\n  limit?: number;\n  after?: string;\n};\n\ntype CloudThread = {\n  title: string;\n  last_message_at: Date;\n  metadata: unknown;\n  external_id: string | null;\n  id: string;\n  project_id: string;\n  created_at: Date;\n  updated_at: Date;\n  workspace_id: string;\n  is_archived: boolean;\n};\n\ntype AssistantCloudThreadsListResponse = {\n  threads: CloudThread[];\n};\n\ntype AssistantCloudThreadsCreateBody = {\n  title?: string | undefined;\n  last_message_at: Date;\n  metadata?: unknown | undefined;\n  external_id?: string | undefined;\n};\n\ntype AssistantCloudThreadsCreateResponse = {\n  thread_id: string;\n};\n\ntype AssistantCloudThreadsUpdateBody = {\n  title?: string | undefined;\n  last_message_at?: Date | undefined;\n  metadata?: unknown | undefined;\n  is_archived?: boolean | undefined;\n};\n\nexport class AssistantCloudThreads {\n  public readonly messages: AssistantCloudThreadMessages;\n\n  constructor(private cloud: AssistantCloudAPI) {\n    this.messages = new AssistantCloudThreadMessages(cloud);\n  }\n\n  public async list(\n    query?: AssistantCloudThreadsListQuery,\n  ): Promise<AssistantCloudThreadsListResponse> {\n    return this.cloud.makeRequest(\"/threads\", { query });\n  }\n\n  public async create(\n    body: AssistantCloudThreadsCreateBody,\n  ): Promise<AssistantCloudThreadsCreateResponse> {\n    return this.cloud.makeRequest(\"/threads\", { method: \"POST\", body });\n  }\n\n  public async update(\n    threadId: string,\n    body: AssistantCloudThreadsUpdateBody,\n  ): Promise<void> {\n    return this.cloud.makeRequest(`/threads/${encodeURIComponent(threadId)}`, {\n      method: \"PUT\",\n      body,\n    });\n  }\n\n  public async delete(threadId: string): Promise<void> {\n    return this.cloud.makeRequest(`/threads/${encodeURIComponent(threadId)}`, {\n      method: \"DELETE\",\n    });\n  }\n}\n"],"names":[],"mappings":";;;;AACA,SAAS,oCAAoC;;AA2CtC,IAAM,wBAAN,MAA4B;IAGjC,YAAoB,KAAA,CAA0B;QAA1B,IAAA,CAAA,KAAA,GAAA;QAClB,IAAA,CAAK,QAAA,GAAW,gMAAI,+BAAA,CAA6B,KAAK;IACxD;IAJgB,SAAA;IAMhB,MAAa,KACX,KAAA,EAC4C;QAC5C,OAAO,IAAA,CAAK,KAAA,CAAM,WAAA,CAAY,YAAY;YAAE;QAAM,CAAC;IACrD;IAEA,MAAa,OACX,IAAA,EAC8C;QAC9C,OAAO,IAAA,CAAK,KAAA,CAAM,WAAA,CAAY,YAAY;YAAE,QAAQ;YAAQ;QAAK,CAAC;IACpE;IAEA,MAAa,OACX,QAAA,EACA,IAAA,EACe;QACf,OAAO,IAAA,CAAK,KAAA,CAAM,WAAA,CAAY,CAAA,SAAA,EAAY,mBAAmB,QAAQ,CAAC,EAAA,EAAI;YACxE,QAAQ;YACR;QACF,CAAC;IACH;IAEA,MAAa,OAAO,QAAA,EAAiC;QACnD,OAAO,IAAA,CAAK,KAAA,CAAM,WAAA,CAAY,CAAA,SAAA,EAAY,mBAAmB,QAAQ,CAAC,EAAA,EAAI;YACxE,QAAQ;QACV,CAAC;IACH;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4947, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/cloud/AssistantCloud.tsx"],"sourcesContent":["import { AssistantCloudAPI, AssistantCloudConfig } from \"./AssistantCloudAPI\";\nimport { AssistantCloudAuthTokens } from \"./AssistantCloudAuthTokens\";\nimport { AssistantCloudRuns } from \"./AssistantCloudRuns\";\nimport { AssistantCloudThreads } from \"./AssistantCloudThreads\";\n\nexport class AssistantCloud {\n  public readonly threads;\n  public readonly auth;\n  public readonly runs;\n\n  constructor(config: AssistantCloudConfig) {\n    const api = new AssistantCloudAPI(config);\n    this.threads = new AssistantCloudThreads(api);\n    this.auth = {\n      tokens: new AssistantCloudAuthTokens(api),\n    };\n    this.runs = new AssistantCloudRuns(api);\n  }\n}\n"],"names":[],"mappings":";;;;AAAA,SAAS,yBAA+C;AACxD,SAAS,gCAAgC;AACzC,SAAS,0BAA0B;AACnC,SAAS,6BAA6B;;;;;AAE/B,IAAM,iBAAN,MAAqB;IACV,QAAA;IACA,KAAA;IACA,KAAA;IAEhB,YAAY,MAAA,CAA8B;QACxC,MAAM,MAAM,qLAAI,oBAAA,CAAkB,MAAM;QACxC,IAAA,CAAK,OAAA,GAAU,yLAAI,wBAAA,CAAsB,GAAG;QAC5C,IAAA,CAAK,IAAA,GAAO;YACV,QAAQ,4LAAI,2BAAA,CAAyB,GAAG;QAC1C;QACA,IAAA,CAAK,IAAA,GAAO,sLAAI,qBAAA,CAAmB,GAAG;IACxC;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 4980, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/utils/json/is-json.ts"],"sourcesContent":["import {\n  ReadonlyJSONArray,\n  ReadonlyJSONObject,\n  ReadonlyJSONValue,\n} from \"assistant-stream/utils\";\n\nexport function isJSONValue(\n  value: unknown,\n  currentDepth: number = 0,\n): value is ReadonlyJSONValue {\n  // Protect against too deep recursion\n  if (currentDepth > 100) {\n    return false;\n  }\n\n  if (\n    value === null ||\n    typeof value === \"string\" ||\n    typeof value === \"boolean\"\n  ) {\n    return true;\n  }\n\n  // Handle special number cases\n  if (typeof value === \"number\") {\n    return !Number.isNaN(value) && Number.isFinite(value);\n  }\n\n  if (Array.isArray(value)) {\n    return value.every((item) => isJSONValue(item, currentDepth + 1));\n  }\n\n  if (typeof value === \"object\") {\n    return Object.entries(value).every(\n      ([key, val]) =>\n        typeof key === \"string\" && isJSONValue(val, currentDepth + 1),\n    );\n  }\n\n  return false;\n}\n\nexport function isJSONArray(value: unknown): value is ReadonlyJSONArray {\n  return Array.isArray(value) && value.every(isJSONValue);\n}\n\nexport function isJSONObject(value: unknown): value is ReadonlyJSONObject {\n  return (\n    value != null &&\n    typeof value === \"object\" &&\n    Object.entries(value).every(\n      ([key, val]) => typeof key === \"string\" && isJSONValue(val),\n    )\n  );\n}\n"],"names":[],"mappings":";;;;;;AAMO,SAAS,YACd,KAAA,EACA,eAAuB,CAAA,EACK;IAE5B,IAAI,eAAe,KAAK;QACtB,OAAO;IACT;IAEA,IACE,UAAU,QACV,OAAO,UAAU,YACjB,OAAO,UAAU,WACjB;QACA,OAAO;IACT;IAGA,IAAI,OAAO,UAAU,UAAU;QAC7B,OAAO,CAAC,OAAO,KAAA,CAAM,KAAK,KAAK,OAAO,QAAA,CAAS,KAAK;IACtD;IAEA,IAAI,MAAM,OAAA,CAAQ,KAAK,GAAG;QACxB,OAAO,MAAM,KAAA,CAAM,CAAC,OAAS,YAAY,MAAM,eAAe,CAAC,CAAC;IAClE;IAEA,IAAI,OAAO,UAAU,UAAU;QAC7B,OAAO,OAAO,OAAA,CAAQ,KAAK,EAAE,KAAA,CAC3B,CAAC,CAAC,KAAK,GAAG,CAAA,GACR,OAAO,QAAQ,YAAY,YAAY,KAAK,eAAe,CAAC;IAElE;IAEA,OAAO;AACT;AAEO,SAAS,YAAY,KAAA,EAA4C;IACtE,OAAO,MAAM,OAAA,CAAQ,KAAK,KAAK,MAAM,KAAA,CAAM,WAAW;AACxD;AAEO,SAAS,aAAa,KAAA,EAA6C;IACxE,OACE,SAAS,QACT,OAAO,UAAU,YACjB,OAAO,OAAA,CAAQ,KAAK,EAAE,KAAA,CACpB,CAAC,CAAC,KAAK,GAAG,CAAA,GAAM,OAAO,QAAQ,YAAY,YAAY,GAAG;AAGhE","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5018, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/cloud/auiV0.ts"],"sourcesContent":["import { ThreadMessage } from \"../types\";\nimport { MessageStatus } from \"../types/AssistantTypes\";\nimport { fromThreadMessageLike } from \"../runtimes/external-store/ThreadMessageLike\";\nimport { CloudMessage } from \"./AssistantCloudThreadMessages\";\nimport { isJSONValue } from \"../utils/json/is-json\";\nimport { ReadonlyJSONObject, ReadonlyJSONValue } from \"assistant-stream/utils\";\nimport { ExportedMessageRepositoryItem } from \"../runtimes/utils/MessageRepository\";\n\ntype AuiV0MessageContentPart =\n  | {\n      readonly type: \"text\";\n      readonly text: string;\n    }\n  | {\n      readonly type: \"reasoning\";\n      readonly text: string;\n    }\n  | {\n      readonly type: \"source\";\n      readonly sourceType: \"url\";\n      readonly id: string;\n      readonly url: string;\n      readonly title?: string;\n    }\n  | {\n      readonly type: \"tool-call\";\n      readonly toolCallId: string;\n      readonly toolName: string;\n      readonly args: ReadonlyJSONObject;\n      readonly result?: ReadonlyJSONValue;\n      readonly isError?: true;\n    }\n  | {\n      readonly type: \"tool-call\";\n      readonly toolCallId: string;\n      readonly toolName: string;\n      readonly argsText: string;\n      readonly result?: ReadonlyJSONValue;\n      readonly isError?: true;\n    };\n\ntype AuiV0Message = {\n  readonly role: \"assistant\" | \"user\" | \"system\";\n  readonly status?: MessageStatus;\n  readonly content: readonly AuiV0MessageContentPart[];\n  readonly metadata: {\n    readonly unstable_state?: ReadonlyJSONValue;\n    readonly unstable_annotations: readonly ReadonlyJSONValue[];\n    readonly unstable_data: readonly ReadonlyJSONValue[];\n    readonly steps: readonly {\n      readonly usage?: {\n        readonly promptTokens: number;\n        readonly completionTokens: number;\n      };\n    }[];\n    readonly custom: ReadonlyJSONObject;\n  };\n};\n\nexport const auiV0Encode = (message: ThreadMessage): AuiV0Message => {\n  // TODO attachments are currently intentionally ignored\n  // info: ID and createdAt are ignored (we use the server value instead)\n  return {\n    role: message.role,\n    content: message.content.map((part) => {\n      const type = part.type;\n      switch (type) {\n        case \"text\": {\n          return {\n            type: \"text\",\n            text: part.text,\n          };\n        }\n\n        case \"reasoning\": {\n          return {\n            type: \"reasoning\",\n            text: part.text,\n          };\n        }\n\n        case \"source\": {\n          return {\n            type: \"source\",\n            sourceType: part.sourceType,\n            id: part.id,\n            url: part.url,\n            ...(part.title ? { title: part.title } : undefined),\n          };\n        }\n\n        case \"tool-call\": {\n          if (!isJSONValue(part.result)) {\n            console.warn(\n              \"tool-call result is not JSON! \" + JSON.stringify(part),\n            );\n          }\n          return {\n            type: \"tool-call\",\n            toolCallId: part.toolCallId,\n            toolName: part.toolName,\n            ...(JSON.stringify(part.args) === part.argsText\n              ? {\n                  args: part.args,\n                }\n              : { argsText: part.argsText }),\n            ...(part.result\n              ? { result: part.result as ReadonlyJSONValue }\n              : {}),\n            ...(part.isError ? { isError: true } : {}),\n          };\n        }\n\n        default: {\n          const unhandledType: \"image\" | \"file\" | \"audio\" = type;\n          throw new Error(\n            `Content part type not supported by aui/v0: ${unhandledType}`,\n          );\n        }\n      }\n    }),\n    metadata: message.metadata as AuiV0Message[\"metadata\"],\n    ...(message.status\n      ? {\n          status:\n            message.status?.type === \"running\"\n              ? {\n                  type: \"incomplete\",\n                  reason: \"cancelled\",\n                }\n              : message.status,\n        }\n      : undefined),\n  };\n};\n\nexport const auiV0Decode = (\n  cloudMessage: CloudMessage & { format: \"aui/v0\" },\n): ExportedMessageRepositoryItem => {\n  const payload = cloudMessage.content as unknown as AuiV0Message;\n  const message = fromThreadMessageLike(\n    {\n      id: cloudMessage.id,\n      createdAt: cloudMessage.created_at,\n      ...payload,\n    },\n    cloudMessage.id,\n    {\n      type: \"complete\",\n      reason: \"unknown\",\n    },\n  );\n\n  return {\n    parentId: cloudMessage.parent_id,\n    message,\n  };\n};\n"],"names":[],"mappings":";;;;;AAEA,SAAS,6BAA6B;AAEtC,SAAS,mBAAmB;;;AAuDrB,IAAM,cAAc,CAAC,YAAyC;IAGnE,OAAO;QACL,MAAM,QAAQ,IAAA;QACd,SAAS,QAAQ,OAAA,CAAQ,GAAA,CAAI,CAAC,SAAS;YACrC,MAAM,OAAO,KAAK,IAAA;YAClB,OAAQ,MAAM;gBACZ,KAAK;oBAAQ;wBACX,OAAO;4BACL,MAAM;4BACN,MAAM,KAAK,IAAA;wBACb;oBACF;gBAEA,KAAK;oBAAa;wBAChB,OAAO;4BACL,MAAM;4BACN,MAAM,KAAK,IAAA;wBACb;oBACF;gBAEA,KAAK;oBAAU;wBACb,OAAO;4BACL,MAAM;4BACN,YAAY,KAAK,UAAA;4BACjB,IAAI,KAAK,EAAA;4BACT,KAAK,KAAK,GAAA;4BACV,GAAI,KAAK,KAAA,GAAQ;gCAAE,OAAO,KAAK,KAAA;4BAAM,IAAI,KAAA,CAAA;wBAC3C;oBACF;gBAEA,KAAK;oBAAa;wBAChB,IAAI,uLAAC,cAAA,EAAY,KAAK,MAAM,GAAG;4BAC7B,QAAQ,IAAA,CACN,mCAAmC,KAAK,SAAA,CAAU,IAAI;wBAE1D;wBACA,OAAO;4BACL,MAAM;4BACN,YAAY,KAAK,UAAA;4BACjB,UAAU,KAAK,QAAA;4BACf,GAAI,KAAK,SAAA,CAAU,KAAK,IAAI,MAAM,KAAK,QAAA,GACnC;gCACE,MAAM,KAAK,IAAA;4BACb,IACA;gCAAE,UAAU,KAAK,QAAA;4BAAS,CAAA;4BAC9B,GAAI,KAAK,MAAA,GACL;gCAAE,QAAQ,KAAK,MAAA;4BAA4B,IAC3C,CAAC,CAAA;4BACL,GAAI,KAAK,OAAA,GAAU;gCAAE,SAAS;4BAAK,IAAI,CAAC,CAAA;wBAC1C;oBACF;gBAEA;oBAAS;wBACP,MAAM,gBAA4C;wBAClD,MAAM,IAAI,MACR,CAAA,2CAAA,EAA8C,aAAa,EAAA;oBAE/D;YACF;QACF,CAAC;QACD,UAAU,QAAQ,QAAA;QAClB,GAAI,QAAQ,MAAA,GACR;YACE,QACE,QAAQ,MAAA,EAAQ,SAAS,YACrB;gBACE,MAAM;gBACN,QAAQ;YACV,IACA,QAAQ,MAAA;QAChB,IACA,KAAA,CAAA;IACN;AACF;AAEO,IAAM,cAAc,CACzB,iBACkC;IAClC,MAAM,UAAU,aAAa,OAAA;IAC7B,MAAM,uNAAU,wBAAA,EACd;QACE,IAAI,aAAa,EAAA;QACjB,WAAW,aAAa,UAAA;QACxB,GAAG,OAAA;IACL,GACA,aAAa,EAAA,EACb;QACE,MAAM;QACN,QAAQ;IACV;IAGF,OAAO;QACL,UAAU,aAAa,SAAA;QACvB;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5120, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/cloud/AssistantCloudThreadHistoryAdapter.tsx"],"sourcesContent":["import { RefObject, useState } from \"react\";\nimport { useThreadListItemRuntime } from \"../context\";\nimport { ThreadHistoryAdapter } from \"../runtimes/adapters/thread-history/ThreadHistoryAdapter\";\nimport { ExportedMessageRepositoryItem } from \"../runtimes/utils/MessageRepository\";\nimport { AssistantCloud } from \"./AssistantCloud\";\nimport { auiV0Decode, auiV0Encode } from \"./auiV0\";\nimport { ThreadListItemRuntime } from \"../api\";\n\nclass AssistantCloudThreadHistoryAdapter implements ThreadHistoryAdapter {\n  constructor(\n    private cloudRef: RefObject<AssistantCloud>,\n    private threadListItemRuntime: ThreadListItemRuntime,\n  ) {}\n\n  private _getIdForLocalId: Record<string, string | Promise<string>> = {};\n\n  async append({ parentId, message }: ExportedMessageRepositoryItem) {\n    const { remoteId } = await this.threadListItemRuntime.initialize();\n    const task = this.cloudRef.current.threads.messages\n      .create(remoteId, {\n        parent_id: parentId\n          ? ((await this._getIdForLocalId[parentId]) ?? parentId)\n          : null,\n        format: \"aui/v0\",\n        content: auiV0Encode(message),\n      })\n      .then(({ message_id }) => {\n        this._getIdForLocalId[message.id] = message_id;\n        return message_id;\n      });\n\n    this._getIdForLocalId[message.id] = task;\n\n    return task.then(() => {});\n  }\n\n  async load() {\n    const remoteId = this.threadListItemRuntime.getState().remoteId;\n    if (!remoteId) return { messages: [] };\n    const { messages } =\n      await this.cloudRef.current.threads.messages.list(remoteId);\n    const payload = {\n      messages: messages\n        .filter(\n          (m): m is typeof m & { format: \"aui/v0\" } => m.format === \"aui/v0\",\n        )\n        .map(auiV0Decode)\n        .reverse(),\n    };\n    return payload;\n  }\n}\n\nexport const useAssistantCloudThreadHistoryAdapter = (\n  cloudRef: RefObject<AssistantCloud>,\n): ThreadHistoryAdapter => {\n  const threadListItemRuntime = useThreadListItemRuntime();\n  const [adapter] = useState(\n    () =>\n      new AssistantCloudThreadHistoryAdapter(cloudRef, threadListItemRuntime),\n  );\n\n  return adapter;\n};\n"],"names":[],"mappings":";;;;AAAA,SAAoB,gBAAgB;AACpC,SAAS,gCAAgC;AAIzC,SAAS,aAAa,mBAAmB;;;;AAGzC,IAAM,qCAAN,MAAyE;IACvE,YACU,QAAA,EACA,qBAAA,CACR;QAFQ,IAAA,CAAA,QAAA,GAAA;QACA,IAAA,CAAA,qBAAA,GAAA;IACP;IAEK,mBAA6D,CAAC,EAAA;IAEtE,MAAM,OAAO,EAAE,QAAA,EAAU,OAAA,CAAQ,CAAA,EAAkC;QACjE,MAAM,EAAE,QAAA,CAAS,CAAA,GAAI,MAAM,IAAA,CAAK,qBAAA,CAAsB,UAAA,CAAW;QACjE,MAAM,OAAO,IAAA,CAAK,QAAA,CAAS,OAAA,CAAQ,OAAA,CAAQ,QAAA,CACxC,MAAA,CAAO,UAAU;YAChB,WAAW,WACL,MAAM,IAAA,CAAK,gBAAA,CAAiB,QAAQ,CAAA,IAAM,WAC5C;YACJ,QAAQ;YACR,kLAAS,cAAA,EAAY,OAAO;QAC9B,CAAC,EACA,IAAA,CAAK,CAAC,EAAE,UAAA,CAAW,CAAA,KAAM;YACxB,IAAA,CAAK,gBAAA,CAAiB,QAAQ,EAAE,CAAA,GAAI;YACpC,OAAO;QACT,CAAC;QAEH,IAAA,CAAK,gBAAA,CAAiB,QAAQ,EAAE,CAAA,GAAI;QAEpC,OAAO,KAAK,IAAA,CAAK,KAAO,CAAD,AAAE;IAC3B;IAEA,MAAM,OAAO;QACX,MAAM,WAAW,IAAA,CAAK,qBAAA,CAAsB,QAAA,CAAS,EAAE,QAAA;QACvD,IAAI,CAAC,SAAU,CAAA,OAAO;YAAE,UAAU,CAAC,CAAA;QAAE;QACrC,MAAM,EAAE,QAAA,CAAS,CAAA,GACf,MAAM,IAAA,CAAK,QAAA,CAAS,OAAA,CAAQ,OAAA,CAAQ,QAAA,CAAS,IAAA,CAAK,QAAQ;QAC5D,MAAM,UAAU;YACd,UAAU,SACP,MAAA,CACC,CAAC,IAA4C,EAAE,MAAA,KAAW,UAE3D,GAAA,sKAAI,cAAW,EACf,OAAA,CAAQ;QACb;QACA,OAAO;IACT;AACF;AAEO,IAAM,wCAAwC,CACnD,aACyB;IACzB,MAAM,4NAAwB,2BAAA,CAAyB;IACvD,MAAM,CAAC,OAAO,CAAA,6MAAI,WAAA,EAChB,IACE,IAAI,mCAAmC,UAAU,qBAAqB;IAG1E,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5174, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/runtimes/remote-thread-list/adapter/in-memory.tsx"],"sourcesContent":["import { AssistantStream, AssistantStreamChunk } from \"assistant-stream\";\nimport {\n  RemoteThreadInitializeResponse,\n  RemoteThreadListAdapter,\n  RemoteThreadListResponse,\n} from \"../types\";\n\nexport class InMemoryThreadListAdapter implements RemoteThreadListAdapter {\n  list(): Promise<RemoteThreadListResponse> {\n    return Promise.resolve({\n      threads: [],\n    });\n  }\n\n  rename(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  archive(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  unarchive(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  delete(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  initialize(threadId: string): Promise<RemoteThreadInitializeResponse> {\n    return Promise.resolve({ remoteId: threadId, externalId: undefined });\n  }\n\n  generateTitle(): Promise<AssistantStream> {\n    return Promise.resolve(new ReadableStream<AssistantStreamChunk>());\n  }\n}\n"],"names":[],"mappings":";;;;AAOO,IAAM,4BAAN,MAAmE;IACxE,OAA0C;QACxC,OAAO,QAAQ,OAAA,CAAQ;YACrB,SAAS,CAAC,CAAA;QACZ,CAAC;IACH;IAEA,SAAwB;QACtB,OAAO,QAAQ,OAAA,CAAQ;IACzB;IAEA,UAAyB;QACvB,OAAO,QAAQ,OAAA,CAAQ;IACzB;IAEA,YAA2B;QACzB,OAAO,QAAQ,OAAA,CAAQ;IACzB;IAEA,SAAwB;QACtB,OAAO,QAAQ,OAAA,CAAQ;IACzB;IAEA,WAAW,QAAA,EAA2D;QACpE,OAAO,QAAQ,OAAA,CAAQ;YAAE,UAAU;YAAU,YAAY,KAAA;QAAU,CAAC;IACtE;IAEA,gBAA0C;QACxC,OAAO,QAAQ,OAAA,CAAQ,IAAI,eAAqC,CAAC;IACnE;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5214, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/runtimes/remote-thread-list/adapter/cloud.tsx"],"sourcesContent":["import {\n  FC,\n  PropsWithChildren,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n} from \"react\";\nimport { AssistantCloud } from \"../../../cloud\";\nimport { RemoteThreadListAdapter } from \"../types\";\nimport { useAssistantCloudThreadHistoryAdapter } from \"../../../cloud/AssistantCloudThreadHistoryAdapter\";\nimport { RuntimeAdapterProvider } from \"../../adapters/RuntimeAdapterProvider\";\nimport { InMemoryThreadListAdapter } from \"./in-memory\";\n\ntype ThreadData = {\n  externalId: string;\n};\n\ntype CloudThreadListAdapterOptions = {\n  cloud?: AssistantCloud | undefined;\n\n  create?(): Promise<ThreadData>;\n  delete?(threadId: string): Promise<void>;\n};\n\nconst baseUrl =\n  typeof process !== \"undefined\" &&\n  process?.env?.[\"NEXT_PUBLIC_ASSISTANT_BASE_URL\"];\nconst autoCloud = baseUrl\n  ? new AssistantCloud({ baseUrl, anonymous: true })\n  : undefined;\n\nexport const useCloudThreadListAdapter = (\n  adapter: CloudThreadListAdapterOptions,\n): RemoteThreadListAdapter => {\n  const adapterRef = useRef(adapter);\n  useEffect(() => {\n    adapterRef.current = adapter;\n  }, [adapter]);\n\n  const unstable_Provider = useCallback<FC<PropsWithChildren>>(\n    function Provider({ children }) {\n      const history = useAssistantCloudThreadHistoryAdapter({\n        get current() {\n          return adapterRef.current.cloud ?? autoCloud!;\n        },\n      });\n      const adapters = useMemo(() => ({ history }), [history]);\n\n      return (\n        <RuntimeAdapterProvider adapters={adapters}>\n          {children}\n        </RuntimeAdapterProvider>\n      );\n    },\n    [],\n  );\n\n  const cloud = adapter.cloud ?? autoCloud;\n  if (!cloud) return new InMemoryThreadListAdapter();\n\n  return {\n    list: async () => {\n      const { threads } = await cloud.threads.list();\n      return {\n        threads: threads.map((t) => ({\n          status: t.is_archived ? \"archived\" : \"regular\",\n          remoteId: t.id,\n          title: t.title,\n          externalId: t.external_id ?? undefined,\n        })),\n      };\n    },\n\n    initialize: async () => {\n      const createTask = adapter.create?.() ?? Promise.resolve();\n      const t = await createTask;\n      const external_id = t ? t.externalId : undefined;\n      const { thread_id: remoteId } = await cloud.threads.create({\n        last_message_at: new Date(),\n        external_id,\n      });\n\n      return { externalId: external_id, remoteId: remoteId };\n    },\n\n    rename: async (threadId, newTitle) => {\n      return cloud.threads.update(threadId, { title: newTitle });\n    },\n    archive: async (threadId) => {\n      return cloud.threads.update(threadId, { is_archived: true });\n    },\n    unarchive: async (threadId) => {\n      return cloud.threads.update(threadId, { is_archived: false });\n    },\n    delete: async (threadId) => {\n      await adapter.delete?.(threadId);\n      return cloud.threads.delete(threadId);\n    },\n\n    generateTitle: async (threadId, messages) => {\n      return cloud.runs.stream({\n        thread_id: threadId,\n        assistant_id: \"system/thread_title\",\n        messages: messages, // TODO serialize these to a more efficient format\n      });\n    },\n\n    unstable_Provider,\n  };\n};\n"],"names":[],"mappings":";;;;AAAA;AAQA,SAAS,sBAAsB;AAE/B,SAAS,6CAA6C;AACtD,SAAS,8BAA8B;AACvC,SAAS,iCAAiC;AAsClC;;;;;;;AAzBR,IAAM,UACJ,OAAO,YAAY,eACnB,SAAS,KAAA,CAAM,gCAAgC,CAAA;AACjD,IAAM,YAAY,UACd,kLAAI,iBAAA,CAAe;IAAE;IAAS,WAAW;AAAK,CAAC,IAC/C,KAAA;AAEG,IAAM,4BAA4B,CACvC,YAC4B;IAC5B,MAAM,uNAAa,SAAA,EAAO,OAAO;IACjC,CAAA,GAAA,qMAAA,CAAA,YAAA,EAAU,MAAM;QACd,WAAW,OAAA,GAAU;IACvB,GAAG;QAAC,OAAO;KAAC;IAEZ,MAAM,8NAAoB,cAAA,EACxB,SAAS,SAAS,EAAE,QAAA,CAAS,CAAA,EAAG;QAC9B,MAAM,gNAAU,wCAAA,EAAsC;YACpD,IAAI,WAAU;gBACZ,OAAO,WAAW,OAAA,CAAQ,KAAA,IAAS;YACrC;QACF,CAAC;QACD,MAAM,WAAW,oNAAA,EAAQ,IAAA,CAAO;gBAAE;YAAQ,CAAA,GAAI;YAAC,OAAO;SAAC;QAEvD,OACE,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,uMAAC,yBAAA,EAAA;YAAuB;YACrB;QAAA,CACH;IAEJ,GACA,CAAC,CAAA;IAGH,MAAM,QAAQ,QAAQ,KAAA,IAAS;IAC/B,IAAI,CAAC,MAAO,CAAA,OAAO,0NAAI,4BAAA,CAA0B;IAEjD,OAAO;QACL,MAAM,YAAY;YAChB,MAAM,EAAE,OAAA,CAAQ,CAAA,GAAI,MAAM,MAAM,OAAA,CAAQ,IAAA,CAAK;YAC7C,OAAO;gBACL,SAAS,QAAQ,GAAA,CAAI,CAAC,IAAA,CAAO;wBAC3B,QAAQ,EAAE,WAAA,GAAc,aAAa;wBACrC,UAAU,EAAE,EAAA;wBACZ,OAAO,EAAE,KAAA;wBACT,YAAY,EAAE,WAAA,IAAe,KAAA;oBAC/B,CAAA,CAAE;YACJ;QACF;QAEA,YAAY,YAAY;YACtB,MAAM,aAAa,QAAQ,MAAA,GAAS,KAAK,QAAQ,OAAA,CAAQ;YACzD,MAAM,IAAI,MAAM;YAChB,MAAM,cAAc,IAAI,EAAE,UAAA,GAAa,KAAA;YACvC,MAAM,EAAE,WAAW,QAAA,CAAS,CAAA,GAAI,MAAM,MAAM,OAAA,CAAQ,MAAA,CAAO;gBACzD,iBAAiB,aAAA,GAAA,IAAI,KAAK;gBAC1B;YACF,CAAC;YAED,OAAO;gBAAE,YAAY;gBAAa;YAAmB;QACvD;QAEA,QAAQ,OAAO,UAAU,aAAa;YACpC,OAAO,MAAM,OAAA,CAAQ,MAAA,CAAO,UAAU;gBAAE,OAAO;YAAS,CAAC;QAC3D;QACA,SAAS,OAAO,aAAa;YAC3B,OAAO,MAAM,OAAA,CAAQ,MAAA,CAAO,UAAU;gBAAE,aAAa;YAAK,CAAC;QAC7D;QACA,WAAW,OAAO,aAAa;YAC7B,OAAO,MAAM,OAAA,CAAQ,MAAA,CAAO,UAAU;gBAAE,aAAa;YAAM,CAAC;QAC9D;QACA,QAAQ,OAAO,aAAa;YAC1B,MAAM,QAAQ,MAAA,GAAS,QAAQ;YAC/B,OAAO,MAAM,OAAA,CAAQ,MAAA,CAAO,QAAQ;QACtC;QAEA,eAAe,OAAO,UAAU,aAAa;YAC3C,OAAO,MAAM,IAAA,CAAK,MAAA,CAAO;gBACvB,WAAW;gBACX,cAAc;gBACd;YACF,CAAC;QACH;QAEA;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5322, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/runtimes/local/useLocalRuntime.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useMemo, useState } from \"react\";\nimport type { ChatModelAdapter } from \"./ChatModelAdapter\";\nimport { LocalRuntimeCore } from \"./LocalRuntimeCore\";\nimport { LocalRuntimeOptions } from \"./LocalRuntimeOptions\";\nimport { useRuntimeAdapters } from \"../adapters/RuntimeAdapterProvider\";\nimport { useRemoteThreadListRuntime } from \"../remote-thread-list/useRemoteThreadListRuntime\";\nimport { useCloudThreadListAdapter } from \"../remote-thread-list/adapter/cloud\";\nimport { AssistantRuntimeImpl } from \"../../internal\";\n\nconst useLocalThreadRuntime = (\n  adapter: ChatModelAdapter,\n  { initialMessages, ...options }: LocalRuntimeOptions,\n) => {\n  const { modelContext, ...threadListAdapters } = useRuntimeAdapters() ?? {};\n  const opt = useMemo(\n    () => ({\n      ...options,\n      adapters: {\n        ...threadListAdapters,\n        ...options.adapters,\n        chatModel: adapter,\n      },\n    }),\n    [adapter, options, threadListAdapters],\n  );\n\n  const [runtime] = useState(() => new LocalRuntimeCore(opt, initialMessages));\n\n  useEffect(() => {\n    return () => {\n      runtime.threads.getMainThreadRuntimeCore().detach();\n    };\n  }, [runtime]);\n\n  useEffect(() => {\n    runtime.threads.getMainThreadRuntimeCore().__internal_setOptions(opt);\n    runtime.threads.getMainThreadRuntimeCore().__internal_load();\n  }, [runtime, opt]);\n\n  useEffect(() => {\n    if (!modelContext) return undefined;\n    return runtime.registerModelContextProvider(modelContext);\n  }, [modelContext, runtime]);\n\n  return useMemo(() => new AssistantRuntimeImpl(runtime), [runtime]);\n};\n\nexport const useLocalRuntime = (\n  adapter: ChatModelAdapter,\n  { cloud, ...options }: LocalRuntimeOptions = {},\n) => {\n  const cloudAdapter = useCloudThreadListAdapter({ cloud });\n  return useRemoteThreadListRuntime({\n    runtimeHook: function RuntimeHook() {\n      return useLocalThreadRuntime(adapter, options);\n    },\n    adapter: cloudAdapter,\n  });\n};\n"],"names":[],"mappings":";;;;AAEA,SAAS,WAAW,SAAS,gBAAgB;AAE7C,SAAS,wBAAwB;AAEjC,SAAS,0BAA0B;AACnC,SAAS,kCAAkC;AAC3C,SAAS,iCAAiC;AAC1C,SAAS,4BAA4B;;;;;;;;AAErC,IAAM,wBAAwB,CAC5B,SACA,EAAE,eAAA,EAAiB,GAAG,QAAQ,CAAA,KAC3B;IACH,MAAM,EAAE,YAAA,EAAc,GAAG,mBAAmB,CAAA,4MAAI,qBAAA,CAAmB,MAAK,CAAC;IACzE,MAAM,UAAM,gNAAA,EACV,IAAA,CAAO;YACL,GAAG,OAAA;YACH,UAAU;gBACR,GAAG,kBAAA;gBACH,GAAG,QAAQ,QAAA;gBACX,WAAW;YACb;QACF,CAAA,GACA;QAAC;QAAS;QAAS,kBAAkB;KAAA;IAGvC,MAAM,CAAC,OAAO,CAAA,6MAAI,WAAA,EAAS,IAAM,gMAAI,mBAAA,CAAiB,KAAK,eAAe,CAAC;IAE3E,CAAA,GAAA,qMAAA,CAAA,YAAA,EAAU,MAAM;QACd,OAAO,MAAM;YACX,QAAQ,OAAA,CAAQ,wBAAA,CAAyB,EAAE,MAAA,CAAO;QACpD;IACF,GAAG;QAAC,OAAO;KAAC;IAEZ,CAAA,GAAA,qMAAA,CAAA,YAAA,EAAU,MAAM;QACd,QAAQ,OAAA,CAAQ,wBAAA,CAAyB,EAAE,qBAAA,CAAsB,GAAG;QACpE,QAAQ,OAAA,CAAQ,wBAAA,CAAyB,EAAE,eAAA,CAAgB;IAC7D,GAAG;QAAC;QAAS,GAAG;KAAC;IAEjB,CAAA,GAAA,qMAAA,CAAA,YAAA,EAAU,MAAM;QACd,IAAI,CAAC,aAAc,CAAA,OAAO,KAAA;QAC1B,OAAO,QAAQ,4BAAA,CAA6B,YAAY;IAC1D,GAAG;QAAC;QAAc,OAAO;KAAC;IAE1B,iNAAO,UAAA,EAAQ,IAAM,kLAAI,uBAAA,CAAqB,OAAO,GAAG;QAAC,OAAO;KAAC;AACnE;AAEO,IAAM,kBAAkB,CAC7B,SACA,EAAE,KAAA,EAAO,GAAG,QAAQ,CAAA,GAAyB,CAAC,CAAA,KAC3C;IACH,MAAM,kOAAe,4BAAA,EAA0B;QAAE;IAAM,CAAC;IACxD,oOAAO,6BAAA,EAA2B;QAChC,aAAa,SAAS,cAAc;YAClC,OAAO,sBAAsB,SAAS,OAAO;QAC/C;QACA,SAAS;IACX,CAAC;AACH","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5398, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/primitives/threadListItem/index.ts"],"sourcesContent":["export { ThreadListItemPrimitiveRoot as Root } from \"./ThreadListItemRoot\";\nexport { ThreadListItemPrimitiveArchive as Archive } from \"./ThreadListItemArchive\";\nexport { ThreadListItemPrimitiveUnarchive as Unarchive } from \"./ThreadListItemUnarchive\";\nexport { ThreadListItemPrimitiveDelete as Delete } from \"./ThreadListItemDelete\";\nexport { ThreadListItemPrimitiveTrigger as Trigger } from \"./ThreadListItemTrigger\";\nexport { ThreadListItemPrimitiveTitle as Title } from \"./ThreadListItemTitle\";\n"],"names":[],"mappings":"","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5422, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/primitives/threadListItem/ThreadListItemRoot.tsx"],"sourcesContent":["\"use client\";\n\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { type ComponentRef, forwardRef, ComponentPropsWithoutRef } from \"react\";\nimport { useThreadListItem } from \"../../context/react/ThreadListItemContext\";\n\ntype PrimitiveDivProps = ComponentPropsWithoutRef<typeof Primitive.div>;\n\nexport namespace ThreadListItemPrimitiveRoot {\n  export type Element = ComponentRef<typeof Primitive.div>;\n  export type Props = PrimitiveDivProps;\n}\n\nexport const ThreadListItemPrimitiveRoot = forwardRef<\n  ThreadListItemPrimitiveRoot.Element,\n  ThreadListItemPrimitiveRoot.Props\n>((props, ref) => {\n  const isMain = useThreadListItem((t) => t.isMain);\n\n  return (\n    <Primitive.div\n      {...(isMain ? { \"data-active\": \"true\", \"aria-current\": \"true\" } : null)}\n      {...props}\n      ref={ref}\n    />\n  );\n});\n\nThreadListItemPrimitiveRoot.displayName = \"ThreadListItemPrimitive.Root\";\n"],"names":[],"mappings":";;;;AAEA,SAAS,iBAAiB;AAC1B,SAA4B,kBAA4C;AACxE,SAAS,yBAAyB;AAgB9B;;;;;;AAPG,IAAM,wOAA8B,aAAA,EAGzC,CAAC,OAAO,QAAQ;IAChB,MAAM,6MAAS,oBAAA,EAAkB,CAAC,IAAM,EAAE,MAAM;IAEhD,OACE,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,wKAAC,YAAA,CAAU,GAAA,EAAV;QACE,GAAI,SAAS;YAAE,eAAe;YAAQ,gBAAgB;QAAO,IAAI,IAAA;QACjE,GAAG,KAAA;QACJ;IAAA;AAGN,CAAC;AAED,4BAA4B,WAAA,GAAc","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5455, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/utils/createActionButton.tsx"],"sourcesContent":["import {\n  ComponentRef,\n  forwardRef,\n  ComponentPropsWithoutRef,\n  MouseEventHandler,\n} from \"react\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\n\ntype ActionButtonCallback<TProps> = (\n  props: TProps,\n) => MouseEventHandler<HTMLButtonElement> | null;\n\ntype PrimitiveButtonProps = ComponentPropsWithoutRef<typeof Primitive.button>;\n\nexport type ActionButtonProps<THook> = PrimitiveButtonProps &\n  (THook extends (props: infer TProps) => unknown ? TProps : never);\n\nexport type ActionButtonElement = ComponentRef<typeof Primitive.button>;\n\nexport const createActionButton = <TProps,>(\n  displayName: string,\n  useActionButton: ActionButtonCallback<TProps>,\n  forwardProps: (keyof NonNullable<TProps>)[] = [],\n) => {\n  const ActionButton = forwardRef<\n    ActionButtonElement,\n    PrimitiveButtonProps & TProps\n  >((props, forwardedRef) => {\n    const forwardedProps = {} as TProps;\n    const primitiveProps = {} as PrimitiveButtonProps;\n\n    (Object.keys(props) as Array<keyof typeof props>).forEach((key) => {\n      if (forwardProps.includes(key as keyof TProps)) {\n        (forwardedProps as any)[key] = props[key];\n      } else {\n        (primitiveProps as any)[key] = props[key];\n      }\n    });\n\n    const callback = useActionButton(forwardedProps as TProps) ?? undefined;\n    return (\n      <Primitive.button\n        type=\"button\"\n        {...primitiveProps}\n        ref={forwardedRef}\n        disabled={primitiveProps.disabled || !callback}\n        onClick={composeEventHandlers(primitiveProps.onClick, callback)}\n      />\n    );\n  });\n\n  ActionButton.displayName = displayName;\n\n  return ActionButton;\n};\n"],"names":[],"mappings":";;;;AAAA;AAMA,SAAS,iBAAiB;AAC1B,SAAS,4BAA4B;AAmC/B;;;;;AAtBC,IAAM,qBAAqB,CAChC,aACA,iBACA,eAA8C,CAAC,CAAA,KAC5C;IACH,MAAM,eAAe,uNAAA,EAGnB,CAAC,OAAO,iBAAiB;QACzB,MAAM,iBAAiB,CAAC;QACxB,MAAM,iBAAiB,CAAC;QAEvB,OAAO,IAAA,CAAK,KAAK,EAAgC,OAAA,CAAQ,CAAC,QAAQ;YACjE,IAAI,aAAa,QAAA,CAAS,GAAmB,GAAG;gBAC7C,cAAA,CAAuB,GAAG,CAAA,GAAI,KAAA,CAAM,GAAG,CAAA;YAC1C,OAAO;gBACJ,cAAA,CAAuB,GAAG,CAAA,GAAI,KAAA,CAAM,GAAG,CAAA;YAC1C;QACF,CAAC;QAED,MAAM,WAAW,gBAAgB,cAAwB,KAAK,KAAA;QAC9D,OACE,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,wKAAC,YAAA,CAAU,MAAA,EAAV;YACC,MAAK;YACJ,GAAG,cAAA;YACJ,KAAK;YACL,UAAU,eAAe,QAAA,IAAY,CAAC;YACtC,0KAAS,uBAAA,EAAqB,eAAe,OAAA,EAAS,QAAQ;QAAA;IAGpE,CAAC;IAED,aAAa,WAAA,GAAc;IAE3B,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5498, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/primitives/threadListItem/ThreadListItemArchive.ts"],"sourcesContent":["\"use client\";\n\nimport {\n  ActionButtonElement,\n  ActionButtonProps,\n  createActionButton,\n} from \"../../utils/createActionButton\";\nimport { useThreadListItemRuntime } from \"../../context/react/ThreadListItemContext\";\nimport { useCallback } from \"react\";\n\nconst useThreadListItemArchive = () => {\n  const runtime = useThreadListItemRuntime();\n  return useCallback(() => {\n    runtime.archive();\n  }, [runtime]);\n};\n\nexport namespace ThreadListItemPrimitiveArchive {\n  export type Element = ActionButtonElement;\n  export type Props = ActionButtonProps<typeof useThreadListItemArchive>;\n}\n\nexport const ThreadListItemPrimitiveArchive = createActionButton(\n  \"ThreadListItemPrimitive.Archive\",\n  useThreadListItemArchive,\n);\n"],"names":[],"mappings":";;;;AAEA;AAKA,SAAS,gCAAgC;AACzC,SAAS,mBAAmB;;;;;AAE5B,IAAM,2BAA2B,MAAM;IACrC,MAAM,8MAAU,2BAAA,CAAyB;IACzC,iNAAO,cAAA,EAAY,MAAM;QACvB,QAAQ,OAAA,CAAQ;IAClB,GAAG;QAAC,OAAO;KAAC;AACd;AAOO,IAAM,uNAAiC,qBAAA,EAC5C,mCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5526, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/primitives/threadListItem/ThreadListItemUnarchive.ts"],"sourcesContent":["\"use client\";\n\nimport {\n  ActionButtonElement,\n  ActionButtonProps,\n  createActionButton,\n} from \"../../utils/createActionButton\";\nimport { useThreadListItemRuntime } from \"../../context/react/ThreadListItemContext\";\n\nconst useThreadListItemUnarchive = () => {\n  const runtime = useThreadListItemRuntime();\n  return () => {\n    runtime.unarchive();\n  };\n};\n\nexport namespace ThreadListItemPrimitiveUnarchive {\n  export type Element = ActionButtonElement;\n  export type Props = ActionButtonProps<typeof useThreadListItemUnarchive>;\n}\n\nexport const ThreadListItemPrimitiveUnarchive = createActionButton(\n  \"ThreadListItemPrimitive.Unarchive\",\n  useThreadListItemUnarchive,\n);\n"],"names":[],"mappings":";;;;AAEA;AAKA,SAAS,gCAAgC;;;;AAEzC,IAAM,6BAA6B,MAAM;IACvC,MAAM,8MAAU,2BAAA,CAAyB;IACzC,OAAO,MAAM;QACX,QAAQ,SAAA,CAAU;IACpB;AACF;AAOO,IAAM,yNAAmC,qBAAA,EAC9C,qCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5550, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/primitives/threadListItem/ThreadListItemDelete.ts"],"sourcesContent":["\"use client\";\n\nimport {\n  ActionButtonElement,\n  ActionButtonProps,\n  createActionButton,\n} from \"../../utils/createActionButton\";\nimport { useThreadListItemRuntime } from \"../../context/react/ThreadListItemContext\";\n\nconst useThreadListItemDelete = () => {\n  const runtime = useThreadListItemRuntime();\n  return () => {\n    runtime.delete();\n  };\n};\n\nexport namespace ThreadListItemPrimitiveDelete {\n  export type Element = ActionButtonElement;\n  export type Props = ActionButtonProps<typeof useThreadListItemDelete>;\n}\n\nexport const ThreadListItemPrimitiveDelete = createActionButton(\n  \"ThreadListItemPrimitive.Delete\",\n  useThreadListItemDelete,\n);\n"],"names":[],"mappings":";;;;AAEA;AAKA,SAAS,gCAAgC;;;;AAEzC,IAAM,0BAA0B,MAAM;IACpC,MAAM,8MAAU,2BAAA,CAAyB;IACzC,OAAO,MAAM;QACX,QAAQ,MAAA,CAAO;IACjB;AACF;AAOO,IAAM,sNAAgC,qBAAA,EAC3C,kCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5574, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/primitives/threadListItem/ThreadListItemTrigger.ts"],"sourcesContent":["\"use client\";\n\nimport {\n  ActionButtonElement,\n  ActionButtonProps,\n  createActionButton,\n} from \"../../utils/createActionButton\";\nimport { useThreadListItemRuntime } from \"../../context/react/ThreadListItemContext\";\n\nconst useThreadListItemTrigger = () => {\n  const runtime = useThreadListItemRuntime();\n  return () => {\n    runtime.switchTo();\n  };\n};\n\nexport namespace ThreadListItemPrimitiveTrigger {\n  export type Element = ActionButtonElement;\n  export type Props = ActionButtonProps<typeof useThreadListItemTrigger>;\n}\n\nexport const ThreadListItemPrimitiveTrigger = createActionButton(\n  \"ThreadListItemPrimitive.Trigger\",\n  useThreadListItemTrigger,\n);\n"],"names":[],"mappings":";;;;AAEA;AAKA,SAAS,gCAAgC;;;;AAEzC,IAAM,2BAA2B,MAAM;IACrC,MAAM,8MAAU,2BAAA,CAAyB;IACzC,OAAO,MAAM;QACX,QAAQ,QAAA,CAAS;IACnB;AACF;AAOO,IAAM,uNAAiC,qBAAA,EAC5C,mCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5598, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/primitives/threadListItem/ThreadListItemTitle.tsx"],"sourcesContent":["\"use client\";\n\nimport type { FC, ReactNode } from \"react\";\nimport { useThreadListItem } from \"../../context/react/ThreadListItemContext\";\n\nexport namespace ThreadListItemPrimitiveTitle {\n  export type Props = {\n    fallback?: ReactNode;\n  };\n}\n\nexport const ThreadListItemPrimitiveTitle: FC<\n  ThreadListItemPrimitiveTitle.Props\n> = ({ fallback }) => {\n  const title = useThreadListItem((t) => t.title);\n  return <>{title || fallback}</>;\n};\n\nThreadListItemPrimitiveTitle.displayName = \"ThreadListItemPrimitive.Title\";\n"],"names":[],"mappings":";;;;AAGA,SAAS,yBAAyB;AAYzB;;;;AAJF,IAAM,+BAET,CAAC,EAAE,QAAA,CAAS,CAAA,KAAM;IACpB,MAAM,4MAAQ,oBAAA,EAAkB,CAAC,IAAM,EAAE,KAAK;IAC9C,OAAO,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EAAA,uNAAA,CAAA,WAAA,EAAA;QAAG,UAAA,SAAS;IAAA,CAAS;AAC9B;AAEA,6BAA6B,WAAA,GAAc","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5669, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/primitives/threadList/index.ts"],"sourcesContent":["export { ThreadListPrimitiveNew as New } from \"./ThreadListNew\";\nexport { ThreadListPrimitiveItems as Items } from \"./ThreadListItems\";\nexport { ThreadListPrimitiveRoot as Root } from \"./ThreadListRoot\";\n"],"names":[],"mappings":"","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5690, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/primitives/threadList/ThreadListNew.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  ActionButtonElement,\n  ActionButtonProps,\n} from \"../../utils/createActionButton\";\nimport { useAssistantRuntime, useThreadList } from \"../../context\";\nimport { forwardRef } from \"react\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\n\nconst useThreadListNew = () => {\n  const runtime = useAssistantRuntime();\n  return () => {\n    runtime.switchToNewThread();\n  };\n};\n\nexport namespace ThreadListPrimitiveNew {\n  export type Element = ActionButtonElement;\n  export type Props = ActionButtonProps<typeof useThreadListNew>;\n}\n\nexport const ThreadListPrimitiveNew = forwardRef<\n  ThreadListPrimitiveNew.Element,\n  ThreadListPrimitiveNew.Props\n>(({ onClick, disabled, ...props }, forwardedRef) => {\n  const isMain = useThreadList((t) => t.newThread === t.mainThreadId);\n  const callback = useThreadListNew();\n\n  return (\n    <Primitive.button\n      type=\"button\"\n      {...(isMain ? { \"data-active\": \"true\", \"aria-current\": \"true\" } : null)}\n      {...props}\n      ref={forwardedRef}\n      disabled={disabled || !callback}\n      onClick={composeEventHandlers(onClick, () => {\n        callback?.();\n      })}\n    />\n  );\n});\n\nThreadListPrimitiveNew.displayName = \"ThreadListPrimitive.New\";\n"],"names":[],"mappings":";;;;AAMA,SAAS,qBAAqB,qBAAqB;AACnD,SAAS,kBAAkB;AAC3B,SAAS,iBAAiB;AAC1B,SAAS,4BAA4B;AAsBjC;;;;;;;AApBJ,IAAM,mBAAmB,MAAM;IAC7B,MAAM,yMAAU,sBAAA,CAAoB;IACpC,OAAO,MAAM;QACX,QAAQ,iBAAA,CAAkB;IAC5B;AACF;AAOO,IAAM,mOAAyB,aAAA,EAGpC,CAAC,EAAE,OAAA,EAAS,QAAA,EAAU,GAAG,MAAM,CAAA,EAAG,iBAAiB;IACnD,MAAM,wMAAS,gBAAA,EAAc,CAAC,IAAM,EAAE,SAAA,KAAc,EAAE,YAAY;IAClE,MAAM,WAAW,iBAAiB;IAElC,OACE,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,wKAAC,YAAA,CAAU,MAAA,EAAV;QACC,MAAK;QACJ,GAAI,SAAS;YAAE,eAAe;YAAQ,gBAAgB;QAAO,IAAI,IAAA;QACjE,GAAG,KAAA;QACJ,KAAK;QACL,UAAU,YAAY,CAAC;QACvB,0KAAS,uBAAA,EAAqB,SAAS,MAAM;YAC3C,WAAW;QACb,CAAC;IAAA;AAGP,CAAC;AAED,uBAAuB,WAAA,GAAc","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5737, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/primitives/threadList/ThreadListItems.tsx"],"sourcesContent":["\"use client\";\n\nimport { ComponentType, FC, memo, useMemo } from \"react\";\nimport { ThreadListItemRuntimeProvider } from \"../../context/providers/ThreadListItemRuntimeProvider\";\nimport { useAssistantRuntime, useThreadList } from \"../../context\";\n\nexport namespace ThreadListPrimitiveItems {\n  export type Props = {\n    archived?: boolean | undefined;\n    components: {\n      ThreadListItem: ComponentType;\n    };\n  };\n}\n\ntype ThreadListItemProps = {\n  partIndex: number;\n  archived: boolean;\n  components: ThreadListPrimitiveItems.Props[\"components\"];\n};\n\nconst ThreadListItemImpl: FC<ThreadListItemProps> = ({\n  partIndex,\n  archived,\n  components,\n}) => {\n  const assistantRuntime = useAssistantRuntime();\n  const runtime = useMemo(\n    () =>\n      archived\n        ? assistantRuntime.threads.getArchivedItemByIndex(partIndex)\n        : assistantRuntime.threads.getItemByIndex(partIndex),\n    [assistantRuntime, partIndex, archived],\n  );\n\n  const ThreadListItemComponent = components.ThreadListItem;\n\n  return (\n    <ThreadListItemRuntimeProvider runtime={runtime}>\n      <ThreadListItemComponent />\n    </ThreadListItemRuntimeProvider>\n  );\n};\n\nconst ThreadListItem = memo(\n  ThreadListItemImpl,\n  (prev, next) =>\n    prev.partIndex === next.partIndex &&\n    prev.archived === next.archived &&\n    prev.components.ThreadListItem === next.components.ThreadListItem,\n);\n\nexport const ThreadListPrimitiveItems: FC<ThreadListPrimitiveItems.Props> = ({\n  archived = false,\n  components,\n}) => {\n  const contentLength = useThreadList((s) =>\n    archived ? s.archivedThreads.length : s.threads.length,\n  );\n\n  return Array.from({ length: contentLength }, (_, index) => (\n    <ThreadListItem\n      key={index}\n      partIndex={index}\n      archived={archived}\n      components={components}\n    />\n  ));\n};\n\nThreadListPrimitiveItems.displayName = \"ThreadListPrimitive.Items\";\n"],"names":[],"mappings":";;;;AAEA,SAA4B,MAAM,eAAe;AACjD,SAAS,qCAAqC;AAC9C,SAAS,qBAAqB,qBAAqB;AAmC7C;;;;;;AAlBN,IAAM,qBAA8C,CAAC,EACnD,SAAA,EACA,QAAA,EACA,UAAA,EACF,KAAM;IACJ,MAAM,kNAAmB,sBAAA,CAAoB;IAC7C,MAAM,cAAU,gNAAA,EACd,IACE,WACI,iBAAiB,OAAA,CAAQ,sBAAA,CAAuB,SAAS,IACzD,iBAAiB,OAAA,CAAQ,cAAA,CAAe,SAAS,GACvD;QAAC;QAAkB;QAAW,QAAQ;KAAA;IAGxC,MAAM,0BAA0B,WAAW,cAAA;IAE3C,OACE,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,8MAAC,gCAAA,EAAA;QAA8B;QAC7B,UAAA,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EAAC,yBAAA,CAAA,CAAwB;IAAA,CAC3B;AAEJ;AAEA,IAAM,2NAAiB,OAAA,EACrB,oBACA,CAAC,MAAM,OACL,KAAK,SAAA,KAAc,KAAK,SAAA,IACxB,KAAK,QAAA,KAAa,KAAK,QAAA,IACvB,KAAK,UAAA,CAAW,cAAA,KAAmB,KAAK,UAAA,CAAW,cAAA;AAGhD,IAAM,2BAA+D,CAAC,EAC3E,WAAW,KAAA,EACX,UAAA,EACF,KAAM;IACJ,MAAM,+MAAgB,gBAAA,EAAc,CAAC,IACnC,WAAW,EAAE,eAAA,CAAgB,MAAA,GAAS,EAAE,OAAA,CAAQ,MAAA;IAGlD,OAAO,MAAM,IAAA,CAAK;QAAE,QAAQ;IAAc,GAAG,CAAC,GAAG,QAC/C,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,EAAC,gBAAA;YAEC,WAAW;YACX;YACA;QAAA,GAHK;AAMX;AAEA,yBAAyB,WAAA,GAAc","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 5783, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/abhis/OneDrive/Desktop/Ethical-tax/my-app/node_modules/%40assistant-ui/react/src/primitives/threadList/ThreadListRoot.tsx"],"sourcesContent":["\"use client\";\n\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { ComponentPropsWithoutRef, ComponentRef, forwardRef } from \"react\";\n\ntype PrimitiveDivProps = ComponentPropsWithoutRef<typeof Primitive.div>;\n\nexport namespace ThreadListPrimitiveRoot {\n  export type Element = ComponentRef<typeof Primitive.div>;\n  export type Props = PrimitiveDivProps;\n}\n\nexport const ThreadListPrimitiveRoot = forwardRef<\n  ThreadListPrimitiveRoot.Element,\n  ThreadListPrimitiveRoot.Props\n>((props, ref) => {\n  return <Primitive.div {...props} ref={ref} />;\n});\n\nThreadListPrimitiveRoot.displayName = \"ThreadListPrimitive.Root\";\n"],"names":[],"mappings":";;;;AAEA,SAAS,iBAAiB;AAC1B,SAAiD,kBAAkB;AAa1D;;;;;AAJF,IAAM,oOAA0B,aAAA,EAGrC,CAAC,OAAO,QAAQ;IAChB,OAAO,aAAA,GAAA,CAAA,GAAA,uNAAA,CAAA,MAAA,wKAAC,YAAA,CAAU,GAAA,EAAV;QAAe,GAAG,KAAA;QAAO;IAAA,CAAU;AAC7C,CAAC;AAED,wBAAwB,WAAA,GAAc","ignoreList":[0],"debugId":null}}]
}